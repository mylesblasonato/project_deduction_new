//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 accumBufferAdd[1];
.global .align 1 .b8 accumBufferLerp[1];
.global .align 1 .b8 GBufferPos[1];
.global .align 1 .b8 GBufferNormal[1];
.global .align 1 .b8 GBufferAtten[1];
.global .align 1 .b8 colorOutput[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 1 .b8 globalLights[1];
.global .align 1 .b8 localLights[1];
.global .align 1 .b8 localLightIndices[1];
.global .align 4 .u32 tileCubemap;
.global .align 4 .b8 cameraRht[12];
.global .align 4 .b8 cameraUp[12];
.global .align 4 .b8 cameraFwd[12];
.global .align 4 .b8 cameraPos[12];
.global .align 4 .f32 cameraFov;
.global .align 4 .f32 cameraExp;
.global .align 4 .f32 integration;
.global .align 4 .u32 finalBounceFlag;
.global .align 4 .u32 bounceFlag;
.global .align 16 .b8 rndOffset[16];
.global .align 4 .u32 firstSkylight;
.global .align 4 .f32 backFaceWeight;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11tileCubemapE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraRhtE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8cameraUpE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraFwdE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraFovE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraExpE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11integrationE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15finalBounceFlagE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10bounceFlagE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9rndOffsetE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13firstSkylightE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14backFaceWeightE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename11tileCubemapE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraRhtE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8cameraUpE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraFwdE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraFovE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraExpE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11integrationE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename15finalBounceFlagE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename10bounceFlagE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9rndOffsetE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename13firstSkylightE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14backFaceWeightE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11tileCubemapE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraRhtE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8cameraUpE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraFwdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraFovE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraExpE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11integrationE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15finalBounceFlagE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10bounceFlagE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9rndOffsetE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13firstSkylightE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14backFaceWeightE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11tileCubemapE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraRhtE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8cameraUpE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraFwdE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraFovE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraExpE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11integrationE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15finalBounceFlagE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10bounceFlagE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9rndOffsetE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13firstSkylightE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14backFaceWeightE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11tileCubemapE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraRhtE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8cameraUpE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraFwdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraFovE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraExpE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11integrationE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15finalBounceFlagE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10bounceFlagE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9rndOffsetE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13firstSkylightE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14backFaceWeightE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[60];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<146>;
	.reg .b16 	%rs<14>;
	.reg .f32 	%f<1246>;
	.reg .b32 	%r<747>;
	.reg .b64 	%rd<248>;


	mov.u64 	%rd247, __local_depot0;
	cvta.local.u64 	%SP, %rd247;
	ld.global.v2.u32 	{%r226, %r227}, [pixelID];
	ld.global.v4.u32 	{%r229, %r230, %r231, %r232}, [rndOffset];
	add.s32 	%r234, %r229, %r226;
	and.b32  	%r235, %r234, 255;
	add.s32 	%r238, %r230, %r227;
	and.b32  	%r239, %r238, 255;
	add.s32 	%r241, %r231, %r226;
	and.b32  	%r242, %r241, 255;
	add.s32 	%r244, %r232, %r227;
	and.b32  	%r245, %r244, 255;
	cvt.u64.u32	%rd56, %r235;
	cvt.u64.u32	%rd57, %r239;
	mov.u64 	%rd72, rnd_seeds;
	cvta.global.u64 	%rd43, %rd72;
	mov.u32 	%r224, 2;
	mov.u32 	%r225, 3;
	mov.u64 	%rd240, 0;
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd43, %r224, %r225, %rd56, %rd57, %rd240, %rd240);
	// inline asm
	ld.u8 	%rs4, [%rd42];
	cvt.rn.f32.u16	%f374, %rs4;
	div.rn.f32 	%f1, %f374, 0f437F0000;
	// inline asm
	call (%rd48), _rt_buffer_get_64, (%rd43, %r224, %r225, %rd56, %rd57, %rd240, %rd240);
	// inline asm
	ld.u8 	%rs5, [%rd48+1];
	cvt.rn.f32.u16	%f375, %rs5;
	div.rn.f32 	%f2, %f375, 0f437F0000;
	// inline asm
	call (%rd54), _rt_buffer_get_64, (%rd43, %r224, %r225, %rd56, %rd57, %rd240, %rd240);
	// inline asm
	ld.u8 	%rs6, [%rd54+2];
	cvt.rn.f32.u16	%f376, %rs6;
	div.rn.f32 	%f3, %f376, 0f437F0000;
	cvt.u64.u32	%rd68, %r242;
	cvt.u64.u32	%rd69, %r245;
	// inline asm
	call (%rd60), _rt_buffer_get_64, (%rd43, %r224, %r225, %rd68, %rd69, %rd240, %rd240);
	// inline asm
	ld.u8 	%rs1, [%rd60];
	// inline asm
	call (%rd66), _rt_buffer_get_64, (%rd43, %r224, %r225, %rd68, %rd69, %rd240, %rd240);
	// inline asm
	ld.global.u32 	%r246, [bounceFlag];
	setp.eq.s32	%p3, %r246, 0;
	@%p3 bra 	BB0_48;

	ld.u8 	%rs7, [%rd66+1];
	cvt.rn.f32.u16	%f377, %rs7;
	div.rn.f32 	%f378, %f377, 0f437F0000;
	cvt.rn.f32.u16	%f379, %rs1;
	div.rn.f32 	%f380, %f379, 0f437F0000;
	ld.global.v2.u32 	{%r251, %r252}, [pixelID];
	cvt.u64.u32	%rd75, %r251;
	cvt.u64.u32	%rd76, %r252;
	mov.u64 	%rd85, GBufferPos;
	cvta.global.u64 	%rd74, %rd85;
	mov.u32 	%r250, 12;
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd74, %r224, %r250, %rd75, %rd76, %rd240, %rd240);
	// inline asm
	ld.f32 	%f1172, [%rd73+8];
	ld.f32 	%f1171, [%rd73+4];
	ld.f32 	%f1170, [%rd73];
	ld.global.v2.u32 	{%r255, %r256}, [pixelID];
	cvt.u64.u32	%rd81, %r255;
	cvt.u64.u32	%rd82, %r256;
	mov.u64 	%rd86, GBufferNormal;
	cvta.global.u64 	%rd80, %rd86;
	// inline asm
	call (%rd79), _rt_buffer_get_64, (%rd80, %r224, %r250, %rd81, %rd82, %rd240, %rd240);
	// inline asm
	ld.f32 	%f9, [%rd79+4];
	ld.f32 	%f8, [%rd79+8];
	ld.f32 	%f7, [%rd79];
	abs.f32 	%f381, %f7;
	abs.f32 	%f382, %f8;
	setp.gt.f32	%p4, %f381, %f382;
	neg.f32 	%f383, %f9;
	neg.f32 	%f384, %f8;
	selp.f32	%f385, %f383, 0f00000000, %p4;
	selp.f32	%f386, %f7, %f384, %p4;
	selp.f32	%f387, 0f00000000, %f9, %p4;
	mul.f32 	%f388, %f386, %f386;
	fma.rn.f32 	%f389, %f385, %f385, %f388;
	fma.rn.f32 	%f390, %f387, %f387, %f389;
	sqrt.rn.f32 	%f391, %f390;
	rcp.rn.f32 	%f392, %f391;
	mul.f32 	%f10, %f385, %f392;
	mul.f32 	%f11, %f386, %f392;
	mul.f32 	%f12, %f387, %f392;
	sqrt.rn.f32 	%f13, %f380;
	mul.f32 	%f1161, %f378, 0f40C90FDB;
	add.u64 	%rd87, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd87;
	abs.f32 	%f15, %f1161;
	setp.neu.f32	%p5, %f15, 0f7F800000;
	mov.f32 	%f1155, %f1161;
	@%p5 bra 	BB0_3;

	mov.f32 	%f393, 0f00000000;
	mul.rn.f32 	%f1155, %f1161, %f393;

BB0_3:
	mul.f32 	%f394, %f1155, 0f3F22F983;
	cvt.rni.s32.f32	%r696, %f394;
	cvt.rn.f32.s32	%f395, %r696;
	neg.f32 	%f396, %f395;
	mov.f32 	%f397, 0f3FC90FDA;
	fma.rn.f32 	%f398, %f396, %f397, %f1155;
	mov.f32 	%f399, 0f33A22168;
	fma.rn.f32 	%f400, %f396, %f399, %f398;
	mov.f32 	%f401, 0f27C234C5;
	fma.rn.f32 	%f1156, %f396, %f401, %f400;
	abs.f32 	%f402, %f1155;
	add.s64 	%rd3, %rd2, 24;
	setp.leu.f32	%p6, %f402, 0f47CE4780;
	@%p6 bra 	BB0_14;

	mov.b32 	 %r2, %f1155;
	shr.u32 	%r3, %r2, 23;
	shl.b32 	%r261, %r2, 8;
	or.b32  	%r4, %r261, -2147483648;
	mov.u32 	%r688, 0;
	mov.u64 	%rd235, __cudart_i2opi_f;
	mov.u32 	%r687, -6;
	mov.u64 	%rd236, %rd2;

BB0_5:
	.pragma "nounroll";
	ld.const.u32 	%r264, [%rd235];
	// inline asm
	{
	mad.lo.cc.u32   %r262, %r264, %r4, %r688;
	madc.hi.u32     %r688, %r264, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd236], %r262;
	add.s64 	%rd236, %rd236, 4;
	add.s64 	%rd235, %rd235, 4;
	add.s32 	%r687, %r687, 1;
	setp.ne.s32	%p7, %r687, 0;
	@%p7 bra 	BB0_5;

	and.b32  	%r267, %r3, 255;
	add.s32 	%r268, %r267, -128;
	shr.u32 	%r269, %r268, 5;
	and.b32  	%r9, %r2, -2147483648;
	st.local.u32 	[%rd3], %r688;
	mov.u32 	%r270, 6;
	sub.s32 	%r271, %r270, %r269;
	mul.wide.s32 	%rd89, %r271, 4;
	add.s64 	%rd8, %rd2, %rd89;
	ld.local.u32 	%r689, [%rd8];
	ld.local.u32 	%r690, [%rd8+-4];
	and.b32  	%r12, %r3, 31;
	setp.eq.s32	%p8, %r12, 0;
	@%p8 bra 	BB0_8;

	mov.u32 	%r272, 32;
	sub.s32 	%r273, %r272, %r12;
	shr.u32 	%r274, %r690, %r273;
	shl.b32 	%r275, %r689, %r12;
	add.s32 	%r689, %r274, %r275;
	ld.local.u32 	%r276, [%rd8+-8];
	shr.u32 	%r277, %r276, %r273;
	shl.b32 	%r278, %r690, %r12;
	add.s32 	%r690, %r277, %r278;

BB0_8:
	shr.u32 	%r279, %r690, 30;
	shl.b32 	%r280, %r689, 2;
	add.s32 	%r691, %r279, %r280;
	shl.b32 	%r18, %r690, 2;
	shr.u32 	%r281, %r691, 31;
	shr.u32 	%r282, %r689, 30;
	add.s32 	%r19, %r281, %r282;
	setp.eq.s32	%p9, %r281, 0;
	@%p9 bra 	BB0_9;

	not.b32 	%r283, %r691;
	neg.s32 	%r693, %r18;
	setp.eq.s32	%p10, %r18, 0;
	selp.u32	%r284, 1, 0, %p10;
	add.s32 	%r691, %r284, %r283;
	xor.b32  	%r692, %r9, -2147483648;
	bra.uni 	BB0_11;

BB0_48:
	ld.global.f32 	%f1170, [cameraPos];
	ld.global.f32 	%f1171, [cameraPos+4];
	ld.global.f32 	%f1172, [cameraPos+8];
	ld.global.v2.u32 	{%r351, %r352}, [resolution];
	cvt.rn.f32.u32	%f464, %r351;
	cvt.rn.f32.u32	%f465, %r352;
	div.rn.f32 	%f466, %f464, %f465;
	ld.global.v2.u32 	{%r355, %r356}, [pixelID];
	cvt.rn.f32.u32	%f467, %r355;
	add.f32 	%f468, %f1, %f467;
	div.rn.f32 	%f469, %f468, %f464;
	cvt.rn.f32.u32	%f470, %r356;
	add.f32 	%f471, %f2, %f470;
	div.rn.f32 	%f472, %f471, %f465;
	fma.rn.f32 	%f473, %f469, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f474, %f472, 0f40000000, 0fBF800000;
	ld.global.f32 	%f475, [cameraFov];
	mul.f32 	%f476, %f466, %f475;
	ld.global.f32 	%f477, [cameraRht];
	mul.f32 	%f478, %f473, %f477;
	ld.global.f32 	%f479, [cameraRht+4];
	mul.f32 	%f480, %f473, %f479;
	ld.global.f32 	%f481, [cameraRht+8];
	mul.f32 	%f482, %f473, %f481;
	ld.global.f32 	%f483, [cameraFwd];
	fma.rn.f32 	%f484, %f476, %f478, %f483;
	ld.global.f32 	%f485, [cameraFwd+4];
	fma.rn.f32 	%f486, %f476, %f480, %f485;
	ld.global.f32 	%f487, [cameraFwd+8];
	fma.rn.f32 	%f488, %f476, %f482, %f487;
	ld.global.f32 	%f489, [cameraUp];
	mul.f32 	%f490, %f474, %f489;
	ld.global.f32 	%f491, [cameraUp+4];
	mul.f32 	%f492, %f474, %f491;
	ld.global.f32 	%f493, [cameraUp+8];
	mul.f32 	%f494, %f474, %f493;
	fma.rn.f32 	%f495, %f475, %f490, %f484;
	fma.rn.f32 	%f496, %f475, %f492, %f486;
	fma.rn.f32 	%f497, %f475, %f494, %f488;
	mul.f32 	%f498, %f496, %f496;
	fma.rn.f32 	%f499, %f495, %f495, %f498;
	fma.rn.f32 	%f500, %f497, %f497, %f499;
	sqrt.rn.f32 	%f501, %f500;
	rcp.rn.f32 	%f502, %f501;
	mul.f32 	%f62, %f495, %f502;
	mul.f32 	%f63, %f496, %f502;
	mul.f32 	%f64, %f502, %f497;
	bra.uni 	BB0_49;

BB0_9:
	mov.u32 	%r692, %r9;
	mov.u32 	%r693, %r18;

BB0_11:
	clz.b32 	%r695, %r691;
	setp.eq.s32	%p11, %r695, 0;
	shl.b32 	%r285, %r691, %r695;
	mov.u32 	%r286, 32;
	sub.s32 	%r287, %r286, %r695;
	shr.u32 	%r288, %r693, %r287;
	add.s32 	%r289, %r288, %r285;
	selp.b32	%r27, %r691, %r289, %p11;
	mov.u32 	%r290, -921707870;
	mul.hi.u32 	%r694, %r27, %r290;
	setp.eq.s32	%p12, %r9, 0;
	neg.s32 	%r291, %r19;
	selp.b32	%r696, %r19, %r291, %p12;
	setp.lt.s32	%p13, %r694, 1;
	@%p13 bra 	BB0_13;

	mul.lo.s32 	%r292, %r27, -921707870;
	shr.u32 	%r293, %r292, 31;
	shl.b32 	%r294, %r694, 1;
	add.s32 	%r694, %r293, %r294;
	add.s32 	%r695, %r695, 1;

BB0_13:
	mov.u32 	%r295, 126;
	sub.s32 	%r296, %r295, %r695;
	shl.b32 	%r297, %r296, 23;
	add.s32 	%r298, %r694, 1;
	shr.u32 	%r299, %r298, 7;
	add.s32 	%r300, %r299, 1;
	shr.u32 	%r301, %r300, 1;
	add.s32 	%r302, %r301, %r297;
	or.b32  	%r303, %r302, %r692;
	mov.b32 	 %f1156, %r303;

BB0_14:
	mul.rn.f32 	%f21, %f1156, %f1156;
	add.s32 	%r35, %r696, 1;
	and.b32  	%r36, %r35, 1;
	setp.eq.s32	%p14, %r36, 0;
	@%p14 bra 	BB0_16;

	mov.f32 	%f403, 0fBAB6061A;
	mov.f32 	%f404, 0f37CCF5CE;
	fma.rn.f32 	%f1157, %f404, %f21, %f403;
	bra.uni 	BB0_17;

BB0_16:
	mov.f32 	%f405, 0f3C08839E;
	mov.f32 	%f406, 0fB94CA1F9;
	fma.rn.f32 	%f1157, %f406, %f21, %f405;

BB0_17:
	@%p14 bra 	BB0_19;

	mov.f32 	%f407, 0f3D2AAAA5;
	fma.rn.f32 	%f408, %f1157, %f21, %f407;
	mov.f32 	%f409, 0fBF000000;
	fma.rn.f32 	%f1158, %f408, %f21, %f409;
	bra.uni 	BB0_20;

BB0_19:
	mov.f32 	%f410, 0fBE2AAAA3;
	fma.rn.f32 	%f411, %f1157, %f21, %f410;
	mov.f32 	%f412, 0f00000000;
	fma.rn.f32 	%f1158, %f411, %f21, %f412;

BB0_20:
	fma.rn.f32 	%f1159, %f1158, %f1156, %f1156;
	@%p14 bra 	BB0_22;

	mov.f32 	%f413, 0f3F800000;
	fma.rn.f32 	%f1159, %f1158, %f21, %f413;

BB0_22:
	and.b32  	%r304, %r35, 2;
	setp.eq.s32	%p17, %r304, 0;
	@%p17 bra 	BB0_24;

	mov.f32 	%f414, 0f00000000;
	mov.f32 	%f415, 0fBF800000;
	fma.rn.f32 	%f1159, %f1159, %f415, %f414;

BB0_24:
	@%p5 bra 	BB0_26;

	mov.f32 	%f416, 0f00000000;
	mul.rn.f32 	%f1161, %f1161, %f416;

BB0_26:
	mul.f32 	%f417, %f1161, 0f3F22F983;
	cvt.rni.s32.f32	%r706, %f417;
	cvt.rn.f32.s32	%f418, %r706;
	neg.f32 	%f419, %f418;
	fma.rn.f32 	%f421, %f419, %f397, %f1161;
	fma.rn.f32 	%f423, %f419, %f399, %f421;
	fma.rn.f32 	%f1162, %f419, %f401, %f423;
	abs.f32 	%f425, %f1161;
	setp.leu.f32	%p19, %f425, 0f47CE4780;
	@%p19 bra 	BB0_37;

	mov.b32 	 %r38, %f1161;
	shr.u32 	%r39, %r38, 23;
	shl.b32 	%r307, %r38, 8;
	or.b32  	%r40, %r307, -2147483648;
	mov.u32 	%r698, 0;
	mov.u64 	%rd237, __cudart_i2opi_f;
	mov.u32 	%r697, -6;
	mov.u64 	%rd238, %rd2;

BB0_28:
	.pragma "nounroll";
	ld.const.u32 	%r310, [%rd237];
	// inline asm
	{
	mad.lo.cc.u32   %r308, %r310, %r40, %r698;
	madc.hi.u32     %r698, %r310, %r40,  0;
	}
	// inline asm
	st.local.u32 	[%rd238], %r308;
	add.s64 	%rd238, %rd238, 4;
	add.s64 	%rd237, %rd237, 4;
	add.s32 	%r697, %r697, 1;
	setp.ne.s32	%p20, %r697, 0;
	@%p20 bra 	BB0_28;

	and.b32  	%r313, %r39, 255;
	add.s32 	%r314, %r313, -128;
	shr.u32 	%r315, %r314, 5;
	and.b32  	%r45, %r38, -2147483648;
	st.local.u32 	[%rd3], %r698;
	mov.u32 	%r316, 6;
	sub.s32 	%r317, %r316, %r315;
	mul.wide.s32 	%rd91, %r317, 4;
	add.s64 	%rd13, %rd2, %rd91;
	ld.local.u32 	%r699, [%rd13];
	ld.local.u32 	%r700, [%rd13+-4];
	and.b32  	%r48, %r39, 31;
	setp.eq.s32	%p21, %r48, 0;
	@%p21 bra 	BB0_31;

	mov.u32 	%r318, 32;
	sub.s32 	%r319, %r318, %r48;
	shr.u32 	%r320, %r700, %r319;
	shl.b32 	%r321, %r699, %r48;
	add.s32 	%r699, %r320, %r321;
	ld.local.u32 	%r322, [%rd13+-8];
	shr.u32 	%r323, %r322, %r319;
	shl.b32 	%r324, %r700, %r48;
	add.s32 	%r700, %r323, %r324;

BB0_31:
	shr.u32 	%r325, %r700, 30;
	shl.b32 	%r326, %r699, 2;
	add.s32 	%r701, %r325, %r326;
	shl.b32 	%r54, %r700, 2;
	shr.u32 	%r327, %r701, 31;
	shr.u32 	%r328, %r699, 30;
	add.s32 	%r55, %r327, %r328;
	setp.eq.s32	%p22, %r327, 0;
	@%p22 bra 	BB0_32;

	not.b32 	%r329, %r701;
	neg.s32 	%r703, %r54;
	setp.eq.s32	%p23, %r54, 0;
	selp.u32	%r330, 1, 0, %p23;
	add.s32 	%r701, %r330, %r329;
	xor.b32  	%r702, %r45, -2147483648;
	bra.uni 	BB0_34;

BB0_32:
	mov.u32 	%r702, %r45;
	mov.u32 	%r703, %r54;

BB0_34:
	clz.b32 	%r705, %r701;
	setp.eq.s32	%p24, %r705, 0;
	shl.b32 	%r331, %r701, %r705;
	mov.u32 	%r332, 32;
	sub.s32 	%r333, %r332, %r705;
	shr.u32 	%r334, %r703, %r333;
	add.s32 	%r335, %r334, %r331;
	selp.b32	%r63, %r701, %r335, %p24;
	mov.u32 	%r336, -921707870;
	mul.hi.u32 	%r704, %r63, %r336;
	setp.eq.s32	%p25, %r45, 0;
	neg.s32 	%r337, %r55;
	selp.b32	%r706, %r55, %r337, %p25;
	setp.lt.s32	%p26, %r704, 1;
	@%p26 bra 	BB0_36;

	mul.lo.s32 	%r338, %r63, -921707870;
	shr.u32 	%r339, %r338, 31;
	shl.b32 	%r340, %r704, 1;
	add.s32 	%r704, %r339, %r340;
	add.s32 	%r705, %r705, 1;

BB0_36:
	mov.u32 	%r341, 126;
	sub.s32 	%r342, %r341, %r705;
	shl.b32 	%r343, %r342, 23;
	add.s32 	%r344, %r704, 1;
	shr.u32 	%r345, %r344, 7;
	add.s32 	%r346, %r345, 1;
	shr.u32 	%r347, %r346, 1;
	add.s32 	%r348, %r347, %r343;
	or.b32  	%r349, %r348, %r702;
	mov.b32 	 %f1162, %r349;

BB0_37:
	mul.rn.f32 	%f38, %f1162, %f1162;
	and.b32  	%r71, %r706, 1;
	setp.eq.s32	%p27, %r71, 0;
	@%p27 bra 	BB0_39;

	mov.f32 	%f426, 0fBAB6061A;
	mov.f32 	%f427, 0f37CCF5CE;
	fma.rn.f32 	%f1163, %f427, %f38, %f426;
	bra.uni 	BB0_40;

BB0_39:
	mov.f32 	%f428, 0f3C08839E;
	mov.f32 	%f429, 0fB94CA1F9;
	fma.rn.f32 	%f1163, %f429, %f38, %f428;

BB0_40:
	@%p27 bra 	BB0_42;

	mov.f32 	%f430, 0f3D2AAAA5;
	fma.rn.f32 	%f431, %f1163, %f38, %f430;
	mov.f32 	%f432, 0fBF000000;
	fma.rn.f32 	%f1164, %f431, %f38, %f432;
	bra.uni 	BB0_43;

BB0_42:
	mov.f32 	%f433, 0fBE2AAAA3;
	fma.rn.f32 	%f434, %f1163, %f38, %f433;
	mov.f32 	%f435, 0f00000000;
	fma.rn.f32 	%f1164, %f434, %f38, %f435;

BB0_43:
	fma.rn.f32 	%f1165, %f1164, %f1162, %f1162;
	@%p27 bra 	BB0_45;

	mov.f32 	%f436, 0f3F800000;
	fma.rn.f32 	%f1165, %f1164, %f38, %f436;

BB0_45:
	and.b32  	%r350, %r706, 2;
	setp.eq.s32	%p30, %r350, 0;
	@%p30 bra 	BB0_47;

	mov.f32 	%f437, 0f00000000;
	mov.f32 	%f438, 0fBF800000;
	fma.rn.f32 	%f1165, %f1165, %f438, %f437;

BB0_47:
	mul.f32 	%f439, %f13, %f1159;
	mul.f32 	%f440, %f439, %f439;
	mov.f32 	%f441, 0f3F800000;
	sub.f32 	%f442, %f441, %f440;
	mul.f32 	%f443, %f13, %f1165;
	mul.f32 	%f444, %f443, %f443;
	sub.f32 	%f445, %f442, %f444;
	mov.f32 	%f446, 0f00000000;
	max.f32 	%f447, %f446, %f445;
	sqrt.rn.f32 	%f448, %f447;
	mul.f32 	%f449, %f10, %f443;
	mul.f32 	%f450, %f11, %f443;
	mul.f32 	%f451, %f12, %f443;
	mul.f32 	%f452, %f8, %f11;
	mul.f32 	%f453, %f9, %f12;
	sub.f32 	%f454, %f452, %f453;
	fma.rn.f32 	%f455, %f454, %f439, %f449;
	mul.f32 	%f456, %f7, %f12;
	mul.f32 	%f457, %f8, %f10;
	sub.f32 	%f458, %f456, %f457;
	fma.rn.f32 	%f459, %f458, %f439, %f450;
	mul.f32 	%f460, %f9, %f10;
	mul.f32 	%f461, %f7, %f11;
	sub.f32 	%f462, %f460, %f461;
	fma.rn.f32 	%f463, %f462, %f439, %f451;
	fma.rn.f32 	%f62, %f7, %f448, %f455;
	fma.rn.f32 	%f63, %f9, %f448, %f459;
	fma.rn.f32 	%f64, %f8, %f448, %f463;

BB0_49:
	add.u64 	%rd98, %SP, 32;
	cvta.to.local.u64 	%rd99, %rd98;
	add.s64 	%rd14, %rd99, 12;
	mov.u32 	%r361, -1082130432;
	st.local.u32 	[%rd99+12], %r361;
	mov.u32 	%r362, 0;
	st.local.u32 	[%rd99], %r362;
	st.local.u32 	[%rd99+4], %r362;
	st.local.u32 	[%rd99+8], %r362;
	st.local.u32 	[%rd99+16], %r362;
	st.local.u32 	[%rd99+20], %r362;
	st.local.u32 	[%rd99+24], %r362;
	ld.global.v2.u32 	{%r363, %r364}, [pixelID];
	cvt.u64.u32	%rd94, %r363;
	cvt.u64.u32	%rd95, %r364;
	mov.u64 	%rd100, GBufferAtten;
	cvta.global.u64 	%rd93, %rd100;
	mov.u32 	%r360, 12;
	// inline asm
	call (%rd92), _rt_buffer_get_64, (%rd93, %r224, %r360, %rd94, %rd95, %rd240, %rd240);
	// inline asm
	ld.f32 	%f70, [%rd92+8];
	ld.f32 	%f68, [%rd92+4];
	ld.f32 	%f69, [%rd92];
	add.f32 	%f503, %f69, %f68;
	add.f32 	%f504, %f70, %f503;
	ld.global.u32 	%r367, [bounceFlag];
	setp.ne.s32	%p31, %r367, 0;
	setp.eq.f32	%p32, %f504, 0f00000000;
	and.pred  	%p33, %p31, %p32;
	@%p33 bra 	BB0_51;

	ld.global.u32 	%r368, [root];
	mov.u32 	%r369, 0;
	mov.f32 	%f511, 0f00000000;
	mov.f32 	%f512, 0f6C4ECB8F;
	mov.u32 	%r370, 28;
	// inline asm
	call _rt_trace_64, (%r368, %f1170, %f1171, %f1172, %f62, %f63, %f64, %r369, %f511, %f512, %rd98, %r370);
	// inline asm

BB0_51:
	ld.local.f32 	%f71, [%rd14];
	setp.ltu.f32	%p34, %f71, 0f00000000;
	@%p34 bra 	BB0_188;
	bra.uni 	BB0_52;

BB0_188:
	ld.global.u32 	%r628, [bounceFlag];
	setp.eq.s32	%p133, %r628, 0;
	selp.u16	%rs13, 1, 0, %p133;
	mov.f32 	%f1231, 0f00000000;
	mov.f32 	%f1232, %f1231;
	mov.f32 	%f1233, %f1231;
	mov.f32 	%f1234, %f1231;
	mov.f32 	%f1235, %f1231;
	mov.f32 	%f1236, %f1231;
	mov.f32 	%f1217, %f1231;
	mov.f32 	%f1218, %f1231;
	mov.f32 	%f1219, %f1231;
	bra.uni 	BB0_189;

BB0_52:
	fma.rn.f32 	%f513, %f62, %f71, %f1170;
	fma.rn.f32 	%f514, %f63, %f71, %f1171;
	fma.rn.f32 	%f515, %f64, %f71, %f1172;
	mul.f32 	%f516, %f513, 0f3456BF95;
	mul.f32 	%f517, %f514, 0f3456BF95;
	mul.f32 	%f518, %f515, 0f3456BF95;
	abs.f32 	%f519, %f516;
	abs.f32 	%f520, %f517;
	abs.f32 	%f521, %f518;
	max.f32 	%f522, %f519, %f520;
	max.f32 	%f523, %f522, %f521;
	mov.f32 	%f524, 0f38D1B717;
	max.f32 	%f525, %f523, %f524;
	ld.local.f32 	%f526, [%rd14+-12];
	ld.local.f32 	%f527, [%rd14+-8];
	ld.local.f32 	%f528, [%rd14+-4];
	fma.rn.f32 	%f72, %f525, %f526, %f513;
	fma.rn.f32 	%f73, %f525, %f527, %f514;
	fma.rn.f32 	%f74, %f525, %f528, %f515;
	ld.global.v2.u32 	{%r375, %r376}, [pixelID];
	cvt.u64.u32	%rd104, %r375;
	cvt.u64.u32	%rd105, %r376;
	mov.u64 	%rd114, GBufferPos;
	cvta.global.u64 	%rd103, %rd114;
	// inline asm
	call (%rd102), _rt_buffer_get_64, (%rd103, %r224, %r360, %rd104, %rd105, %rd240, %rd240);
	// inline asm
	st.f32 	[%rd102+8], %f74;
	st.f32 	[%rd102+4], %f73;
	st.f32 	[%rd102], %f72;
	ld.global.v2.u32 	{%r379, %r380}, [pixelID];
	cvt.u64.u32	%rd110, %r379;
	cvt.u64.u32	%rd111, %r380;
	mov.u64 	%rd115, GBufferNormal;
	cvta.global.u64 	%rd109, %rd115;
	// inline asm
	call (%rd108), _rt_buffer_get_64, (%rd109, %r224, %r360, %rd110, %rd111, %rd240, %rd240);
	// inline asm
	ld.local.f32 	%f529, [%rd14+-12];
	ld.local.f32 	%f530, [%rd14+-8];
	ld.local.f32 	%f531, [%rd14+-4];
	st.f32 	[%rd108+8], %f531;
	st.f32 	[%rd108+4], %f530;
	st.f32 	[%rd108], %f529;
	ld.local.f32 	%f532, [%rd14+12];
	ld.local.f32 	%f533, [%rd14+8];
	ld.local.f32 	%f534, [%rd14+4];
	setp.lt.f32	%p35, %f534, 0f00000000;
	neg.f32 	%f535, %f534;
	selp.f32	%f536, %f535, %f534, %p35;
	ld.global.f32 	%f537, [backFaceWeight];
	selp.f32	%f538, %f537, 0f3F800000, %p35;
	cvt.rmi.f32.f32	%f539, %f536;
	cvt.rmi.f32.f32	%f540, %f533;
	cvt.rmi.f32.f32	%f541, %f532;
	sub.f32 	%f542, %f536, %f539;
	sub.f32 	%f543, %f533, %f540;
	sub.f32 	%f544, %f532, %f541;
	mul.f32 	%f1234, %f538, %f542;
	mul.f32 	%f1235, %f538, %f543;
	mul.f32 	%f1236, %f538, %f544;
	mul.f32 	%f1231, %f539, 0f3B808081;
	mul.f32 	%f1232, %f540, 0f3B808081;
	mul.f32 	%f1233, %f541, 0f3B808081;
	ld.global.u32 	%r383, [bounceFlag];
	setp.lt.s32	%p36, %r383, 1;
	@%p36 bra 	BB0_54;

	mul.f32 	%f1234, %f69, %f1234;
	mul.f32 	%f1235, %f68, %f1235;
	mul.f32 	%f1236, %f70, %f1236;
	mul.f32 	%f1231, %f69, %f1231;
	mul.f32 	%f1232, %f68, %f1232;
	mul.f32 	%f1233, %f70, %f1233;

BB0_54:
	mov.u64 	%rd121, globalLights;
	cvta.global.u64 	%rd120, %rd121;
	mov.u32 	%r384, 1;
	mov.u32 	%r385, 48;
	// inline asm
	call (%rd116, %rd117, %rd118, %rd119), _rt_buffer_get_size_64, (%rd120, %r384, %r385);
	// inline asm
	cvt.u32.u64	%r72, %rd116;
	setp.eq.s32	%p37, %r72, 0;
	mov.f32 	%f1217, 0f00000000;
	mov.f32 	%f1218, %f1217;
	mov.f32 	%f1219, %f1217;
	@%p37 bra 	BB0_162;

	// inline asm
	call (%rd122, %rd123, %rd124, %rd125), _rt_buffer_get_size_64, (%rd120, %r384, %r385);
	// inline asm
	cvt.u32.u64	%r390, %rd122;
	cvt.rn.f32.u32	%f548, %r390;
	mul.f32 	%f549, %f3, %f548;
	cvt.rzi.u32.f32	%r391, %f549;
	add.s32 	%r392, %r390, -1;
	min.u32 	%r393, %r391, %r392;
	cvt.u64.u32	%rd129, %r393;
	// inline asm
	call (%rd127), _rt_buffer_get_64, (%rd120, %r384, %r385, %rd129, %rd240, %rd240, %rd240);
	// inline asm
	ld.v4.f32 	{%f550, %f551, %f552, %f553}, [%rd127+32];
	ld.v4.f32 	{%f554, %f555, %f556, %f557}, [%rd127+16];
	ld.v4.f32 	{%f558, %f559, %f560, %f561}, [%rd127];
	setp.lt.f32	%p38, %f558, 0f3F800000;
	@%p38 bra 	BB0_109;
	bra.uni 	BB0_56;

BB0_109:
	fma.rn.f32 	%f681, %f559, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f682, %f560, 0f40000000, 0fBF800000;
	abs.f32 	%f683, %f681;
	mov.f32 	%f1213, 0f3F800000;
	sub.f32 	%f685, %f1213, %f683;
	abs.f32 	%f686, %f682;
	sub.f32 	%f687, %f685, %f686;
	neg.f32 	%f688, %f687;
	cvt.sat.f32.f32	%f689, %f688;
	setp.ltu.f32	%p71, %f681, 0f00000000;
	neg.f32 	%f690, %f689;
	selp.f32	%f691, %f689, %f690, %p71;
	add.f32 	%f692, %f681, %f691;
	setp.ltu.f32	%p72, %f682, 0f00000000;
	selp.f32	%f693, %f689, %f690, %p72;
	add.f32 	%f694, %f682, %f693;
	mul.f32 	%f695, %f694, %f694;
	fma.rn.f32 	%f696, %f692, %f692, %f695;
	fma.rn.f32 	%f697, %f687, %f687, %f696;
	sqrt.rn.f32 	%f698, %f697;
	rcp.rn.f32 	%f699, %f698;
	mul.f32 	%f180, %f699, %f692;
	mul.f32 	%f181, %f699, %f694;
	mul.f32 	%f182, %f687, %f699;
	ld.local.f32 	%f700, [%rd14+-12];
	mul.f32 	%f701, %f700, %f180;
	ld.local.f32 	%f702, [%rd14+-8];
	mul.f32 	%f703, %f181, %f702;
	neg.f32 	%f704, %f703;
	sub.f32 	%f705, %f704, %f701;
	ld.local.f32 	%f706, [%rd14+-4];
	mul.f32 	%f707, %f182, %f706;
	sub.f32 	%f1200, %f705, %f707;
	setp.gt.f32	%p73, %f1200, 0f00000000;
	setp.neu.f32	%p74, %f561, 0f00000000;
	and.pred  	%p75, %p73, %p74;
	@!%p75 bra 	BB0_111;
	bra.uni 	BB0_110;

BB0_110:
	abs.f32 	%f716, %f180;
	abs.f32 	%f717, %f182;
	setp.gt.f32	%p76, %f716, %f717;
	neg.f32 	%f718, %f181;
	selp.f32	%f719, %f718, 0f00000000, %p76;
	neg.f32 	%f720, %f182;
	selp.f32	%f721, %f180, %f720, %p76;
	selp.f32	%f722, 0f00000000, %f181, %p76;
	mul.f32 	%f723, %f721, %f721;
	fma.rn.f32 	%f724, %f719, %f719, %f723;
	fma.rn.f32 	%f725, %f722, %f722, %f724;
	sqrt.rn.f32 	%f726, %f725;
	rcp.rn.f32 	%f727, %f726;
	mul.f32 	%f728, %f719, %f727;
	mul.f32 	%f729, %f721, %f727;
	mul.f32 	%f730, %f722, %f727;
	mul.f32 	%f731, %f182, %f729;
	mul.f32 	%f732, %f181, %f730;
	sub.f32 	%f733, %f731, %f732;
	mul.f32 	%f734, %f180, %f730;
	mul.f32 	%f735, %f182, %f728;
	sub.f32 	%f736, %f734, %f735;
	mul.f32 	%f737, %f181, %f728;
	mul.f32 	%f738, %f180, %f729;
	sub.f32 	%f739, %f737, %f738;
	mul.f32 	%f740, %f73, %f736;
	fma.rn.f32 	%f741, %f72, %f733, %f740;
	fma.rn.f32 	%f742, %f74, %f739, %f741;
	fma.rn.f32 	%f712, %f550, %f742, %f552;
	mul.f32 	%f743, %f73, %f729;
	fma.rn.f32 	%f744, %f72, %f728, %f743;
	fma.rn.f32 	%f745, %f74, %f730, %f744;
	fma.rn.f32 	%f713, %f551, %f745, %f553;
	cvt.rzi.s32.f32	%r495, %f561;
	mov.f32 	%f715, 0f00000000;
	// inline asm
	call (%f708, %f709, %f710, %f711), _rt_texture_get_f_id, (%r495, %r224, %f712, %f713, %f715, %f715);
	// inline asm
	mul.f32 	%f1200, %f1200, %f708;

BB0_111:
	mov.f32 	%f1214, 0f00000000;
	setp.le.f32	%p77, %f1200, 0f00000000;
	mov.f32 	%f1215, %f1214;
	mov.f32 	%f1216, %f1214;
	@%p77 bra 	BB0_161;

	abs.f32 	%f750, %f180;
	abs.f32 	%f751, %f182;
	setp.gt.f32	%p78, %f750, %f751;
	neg.f32 	%f752, %f181;
	selp.f32	%f753, %f752, 0f00000000, %p78;
	neg.f32 	%f754, %f182;
	selp.f32	%f755, %f180, %f754, %p78;
	selp.f32	%f756, 0f00000000, %f181, %p78;
	mul.f32 	%f757, %f755, %f755;
	fma.rn.f32 	%f758, %f753, %f753, %f757;
	fma.rn.f32 	%f759, %f756, %f756, %f758;
	sqrt.rn.f32 	%f760, %f759;
	rcp.rn.f32 	%f761, %f760;
	mul.f32 	%f186, %f753, %f761;
	mul.f32 	%f187, %f755, %f761;
	mul.f32 	%f188, %f756, %f761;
	setp.ltu.f32	%p79, %f554, 0f00000000;
	@%p79 bra 	BB0_160;

	sqrt.rn.f32 	%f189, %f1;
	add.u64 	%rd152, %SP, 0;
	cvta.to.local.u64 	%rd28, %rd152;
	mul.f32 	%f1207, %f2, 0f40C90FDB;
	abs.f32 	%f191, %f1207;
	setp.neu.f32	%p80, %f191, 0f7F800000;
	mov.f32 	%f1201, %f1207;
	@%p80 bra 	BB0_115;

	mov.f32 	%f762, 0f00000000;
	mul.rn.f32 	%f1201, %f1207, %f762;

BB0_115:
	mul.f32 	%f763, %f1201, 0f3F22F983;
	cvt.rni.s32.f32	%r736, %f763;
	cvt.rn.f32.s32	%f764, %r736;
	neg.f32 	%f765, %f764;
	mov.f32 	%f766, 0f3FC90FDA;
	fma.rn.f32 	%f767, %f765, %f766, %f1201;
	mov.f32 	%f768, 0f33A22168;
	fma.rn.f32 	%f769, %f765, %f768, %f767;
	mov.f32 	%f770, 0f27C234C5;
	fma.rn.f32 	%f1202, %f765, %f770, %f769;
	abs.f32 	%f771, %f1201;
	add.s64 	%rd29, %rd28, 24;
	setp.leu.f32	%p81, %f771, 0f47CE4780;
	@%p81 bra 	BB0_126;

	mov.b32 	 %r144, %f1201;
	shr.u32 	%r145, %r144, 23;
	shl.b32 	%r499, %r144, 8;
	or.b32  	%r146, %r499, -2147483648;
	mov.u32 	%r728, 0;
	mov.u64 	%rd243, __cudart_i2opi_f;
	mov.u32 	%r727, -6;
	mov.u64 	%rd244, %rd28;

BB0_117:
	.pragma "nounroll";
	ld.const.u32 	%r502, [%rd243];
	// inline asm
	{
	mad.lo.cc.u32   %r500, %r502, %r146, %r728;
	madc.hi.u32     %r728, %r502, %r146,  0;
	}
	// inline asm
	st.local.u32 	[%rd244], %r500;
	add.s64 	%rd244, %rd244, 4;
	add.s64 	%rd243, %rd243, 4;
	add.s32 	%r727, %r727, 1;
	setp.ne.s32	%p82, %r727, 0;
	@%p82 bra 	BB0_117;

	and.b32  	%r505, %r145, 255;
	add.s32 	%r506, %r505, -128;
	shr.u32 	%r507, %r506, 5;
	and.b32  	%r151, %r144, -2147483648;
	st.local.u32 	[%rd29], %r728;
	mov.u32 	%r508, 6;
	sub.s32 	%r509, %r508, %r507;
	mul.wide.s32 	%rd154, %r509, 4;
	add.s64 	%rd34, %rd28, %rd154;
	ld.local.u32 	%r729, [%rd34];
	ld.local.u32 	%r730, [%rd34+-4];
	and.b32  	%r154, %r145, 31;
	setp.eq.s32	%p83, %r154, 0;
	@%p83 bra 	BB0_120;

	mov.u32 	%r510, 32;
	sub.s32 	%r511, %r510, %r154;
	shr.u32 	%r512, %r730, %r511;
	shl.b32 	%r513, %r729, %r154;
	add.s32 	%r729, %r512, %r513;
	ld.local.u32 	%r514, [%rd34+-8];
	shr.u32 	%r515, %r514, %r511;
	shl.b32 	%r516, %r730, %r154;
	add.s32 	%r730, %r515, %r516;

BB0_120:
	shr.u32 	%r517, %r730, 30;
	shl.b32 	%r518, %r729, 2;
	add.s32 	%r731, %r517, %r518;
	shl.b32 	%r160, %r730, 2;
	shr.u32 	%r519, %r731, 31;
	shr.u32 	%r520, %r729, 30;
	add.s32 	%r161, %r519, %r520;
	setp.eq.s32	%p84, %r519, 0;
	@%p84 bra 	BB0_121;

	not.b32 	%r521, %r731;
	neg.s32 	%r733, %r160;
	setp.eq.s32	%p85, %r160, 0;
	selp.u32	%r522, 1, 0, %p85;
	add.s32 	%r731, %r522, %r521;
	xor.b32  	%r732, %r151, -2147483648;
	bra.uni 	BB0_123;

BB0_56:
	ld.local.f32 	%f114, [%rd14+-8];
	ld.local.f32 	%f113, [%rd14+-4];
	ld.local.f32 	%f112, [%rd14+-12];
	abs.f32 	%f562, %f112;
	abs.f32 	%f563, %f113;
	setp.gt.f32	%p39, %f562, %f563;
	neg.f32 	%f564, %f114;
	neg.f32 	%f565, %f113;
	selp.f32	%f566, %f564, 0f00000000, %p39;
	selp.f32	%f567, %f112, %f565, %p39;
	selp.f32	%f568, 0f00000000, %f114, %p39;
	mul.f32 	%f569, %f567, %f567;
	fma.rn.f32 	%f570, %f566, %f566, %f569;
	fma.rn.f32 	%f571, %f568, %f568, %f570;
	sqrt.rn.f32 	%f572, %f571;
	rcp.rn.f32 	%f573, %f572;
	mul.f32 	%f115, %f566, %f573;
	mul.f32 	%f116, %f567, %f573;
	mul.f32 	%f117, %f568, %f573;
	sqrt.rn.f32 	%f118, %f1;
	mul.f32 	%f1185, %f2, 0f40C90FDB;
	abs.f32 	%f120, %f1185;
	setp.neu.f32	%p40, %f120, 0f7F800000;
	mov.f32 	%f1179, %f1185;
	@%p40 bra 	BB0_58;

	mov.f32 	%f574, 0f00000000;
	mul.rn.f32 	%f1179, %f1185, %f574;

BB0_58:
	mul.f32 	%f575, %f1179, 0f3F22F983;
	cvt.rni.s32.f32	%r716, %f575;
	cvt.rn.f32.s32	%f576, %r716;
	neg.f32 	%f577, %f576;
	mov.f32 	%f578, 0f3FC90FDA;
	fma.rn.f32 	%f579, %f577, %f578, %f1179;
	mov.f32 	%f580, 0f33A22168;
	fma.rn.f32 	%f581, %f577, %f580, %f579;
	mov.f32 	%f582, 0f27C234C5;
	fma.rn.f32 	%f1180, %f577, %f582, %f581;
	abs.f32 	%f583, %f1179;
	setp.leu.f32	%p41, %f583, 0f47CE4780;
	@%p41 bra 	BB0_69;

	mov.b32 	 %r74, %f1179;
	shl.b32 	%r396, %r74, 8;
	or.b32  	%r75, %r396, -2147483648;
	add.u64 	%rd135, %SP, 0;
	cvta.to.local.u64 	%rd15, %rd135;
	mov.u32 	%r707, 0;
	mov.u64 	%rd239, %rd15;
	mov.u32 	%r708, %r707;

BB0_60:
	.pragma "nounroll";
	shl.b64 	%rd136, %rd240, 2;
	mov.u64 	%rd137, __cudart_i2opi_f;
	add.s64 	%rd138, %rd137, %rd136;
	ld.const.u32 	%r399, [%rd138];
	// inline asm
	{
	mad.lo.cc.u32   %r397, %r399, %r75, %r708;
	madc.hi.u32     %r708, %r399, %r75,  0;
	}
	// inline asm
	st.local.u32 	[%rd239], %r397;
	add.s32 	%r707, %r707, 1;
	cvt.s64.s32	%rd240, %r707;
	mul.wide.s32 	%rd141, %r707, 4;
	add.s64 	%rd239, %rd15, %rd141;
	setp.ne.s32	%p42, %r707, 6;
	@%p42 bra 	BB0_60;

	bfe.u32 	%r402, %r74, 23, 8;
	add.s32 	%r403, %r402, -128;
	shr.u32 	%r404, %r403, 5;
	and.b32  	%r80, %r74, -2147483648;
	cvta.to.local.u64 	%rd143, %rd135;
	st.local.u32 	[%rd143+24], %r708;
	bfe.u32 	%r81, %r74, 23, 5;
	mov.u32 	%r405, 6;
	sub.s32 	%r406, %r405, %r404;
	mul.wide.s32 	%rd144, %r406, 4;
	add.s64 	%rd20, %rd143, %rd144;
	ld.local.u32 	%r709, [%rd20];
	ld.local.u32 	%r710, [%rd20+-4];
	setp.eq.s32	%p43, %r81, 0;
	@%p43 bra 	BB0_63;

	mov.u32 	%r407, 32;
	sub.s32 	%r408, %r407, %r81;
	shr.u32 	%r409, %r710, %r408;
	shl.b32 	%r410, %r709, %r81;
	add.s32 	%r709, %r409, %r410;
	ld.local.u32 	%r411, [%rd20+-8];
	shr.u32 	%r412, %r411, %r408;
	shl.b32 	%r413, %r710, %r81;
	add.s32 	%r710, %r412, %r413;

BB0_63:
	shr.u32 	%r414, %r710, 30;
	shl.b32 	%r415, %r709, 2;
	add.s32 	%r711, %r414, %r415;
	shl.b32 	%r89, %r710, 2;
	shr.u32 	%r416, %r711, 31;
	shr.u32 	%r417, %r709, 30;
	add.s32 	%r90, %r416, %r417;
	setp.eq.s32	%p44, %r416, 0;
	@%p44 bra 	BB0_64;

	not.b32 	%r418, %r711;
	neg.s32 	%r713, %r89;
	setp.eq.s32	%p45, %r89, 0;
	selp.u32	%r419, 1, 0, %p45;
	add.s32 	%r711, %r419, %r418;
	xor.b32  	%r712, %r80, -2147483648;
	bra.uni 	BB0_66;

BB0_64:
	mov.u32 	%r712, %r80;
	mov.u32 	%r713, %r89;

BB0_66:
	clz.b32 	%r715, %r711;
	setp.eq.s32	%p46, %r715, 0;
	shl.b32 	%r420, %r711, %r715;
	mov.u32 	%r421, 32;
	sub.s32 	%r422, %r421, %r715;
	shr.u32 	%r423, %r713, %r422;
	add.s32 	%r424, %r423, %r420;
	selp.b32	%r98, %r711, %r424, %p46;
	mov.u32 	%r425, -921707870;
	mul.hi.u32 	%r714, %r98, %r425;
	setp.eq.s32	%p47, %r80, 0;
	neg.s32 	%r426, %r90;
	selp.b32	%r716, %r90, %r426, %p47;
	setp.lt.s32	%p48, %r714, 1;
	@%p48 bra 	BB0_68;

	mul.lo.s32 	%r427, %r98, -921707870;
	shr.u32 	%r428, %r427, 31;
	shl.b32 	%r429, %r714, 1;
	add.s32 	%r714, %r428, %r429;
	add.s32 	%r715, %r715, 1;

BB0_68:
	mov.u32 	%r430, 126;
	sub.s32 	%r431, %r430, %r715;
	shl.b32 	%r432, %r431, 23;
	add.s32 	%r433, %r714, 1;
	shr.u32 	%r434, %r433, 7;
	add.s32 	%r435, %r434, 1;
	shr.u32 	%r436, %r435, 1;
	add.s32 	%r437, %r436, %r432;
	or.b32  	%r438, %r437, %r712;
	mov.b32 	 %f1180, %r438;

BB0_69:
	mul.rn.f32 	%f126, %f1180, %f1180;
	add.s32 	%r106, %r716, 1;
	and.b32  	%r107, %r106, 1;
	setp.eq.s32	%p49, %r107, 0;
	@%p49 bra 	BB0_71;

	mov.f32 	%f584, 0fBAB6061A;
	mov.f32 	%f585, 0f37CCF5CE;
	fma.rn.f32 	%f1181, %f585, %f126, %f584;
	bra.uni 	BB0_72;

BB0_71:
	mov.f32 	%f586, 0f3C08839E;
	mov.f32 	%f587, 0fB94CA1F9;
	fma.rn.f32 	%f1181, %f587, %f126, %f586;

BB0_72:
	@%p49 bra 	BB0_74;

	mov.f32 	%f588, 0f3D2AAAA5;
	fma.rn.f32 	%f589, %f1181, %f126, %f588;
	mov.f32 	%f590, 0fBF000000;
	fma.rn.f32 	%f1182, %f589, %f126, %f590;
	bra.uni 	BB0_75;

BB0_74:
	mov.f32 	%f591, 0fBE2AAAA3;
	fma.rn.f32 	%f592, %f1181, %f126, %f591;
	mov.f32 	%f593, 0f00000000;
	fma.rn.f32 	%f1182, %f592, %f126, %f593;

BB0_75:
	fma.rn.f32 	%f1183, %f1182, %f1180, %f1180;
	@%p49 bra 	BB0_77;

	mov.f32 	%f594, 0f3F800000;
	fma.rn.f32 	%f1183, %f1182, %f126, %f594;

BB0_77:
	and.b32  	%r439, %r106, 2;
	setp.eq.s32	%p52, %r439, 0;
	@%p52 bra 	BB0_79;

	mov.f32 	%f595, 0f00000000;
	mov.f32 	%f596, 0fBF800000;
	fma.rn.f32 	%f1183, %f1183, %f596, %f595;

BB0_79:
	@%p40 bra 	BB0_81;

	mov.f32 	%f597, 0f00000000;
	mul.rn.f32 	%f1185, %f1185, %f597;

BB0_81:
	mul.f32 	%f598, %f1185, 0f3F22F983;
	cvt.rni.s32.f32	%r726, %f598;
	cvt.rn.f32.s32	%f599, %r726;
	neg.f32 	%f600, %f599;
	fma.rn.f32 	%f602, %f600, %f578, %f1185;
	fma.rn.f32 	%f604, %f600, %f580, %f602;
	fma.rn.f32 	%f1186, %f600, %f582, %f604;
	abs.f32 	%f606, %f1185;
	setp.leu.f32	%p54, %f606, 0f47CE4780;
	@%p54 bra 	BB0_92;

	mov.b32 	 %r109, %f1185;
	shr.u32 	%r110, %r109, 23;
	shl.b32 	%r442, %r109, 8;
	or.b32  	%r111, %r442, -2147483648;
	add.u64 	%rd146, %SP, 0;
	cvta.to.local.u64 	%rd242, %rd146;
	mov.u64 	%rd241, __cudart_i2opi_f;
	mov.u32 	%r717, -6;
	mov.u32 	%r718, %r362;

BB0_83:
	.pragma "nounroll";
	ld.const.u32 	%r445, [%rd241];
	// inline asm
	{
	mad.lo.cc.u32   %r443, %r445, %r111, %r718;
	madc.hi.u32     %r718, %r445, %r111,  0;
	}
	// inline asm
	st.local.u32 	[%rd242], %r443;
	add.s64 	%rd242, %rd242, 4;
	add.s64 	%rd241, %rd241, 4;
	add.s32 	%r717, %r717, 1;
	setp.ne.s32	%p55, %r717, 0;
	@%p55 bra 	BB0_83;

	and.b32  	%r448, %r110, 255;
	add.s32 	%r449, %r448, -128;
	shr.u32 	%r450, %r449, 5;
	and.b32  	%r116, %r109, -2147483648;
	cvta.to.local.u64 	%rd148, %rd146;
	st.local.u32 	[%rd148+24], %r718;
	mov.u32 	%r451, 6;
	sub.s32 	%r452, %r451, %r450;
	mul.wide.s32 	%rd149, %r452, 4;
	add.s64 	%rd26, %rd148, %rd149;
	ld.local.u32 	%r719, [%rd26];
	ld.local.u32 	%r720, [%rd26+-4];
	and.b32  	%r119, %r110, 31;
	setp.eq.s32	%p56, %r119, 0;
	@%p56 bra 	BB0_86;

	mov.u32 	%r453, 32;
	sub.s32 	%r454, %r453, %r119;
	shr.u32 	%r455, %r720, %r454;
	shl.b32 	%r456, %r719, %r119;
	add.s32 	%r719, %r455, %r456;
	ld.local.u32 	%r457, [%rd26+-8];
	shr.u32 	%r458, %r457, %r454;
	shl.b32 	%r459, %r720, %r119;
	add.s32 	%r720, %r458, %r459;

BB0_86:
	shr.u32 	%r460, %r720, 30;
	shl.b32 	%r461, %r719, 2;
	add.s32 	%r721, %r460, %r461;
	shl.b32 	%r125, %r720, 2;
	shr.u32 	%r462, %r721, 31;
	shr.u32 	%r463, %r719, 30;
	add.s32 	%r126, %r462, %r463;
	setp.eq.s32	%p57, %r462, 0;
	@%p57 bra 	BB0_87;

	not.b32 	%r464, %r721;
	neg.s32 	%r723, %r125;
	setp.eq.s32	%p58, %r125, 0;
	selp.u32	%r465, 1, 0, %p58;
	add.s32 	%r721, %r465, %r464;
	xor.b32  	%r722, %r116, -2147483648;
	bra.uni 	BB0_89;

BB0_87:
	mov.u32 	%r722, %r116;
	mov.u32 	%r723, %r125;

BB0_89:
	clz.b32 	%r725, %r721;
	setp.eq.s32	%p59, %r725, 0;
	shl.b32 	%r466, %r721, %r725;
	mov.u32 	%r467, 32;
	sub.s32 	%r468, %r467, %r725;
	shr.u32 	%r469, %r723, %r468;
	add.s32 	%r470, %r469, %r466;
	selp.b32	%r134, %r721, %r470, %p59;
	mov.u32 	%r471, -921707870;
	mul.hi.u32 	%r724, %r134, %r471;
	setp.eq.s32	%p60, %r116, 0;
	neg.s32 	%r472, %r126;
	selp.b32	%r726, %r126, %r472, %p60;
	setp.lt.s32	%p61, %r724, 1;
	@%p61 bra 	BB0_91;

	mul.lo.s32 	%r473, %r134, -921707870;
	shr.u32 	%r474, %r473, 31;
	shl.b32 	%r475, %r724, 1;
	add.s32 	%r724, %r474, %r475;
	add.s32 	%r725, %r725, 1;

BB0_91:
	mov.u32 	%r476, 126;
	sub.s32 	%r477, %r476, %r725;
	shl.b32 	%r478, %r477, 23;
	add.s32 	%r479, %r724, 1;
	shr.u32 	%r480, %r479, 7;
	add.s32 	%r481, %r480, 1;
	shr.u32 	%r482, %r481, 1;
	add.s32 	%r483, %r482, %r478;
	or.b32  	%r484, %r483, %r722;
	mov.b32 	 %f1186, %r484;

BB0_92:
	mul.rn.f32 	%f143, %f1186, %f1186;
	and.b32  	%r142, %r726, 1;
	setp.eq.s32	%p62, %r142, 0;
	@%p62 bra 	BB0_94;

	mov.f32 	%f607, 0fBAB6061A;
	mov.f32 	%f608, 0f37CCF5CE;
	fma.rn.f32 	%f1187, %f608, %f143, %f607;
	bra.uni 	BB0_95;

BB0_94:
	mov.f32 	%f609, 0f3C08839E;
	mov.f32 	%f610, 0fB94CA1F9;
	fma.rn.f32 	%f1187, %f610, %f143, %f609;

BB0_95:
	@%p62 bra 	BB0_97;

	mov.f32 	%f611, 0f3D2AAAA5;
	fma.rn.f32 	%f612, %f1187, %f143, %f611;
	mov.f32 	%f613, 0fBF000000;
	fma.rn.f32 	%f1188, %f612, %f143, %f613;
	bra.uni 	BB0_98;

BB0_97:
	mov.f32 	%f614, 0fBE2AAAA3;
	fma.rn.f32 	%f615, %f1187, %f143, %f614;
	mov.f32 	%f616, 0f00000000;
	fma.rn.f32 	%f1188, %f615, %f143, %f616;

BB0_98:
	fma.rn.f32 	%f1189, %f1188, %f1186, %f1186;
	@%p62 bra 	BB0_100;

	mov.f32 	%f617, 0f3F800000;
	fma.rn.f32 	%f1189, %f1188, %f143, %f617;

BB0_100:
	and.b32  	%r485, %r726, 2;
	setp.eq.s32	%p65, %r485, 0;
	@%p65 bra 	BB0_102;

	mov.f32 	%f618, 0f00000000;
	mov.f32 	%f619, 0fBF800000;
	fma.rn.f32 	%f1189, %f1189, %f619, %f618;

BB0_102:
	mul.f32 	%f623, %f118, %f1183;
	mul.f32 	%f624, %f623, %f623;
	mov.f32 	%f1191, 0f3F800000;
	sub.f32 	%f626, %f1191, %f624;
	mul.f32 	%f627, %f118, %f1189;
	mul.f32 	%f628, %f627, %f627;
	sub.f32 	%f629, %f626, %f628;
	mov.f32 	%f1194, 0f00000000;
	max.f32 	%f630, %f1194, %f629;
	sqrt.rn.f32 	%f631, %f630;
	mul.f32 	%f632, %f115, %f627;
	mul.f32 	%f633, %f116, %f627;
	mul.f32 	%f634, %f117, %f627;
	mul.f32 	%f635, %f113, %f116;
	mul.f32 	%f636, %f114, %f117;
	sub.f32 	%f637, %f635, %f636;
	fma.rn.f32 	%f638, %f637, %f623, %f632;
	mul.f32 	%f639, %f112, %f117;
	mul.f32 	%f640, %f113, %f115;
	sub.f32 	%f641, %f639, %f640;
	fma.rn.f32 	%f642, %f641, %f623, %f633;
	mul.f32 	%f643, %f114, %f115;
	mul.f32 	%f644, %f112, %f116;
	sub.f32 	%f645, %f643, %f644;
	fma.rn.f32 	%f646, %f645, %f623, %f634;
	fma.rn.f32 	%f155, %f112, %f631, %f638;
	fma.rn.f32 	%f156, %f114, %f631, %f642;
	fma.rn.f32 	%f157, %f113, %f631, %f646;
	add.u64 	%rd150, %SP, 28;
	cvta.to.local.u64 	%rd27, %rd150;
	st.local.u32 	[%rd27], %r362;
	setp.gt.f32	%p66, %f156, 0f00000000;
	setp.eq.f32	%p67, %f554, 0f00000000;
	or.pred  	%p68, %p67, %p66;
	mov.f32 	%f1195, %f1194;
	mov.f32 	%f1196, %f1194;
	@!%p68 bra 	BB0_106;
	bra.uni 	BB0_103;

BB0_103:
	mov.u32 	%r490, 1065353216;
	st.local.u32 	[%rd27], %r490;
	mul.f32 	%f658, %f72, 0f3456BF95;
	abs.f32 	%f659, %f658;
	mul.f32 	%f660, %f73, 0f3456BF95;
	abs.f32 	%f661, %f660;
	mul.f32 	%f662, %f74, 0f3456BF95;
	abs.f32 	%f663, %f662;
	max.f32 	%f664, %f659, %f661;
	max.f32 	%f665, %f664, %f663;
	max.f32 	%f653, %f665, %f524;
	ld.global.u32 	%r487, [root];
	mov.f32 	%f654, 0f6C4ECB8F;
	mov.u32 	%r489, 4;
	// inline asm
	call _rt_trace_64, (%r487, %f72, %f73, %f74, %f155, %f156, %f157, %r384, %f653, %f654, %rd150, %r489);
	// inline asm
	setp.leu.f32	%p69, %f559, 0f00000000;
	mov.f32 	%f1192, %f1191;
	mov.f32 	%f1193, %f1191;
	@%p69 bra 	BB0_105;

	cvt.rzi.s32.f32	%r491, %f560;
	neg.f32 	%f673, %f155;
	neg.f32 	%f672, %f156;
	neg.f32 	%f671, %f157;
	mov.u32 	%r492, 6;
	// inline asm
	call (%f1191, %f1192, %f1193, %f670), _rt_texture_get_base_id, (%r491, %r492, %f671, %f672, %f673, %r362);
	// inline asm

BB0_105:
	ld.local.f32 	%f674, [%rd27];
	fma.rn.f32 	%f1194, %f1191, %f674, 0f00000000;
	fma.rn.f32 	%f1195, %f1192, %f674, 0f00000000;
	fma.rn.f32 	%f1196, %f1193, %f674, 0f00000000;

BB0_106:
	ld.global.u32 	%r494, [bounceFlag];
	setp.lt.s32	%p70, %r494, 1;
	@%p70 bra 	BB0_108;

	add.f32 	%f675, %f558, 0fBF800000;
	mul.f32 	%f676, %f675, 0f42C80000;
	mul.f32 	%f1194, %f676, %f1194;
	mul.f32 	%f1195, %f676, %f1195;
	mul.f32 	%f1196, %f676, %f1196;

BB0_108:
	cvt.rn.f32.u32	%f677, %r72;
	mul.f32 	%f678, %f555, %f1194;
	mul.f32 	%f1217, %f677, %f678;
	mul.f32 	%f679, %f556, %f1195;
	mul.f32 	%f1218, %f677, %f679;
	mul.f32 	%f680, %f557, %f1196;
	mul.f32 	%f1219, %f677, %f680;
	bra.uni 	BB0_162;

BB0_121:
	mov.u32 	%r732, %r151;
	mov.u32 	%r733, %r160;

BB0_123:
	clz.b32 	%r735, %r731;
	setp.eq.s32	%p86, %r735, 0;
	shl.b32 	%r523, %r731, %r735;
	mov.u32 	%r524, 32;
	sub.s32 	%r525, %r524, %r735;
	shr.u32 	%r526, %r733, %r525;
	add.s32 	%r527, %r526, %r523;
	selp.b32	%r169, %r731, %r527, %p86;
	mov.u32 	%r528, -921707870;
	mul.hi.u32 	%r734, %r169, %r528;
	setp.eq.s32	%p87, %r151, 0;
	neg.s32 	%r529, %r161;
	selp.b32	%r736, %r161, %r529, %p87;
	setp.lt.s32	%p88, %r734, 1;
	@%p88 bra 	BB0_125;

	mul.lo.s32 	%r530, %r169, -921707870;
	shr.u32 	%r531, %r530, 31;
	shl.b32 	%r532, %r734, 1;
	add.s32 	%r734, %r531, %r532;
	add.s32 	%r735, %r735, 1;

BB0_125:
	mov.u32 	%r533, 126;
	sub.s32 	%r534, %r533, %r735;
	shl.b32 	%r535, %r534, 23;
	add.s32 	%r536, %r734, 1;
	shr.u32 	%r537, %r536, 7;
	add.s32 	%r538, %r537, 1;
	shr.u32 	%r539, %r538, 1;
	add.s32 	%r540, %r539, %r535;
	or.b32  	%r541, %r540, %r732;
	mov.b32 	 %f1202, %r541;

BB0_126:
	mul.rn.f32 	%f197, %f1202, %f1202;
	add.s32 	%r177, %r736, 1;
	and.b32  	%r178, %r177, 1;
	setp.eq.s32	%p89, %r178, 0;
	@%p89 bra 	BB0_128;

	mov.f32 	%f772, 0fBAB6061A;
	mov.f32 	%f773, 0f37CCF5CE;
	fma.rn.f32 	%f1203, %f773, %f197, %f772;
	bra.uni 	BB0_129;

BB0_128:
	mov.f32 	%f774, 0f3C08839E;
	mov.f32 	%f775, 0fB94CA1F9;
	fma.rn.f32 	%f1203, %f775, %f197, %f774;

BB0_129:
	@%p89 bra 	BB0_131;

	mov.f32 	%f776, 0f3D2AAAA5;
	fma.rn.f32 	%f777, %f1203, %f197, %f776;
	mov.f32 	%f778, 0fBF000000;
	fma.rn.f32 	%f1204, %f777, %f197, %f778;
	bra.uni 	BB0_132;

BB0_131:
	mov.f32 	%f779, 0fBE2AAAA3;
	fma.rn.f32 	%f780, %f1203, %f197, %f779;
	mov.f32 	%f781, 0f00000000;
	fma.rn.f32 	%f1204, %f780, %f197, %f781;

BB0_132:
	fma.rn.f32 	%f1205, %f1204, %f1202, %f1202;
	@%p89 bra 	BB0_134;

	mov.f32 	%f782, 0f3F800000;
	fma.rn.f32 	%f1205, %f1204, %f197, %f782;

BB0_134:
	and.b32  	%r542, %r177, 2;
	setp.eq.s32	%p92, %r542, 0;
	@%p92 bra 	BB0_136;

	mov.f32 	%f783, 0f00000000;
	mov.f32 	%f784, 0fBF800000;
	fma.rn.f32 	%f1205, %f1205, %f784, %f783;

BB0_136:
	@%p80 bra 	BB0_138;

	mov.f32 	%f785, 0f00000000;
	mul.rn.f32 	%f1207, %f1207, %f785;

BB0_138:
	mul.f32 	%f786, %f1207, 0f3F22F983;
	cvt.rni.s32.f32	%r746, %f786;
	cvt.rn.f32.s32	%f787, %r746;
	neg.f32 	%f788, %f787;
	fma.rn.f32 	%f790, %f788, %f766, %f1207;
	fma.rn.f32 	%f792, %f788, %f768, %f790;
	fma.rn.f32 	%f1208, %f788, %f770, %f792;
	abs.f32 	%f794, %f1207;
	setp.leu.f32	%p94, %f794, 0f47CE4780;
	@%p94 bra 	BB0_149;

	mov.b32 	 %r180, %f1207;
	shr.u32 	%r181, %r180, 23;
	shl.b32 	%r545, %r180, 8;
	or.b32  	%r182, %r545, -2147483648;
	mov.u32 	%r738, 0;
	mov.u64 	%rd245, __cudart_i2opi_f;
	mov.u32 	%r737, -6;
	mov.u64 	%rd246, %rd28;

BB0_140:
	.pragma "nounroll";
	ld.const.u32 	%r548, [%rd245];
	// inline asm
	{
	mad.lo.cc.u32   %r546, %r548, %r182, %r738;
	madc.hi.u32     %r738, %r548, %r182,  0;
	}
	// inline asm
	st.local.u32 	[%rd246], %r546;
	add.s64 	%rd246, %rd246, 4;
	add.s64 	%rd245, %rd245, 4;
	add.s32 	%r737, %r737, 1;
	setp.ne.s32	%p95, %r737, 0;
	@%p95 bra 	BB0_140;

	and.b32  	%r551, %r181, 255;
	add.s32 	%r552, %r551, -128;
	shr.u32 	%r553, %r552, 5;
	and.b32  	%r187, %r180, -2147483648;
	st.local.u32 	[%rd29], %r738;
	mov.u32 	%r554, 6;
	sub.s32 	%r555, %r554, %r553;
	mul.wide.s32 	%rd156, %r555, 4;
	add.s64 	%rd39, %rd28, %rd156;
	ld.local.u32 	%r739, [%rd39];
	ld.local.u32 	%r740, [%rd39+-4];
	and.b32  	%r190, %r181, 31;
	setp.eq.s32	%p96, %r190, 0;
	@%p96 bra 	BB0_143;

	mov.u32 	%r556, 32;
	sub.s32 	%r557, %r556, %r190;
	shr.u32 	%r558, %r740, %r557;
	shl.b32 	%r559, %r739, %r190;
	add.s32 	%r739, %r558, %r559;
	ld.local.u32 	%r560, [%rd39+-8];
	shr.u32 	%r561, %r560, %r557;
	shl.b32 	%r562, %r740, %r190;
	add.s32 	%r740, %r561, %r562;

BB0_143:
	shr.u32 	%r563, %r740, 30;
	shl.b32 	%r564, %r739, 2;
	add.s32 	%r741, %r563, %r564;
	shl.b32 	%r196, %r740, 2;
	shr.u32 	%r565, %r741, 31;
	shr.u32 	%r566, %r739, 30;
	add.s32 	%r197, %r565, %r566;
	setp.eq.s32	%p97, %r565, 0;
	@%p97 bra 	BB0_144;

	not.b32 	%r567, %r741;
	neg.s32 	%r743, %r196;
	setp.eq.s32	%p98, %r196, 0;
	selp.u32	%r568, 1, 0, %p98;
	add.s32 	%r741, %r568, %r567;
	xor.b32  	%r742, %r187, -2147483648;
	bra.uni 	BB0_146;

BB0_144:
	mov.u32 	%r742, %r187;
	mov.u32 	%r743, %r196;

BB0_146:
	clz.b32 	%r745, %r741;
	setp.eq.s32	%p99, %r745, 0;
	shl.b32 	%r569, %r741, %r745;
	mov.u32 	%r570, 32;
	sub.s32 	%r571, %r570, %r745;
	shr.u32 	%r572, %r743, %r571;
	add.s32 	%r573, %r572, %r569;
	selp.b32	%r205, %r741, %r573, %p99;
	mov.u32 	%r574, -921707870;
	mul.hi.u32 	%r744, %r205, %r574;
	setp.eq.s32	%p100, %r187, 0;
	neg.s32 	%r575, %r197;
	selp.b32	%r746, %r197, %r575, %p100;
	setp.lt.s32	%p101, %r744, 1;
	@%p101 bra 	BB0_148;

	mul.lo.s32 	%r576, %r205, -921707870;
	shr.u32 	%r577, %r576, 31;
	shl.b32 	%r578, %r744, 1;
	add.s32 	%r744, %r577, %r578;
	add.s32 	%r745, %r745, 1;

BB0_148:
	mov.u32 	%r579, 126;
	sub.s32 	%r580, %r579, %r745;
	shl.b32 	%r581, %r580, 23;
	add.s32 	%r582, %r744, 1;
	shr.u32 	%r583, %r582, 7;
	add.s32 	%r584, %r583, 1;
	shr.u32 	%r585, %r584, 1;
	add.s32 	%r586, %r585, %r581;
	or.b32  	%r587, %r586, %r742;
	mov.b32 	 %f1208, %r587;

BB0_149:
	mul.rn.f32 	%f214, %f1208, %f1208;
	and.b32  	%r213, %r746, 1;
	setp.eq.s32	%p102, %r213, 0;
	@%p102 bra 	BB0_151;

	mov.f32 	%f795, 0fBAB6061A;
	mov.f32 	%f796, 0f37CCF5CE;
	fma.rn.f32 	%f1209, %f796, %f214, %f795;
	bra.uni 	BB0_152;

BB0_151:
	mov.f32 	%f797, 0f3C08839E;
	mov.f32 	%f798, 0fB94CA1F9;
	fma.rn.f32 	%f1209, %f798, %f214, %f797;

BB0_152:
	@%p102 bra 	BB0_154;

	mov.f32 	%f799, 0f3D2AAAA5;
	fma.rn.f32 	%f800, %f1209, %f214, %f799;
	mov.f32 	%f801, 0fBF000000;
	fma.rn.f32 	%f1210, %f800, %f214, %f801;
	bra.uni 	BB0_155;

BB0_154:
	mov.f32 	%f802, 0fBE2AAAA3;
	fma.rn.f32 	%f803, %f1209, %f214, %f802;
	mov.f32 	%f804, 0f00000000;
	fma.rn.f32 	%f1210, %f803, %f214, %f804;

BB0_155:
	fma.rn.f32 	%f1211, %f1210, %f1208, %f1208;
	@%p102 bra 	BB0_157;

	mov.f32 	%f805, 0f3F800000;
	fma.rn.f32 	%f1211, %f1210, %f214, %f805;

BB0_157:
	and.b32  	%r588, %r746, 2;
	setp.eq.s32	%p105, %r588, 0;
	@%p105 bra 	BB0_159;

	mov.f32 	%f806, 0f00000000;
	mov.f32 	%f807, 0fBF800000;
	fma.rn.f32 	%f1211, %f1211, %f807, %f806;

BB0_159:
	mul.f32 	%f816, %f189, %f1205;
	mul.f32 	%f817, %f816, %f816;
	mov.f32 	%f818, 0f3F800000;
	sub.f32 	%f819, %f818, %f817;
	mul.f32 	%f820, %f189, %f1211;
	mul.f32 	%f821, %f820, %f820;
	sub.f32 	%f822, %f819, %f821;
	mov.f32 	%f823, 0f00000000;
	max.f32 	%f824, %f823, %f822;
	sqrt.rn.f32 	%f825, %f824;
	mul.f32 	%f826, %f186, %f820;
	mul.f32 	%f827, %f187, %f820;
	mul.f32 	%f828, %f188, %f820;
	mul.f32 	%f829, %f181, %f188;
	mul.f32 	%f830, %f182, %f187;
	sub.f32 	%f831, %f830, %f829;
	fma.rn.f32 	%f832, %f831, %f816, %f826;
	mul.f32 	%f833, %f182, %f186;
	mul.f32 	%f834, %f180, %f188;
	sub.f32 	%f835, %f834, %f833;
	fma.rn.f32 	%f836, %f835, %f816, %f827;
	mul.f32 	%f837, %f180, %f187;
	mul.f32 	%f838, %f181, %f186;
	sub.f32 	%f839, %f838, %f837;
	fma.rn.f32 	%f840, %f839, %f816, %f828;
	fma.rn.f32 	%f841, %f180, %f825, %f832;
	fma.rn.f32 	%f842, %f181, %f825, %f836;
	fma.rn.f32 	%f843, %f182, %f825, %f840;
	add.f32 	%f844, %f180, %f841;
	add.f32 	%f845, %f181, %f842;
	add.f32 	%f846, %f182, %f843;
	mul.f32 	%f847, %f554, %f844;
	mul.f32 	%f848, %f554, %f845;
	mul.f32 	%f849, %f554, %f846;
	sub.f32 	%f850, %f847, %f180;
	sub.f32 	%f851, %f848, %f181;
	sub.f32 	%f852, %f849, %f182;
	mul.f32 	%f853, %f851, %f851;
	fma.rn.f32 	%f854, %f850, %f850, %f853;
	fma.rn.f32 	%f855, %f852, %f852, %f854;
	sqrt.rn.f32 	%f856, %f855;
	rcp.rn.f32 	%f857, %f856;
	mul.f32 	%f811, %f857, %f850;
	mul.f32 	%f812, %f857, %f851;
	mul.f32 	%f813, %f857, %f852;
	mul.f32 	%f858, %f72, 0f3456BF95;
	abs.f32 	%f859, %f858;
	mul.f32 	%f860, %f73, 0f3456BF95;
	abs.f32 	%f861, %f860;
	mul.f32 	%f862, %f74, 0f3456BF95;
	abs.f32 	%f863, %f862;
	max.f32 	%f864, %f859, %f861;
	max.f32 	%f865, %f864, %f863;
	max.f32 	%f814, %f865, %f524;
	add.u64 	%rd157, %SP, 28;
	cvta.to.local.u64 	%rd158, %rd157;
	mov.u32 	%r592, 1065353216;
	st.local.u32 	[%rd158], %r592;
	ld.global.u32 	%r589, [root];
	mov.f32 	%f815, 0f6C4ECB8F;
	mov.u32 	%r591, 4;
	// inline asm
	call _rt_trace_64, (%r589, %f72, %f73, %f74, %f811, %f812, %f813, %r384, %f814, %f815, %rd157, %r591);
	// inline asm
	ld.local.f32 	%f1213, [%rd158];

BB0_160:
	ld.global.u32 	%r593, [bounceFlag];
	setp.gt.s32	%p106, %r593, 0;
	mul.f32 	%f867, %f558, 0f42C80000;
	mul.f32 	%f868, %f1200, %f1213;
	mul.f32 	%f869, %f867, %f868;
	selp.f32	%f870, %f869, %f868, %p106;
	mul.f32 	%f1214, %f555, %f870;
	mul.f32 	%f1215, %f556, %f870;
	mul.f32 	%f1216, %f557, %f870;

BB0_161:
	cvt.rn.f32.u32	%f871, %r72;
	mul.f32 	%f1217, %f871, %f1214;
	mul.f32 	%f1218, %f871, %f1215;
	mul.f32 	%f1219, %f871, %f1216;

BB0_162:
	mov.u64 	%rd164, localLights;
	cvta.global.u64 	%rd163, %rd164;
	mov.u32 	%r595, 96;
	// inline asm
	call (%rd159, %rd160, %rd161, %rd162), _rt_buffer_get_size_64, (%rd163, %r384, %r595);
	// inline asm
	cvt.u32.u64	%r596, %rd159;
	setp.eq.s32	%p107, %r596, 0;
	mov.u16 	%rs13, 0;
	@%p107 bra 	BB0_189;

	ld.global.f32 	%f879, [cameraPos];
	sub.f32 	%f876, %f72, %f879;
	ld.global.f32 	%f880, [cameraPos+4];
	sub.f32 	%f877, %f73, %f880;
	ld.global.f32 	%f881, [cameraPos+8];
	sub.f32 	%f878, %f74, %f881;
	ld.global.u32 	%r597, [tileCubemap];
	mov.u32 	%r598, 6;
	mov.u32 	%r599, 0;
	// inline asm
	call (%f872, %f873, %f874, %f875), _rt_texture_get_base_id, (%r597, %r598, %f876, %f877, %f878, %r599);
	// inline asm
	mov.b32 	 %r214, %f873;
	setp.eq.s32	%p108, %r214, 0;
	@%p108 bra 	BB0_189;

	mov.b32 	 %r604, %f872;
	cvt.rn.f32.u32	%f244, %r214;
	mul.f32 	%f884, %f3, %f244;
	cvt.rzi.u32.f32	%r605, %f884;
	add.s32 	%r606, %r214, -1;
	min.u32 	%r607, %r605, %r606;
	add.s32 	%r608, %r607, %r604;
	cvt.u64.u32	%rd167, %r608;
	mov.u64 	%rd177, localLightIndices;
	cvta.global.u64 	%rd166, %rd177;
	mov.u32 	%r601, 4;
	mov.u64 	%rd176, 0;
	// inline asm
	call (%rd165), _rt_buffer_get_64, (%rd166, %r384, %r601, %rd167, %rd176, %rd176, %rd176);
	// inline asm
	ld.u32 	%rd173, [%rd165];
	// inline asm
	call (%rd171), _rt_buffer_get_64, (%rd163, %r384, %r595, %rd173, %rd176, %rd176, %rd176);
	// inline asm
	ld.v4.f32 	{%f885, %f886, %f887, %f888}, [%rd171+80];
	ld.v4.f32 	{%f889, %f890, %f891, %f892}, [%rd171+64];
	ld.v4.f32 	{%f893, %f894, %f895, %f896}, [%rd171+48];
	ld.v4.f32 	{%f1223, %f1224, %f1225, %f900}, [%rd171+32];
	ld.v4.f32 	{%f901, %f902, %f903, %f904}, [%rd171+16];
	ld.v4.f32 	{%f905, %f906, %f907, %f908}, [%rd171];
	sub.f32 	%f909, %f906, %f72;
	sub.f32 	%f910, %f907, %f73;
	sub.f32 	%f911, %f908, %f74;
	mul.f32 	%f912, %f910, %f910;
	fma.rn.f32 	%f913, %f909, %f909, %f912;
	fma.rn.f32 	%f914, %f911, %f911, %f913;
	sqrt.rn.f32 	%f272, %f914;
	rcp.rn.f32 	%f915, %f272;
	mul.f32 	%f273, %f909, %f915;
	mul.f32 	%f274, %f910, %f915;
	mul.f32 	%f275, %f911, %f915;
	mul.f32 	%f276, %f904, %f272;
	mov.f32 	%f919, 0f40800000;
	abs.f32 	%f278, %f276;
	setp.lt.f32	%p109, %f278, 0f00800000;
	mul.f32 	%f921, %f278, 0f4B800000;
	selp.f32	%f922, 0fC3170000, 0fC2FE0000, %p109;
	selp.f32	%f923, %f921, %f278, %p109;
	mov.b32 	 %r609, %f923;
	and.b32  	%r610, %r609, 8388607;
	or.b32  	%r611, %r610, 1065353216;
	mov.b32 	 %f924, %r611;
	shr.u32 	%r612, %r609, 23;
	cvt.rn.f32.u32	%f925, %r612;
	add.f32 	%f926, %f922, %f925;
	setp.gt.f32	%p110, %f924, 0f3FB504F3;
	mul.f32 	%f927, %f924, 0f3F000000;
	add.f32 	%f928, %f926, 0f3F800000;
	selp.f32	%f929, %f927, %f924, %p110;
	selp.f32	%f930, %f928, %f926, %p110;
	add.f32 	%f931, %f929, 0fBF800000;
	add.f32 	%f883, %f929, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f882,%f883;
	// inline asm
	add.f32 	%f932, %f931, %f931;
	mul.f32 	%f933, %f882, %f932;
	mul.f32 	%f934, %f933, %f933;
	mov.f32 	%f935, 0f3C4CAF63;
	mov.f32 	%f936, 0f3B18F0FE;
	fma.rn.f32 	%f937, %f936, %f934, %f935;
	mov.f32 	%f938, 0f3DAAAABD;
	fma.rn.f32 	%f939, %f937, %f934, %f938;
	mul.rn.f32 	%f940, %f939, %f934;
	mul.rn.f32 	%f941, %f940, %f933;
	sub.f32 	%f942, %f931, %f933;
	neg.f32 	%f943, %f933;
	add.f32 	%f944, %f942, %f942;
	fma.rn.f32 	%f945, %f943, %f931, %f944;
	mul.rn.f32 	%f946, %f882, %f945;
	add.f32 	%f947, %f941, %f933;
	sub.f32 	%f948, %f933, %f947;
	add.f32 	%f949, %f941, %f948;
	add.f32 	%f950, %f946, %f949;
	add.f32 	%f951, %f947, %f950;
	sub.f32 	%f952, %f947, %f951;
	add.f32 	%f953, %f950, %f952;
	mov.f32 	%f954, 0f3F317200;
	mul.rn.f32 	%f955, %f930, %f954;
	mov.f32 	%f956, 0f35BFBE8E;
	mul.rn.f32 	%f957, %f930, %f956;
	add.f32 	%f958, %f955, %f951;
	sub.f32 	%f959, %f955, %f958;
	add.f32 	%f960, %f951, %f959;
	add.f32 	%f961, %f953, %f960;
	add.f32 	%f962, %f957, %f961;
	add.f32 	%f963, %f958, %f962;
	sub.f32 	%f964, %f958, %f963;
	add.f32 	%f965, %f962, %f964;
	mul.rn.f32 	%f279, %f919, %f963;
	neg.f32 	%f966, %f279;
	fma.rn.f32 	%f967, %f919, %f963, %f966;
	fma.rn.f32 	%f968, %f919, %f965, %f967;
	mov.f32 	%f969, 0f00000000;
	fma.rn.f32 	%f280, %f969, %f963, %f968;
	add.rn.f32 	%f281, %f279, %f280;
	mov.b32 	 %r613, %f281;
	setp.eq.s32	%p1, %r613, 1118925336;
	add.s32 	%r614, %r613, -1;
	mov.b32 	 %f970, %r614;
	selp.f32	%f971, %f970, %f281, %p1;
	mul.f32 	%f972, %f971, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f973, %f972;
	mov.f32 	%f974, 0fBF317200;
	fma.rn.f32 	%f975, %f973, %f974, %f971;
	mov.f32 	%f976, 0fB5BFBE8E;
	fma.rn.f32 	%f977, %f973, %f976, %f975;
	mul.f32 	%f978, %f977, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f979, %f978;
	add.f32 	%f980, %f973, 0f00000000;
	ex2.approx.f32 	%f981, %f980;
	mul.f32 	%f982, %f979, %f981;
	setp.lt.f32	%p111, %f971, 0fC2D20000;
	selp.f32	%f983, 0f00000000, %f982, %p111;
	setp.gt.f32	%p112, %f971, 0f42D20000;
	selp.f32	%f1220, 0f7F800000, %f983, %p112;
	setp.eq.f32	%p113, %f1220, 0f7F800000;
	@%p113 bra 	BB0_166;

	neg.f32 	%f984, %f281;
	add.rn.f32 	%f985, %f279, %f984;
	add.rn.f32 	%f986, %f985, %f280;
	add.f32 	%f987, %f986, 0f37000000;
	selp.f32	%f988, %f987, %f986, %p1;
	fma.rn.f32 	%f1220, %f1220, %f988, %f1220;

BB0_166:
	mov.f32 	%f1151, 0f40000000;
	cvt.rzi.f32.f32	%f1150, %f1151;
	add.f32 	%f1149, %f1150, %f1150;
	mov.f32 	%f1148, 0f40800000;
	sub.f32 	%f1147, %f1148, %f1149;
	abs.f32 	%f1146, %f1147;
	setp.lt.f32	%p114, %f276, 0f00000000;
	setp.eq.f32	%p115, %f1146, 0f3F800000;
	and.pred  	%p2, %p114, %p115;
	mov.b32 	 %r615, %f1220;
	xor.b32  	%r616, %r615, -2147483648;
	mov.b32 	 %f989, %r616;
	selp.f32	%f1222, %f989, %f1220, %p2;
	setp.eq.f32	%p116, %f276, 0f00000000;
	@%p116 bra 	BB0_169;
	bra.uni 	BB0_167;

BB0_169:
	add.f32 	%f992, %f276, %f276;
	selp.f32	%f1222, %f992, 0f00000000, %p115;
	bra.uni 	BB0_170;

BB0_167:
	setp.geu.f32	%p117, %f276, 0f00000000;
	@%p117 bra 	BB0_170;

	mov.f32 	%f1154, 0f40800000;
	cvt.rzi.f32.f32	%f991, %f1154;
	setp.neu.f32	%p118, %f991, 0f40800000;
	selp.f32	%f1222, 0f7FFFFFFF, %f1222, %p118;

BB0_170:
	add.f32 	%f993, %f278, 0f40800000;
	mov.b32 	 %r617, %f993;
	setp.lt.s32	%p120, %r617, 2139095040;
	@%p120 bra 	BB0_175;

	setp.gtu.f32	%p121, %f278, 0f7F800000;
	@%p121 bra 	BB0_174;
	bra.uni 	BB0_172;

BB0_174:
	add.f32 	%f1222, %f276, 0f40800000;
	bra.uni 	BB0_175;

BB0_172:
	setp.neu.f32	%p122, %f278, 0f7F800000;
	@%p122 bra 	BB0_175;

	selp.f32	%f1222, 0fFF800000, 0f7F800000, %p2;

BB0_175:
	add.u64 	%rd232, %SP, 32;
	cvta.to.local.u64 	%rd231, %rd232;
	add.s64 	%rd230, %rd231, 12;
	mul.f32 	%f994, %f902, %f272;
	mov.f32 	%f1227, 0f3F800000;
	sub.f32 	%f996, %f1227, %f1222;
	setp.eq.f32	%p123, %f276, 0f3F800000;
	selp.f32	%f997, 0f00000000, %f996, %p123;
	cvt.sat.f32.f32	%f998, %f997;
	fma.rn.f32 	%f999, %f994, %f994, %f903;
	div.rn.f32 	%f1226, %f998, %f999;
	ld.local.f32 	%f1000, [%rd230+-12];
	ld.local.f32 	%f1001, [%rd230+-8];
	mul.f32 	%f1002, %f274, %f1001;
	fma.rn.f32 	%f1003, %f273, %f1000, %f1002;
	ld.local.f32 	%f1004, [%rd230+-4];
	fma.rn.f32 	%f1005, %f275, %f1004, %f1003;
	cvt.sat.f32.f32	%f308, %f1005;
	setp.eq.f32	%p124, %f905, 0f3F800000;
	@%p124 bra 	BB0_181;
	bra.uni 	BB0_176;

BB0_181:
	setp.leu.f32	%p128, %f900, 0f00000000;
	@%p128 bra 	BB0_183;

	mov.u32 	%r686, 2;
	mul.f32 	%f1036, %f885, %f273;
	mul.f32 	%f1037, %f886, %f274;
	neg.f32 	%f1038, %f1037;
	sub.f32 	%f1039, %f1038, %f1036;
	mul.f32 	%f1040, %f887, %f275;
	sub.f32 	%f1041, %f1039, %f1040;
	setp.gt.f32	%p129, %f1041, 0f00000000;
	selp.f32	%f1042, 0f3F800000, 0f00000000, %p129;
	mul.f32 	%f1043, %f894, %f274;
	fma.rn.f32 	%f1044, %f893, %f273, %f1043;
	mul.f32 	%f1045, %f890, %f274;
	fma.rn.f32 	%f1046, %f889, %f273, %f1045;
	fma.rn.f32 	%f1047, %f895, %f275, %f1044;
	fma.rn.f32 	%f1048, %f891, %f275, %f1046;
	fma.rn.f32 	%f1049, %f896, %f1047, 0f3F000000;
	mov.f32 	%f1050, 0f3F800000;
	sub.f32 	%f1032, %f1050, %f1049;
	fma.rn.f32 	%f1033, %f896, %f1048, 0f3F000000;
	cvt.rzi.s32.f32	%r621, %f900;
	mov.f32 	%f1035, 0f00000000;
	// inline asm
	call (%f1028, %f1029, %f1030, %f1031), _rt_texture_get_f_id, (%r621, %r686, %f1032, %f1033, %f1035, %f1035);
	// inline asm
	mul.f32 	%f1051, %f1042, %f1028;
	mul.f32 	%f1052, %f1042, %f1029;
	mul.f32 	%f1053, %f1042, %f1030;
	mul.f32 	%f1223, %f1223, %f1051;
	mul.f32 	%f1224, %f1224, %f1052;
	mul.f32 	%f1225, %f1225, %f1053;
	bra.uni 	BB0_183;

BB0_176:
	setp.eq.f32	%p125, %f905, 0f40000000;
	@%p125 bra 	BB0_179;
	bra.uni 	BB0_177;

BB0_179:
	setp.leu.f32	%p127, %f900, 0f00000000;
	@%p127 bra 	BB0_183;

	mov.u32 	%r685, 0;
	mov.u32 	%r684, 6;
	mul.f32 	%f1022, %f894, %f274;
	fma.rn.f32 	%f1023, %f893, %f273, %f1022;
	mul.f32 	%f1024, %f890, %f274;
	fma.rn.f32 	%f1025, %f889, %f273, %f1024;
	mul.f32 	%f1026, %f886, %f274;
	fma.rn.f32 	%f1027, %f885, %f273, %f1026;
	fma.rn.f32 	%f1019, %f895, %f275, %f1023;
	fma.rn.f32 	%f1020, %f891, %f275, %f1025;
	fma.rn.f32 	%f1021, %f887, %f275, %f1027;
	cvt.rzi.s32.f32	%r618, %f900;
	// inline asm
	call (%f1015, %f1016, %f1017, %f1018), _rt_texture_get_base_id, (%r618, %r684, %f1019, %f1020, %f1021, %r685);
	// inline asm
	mul.f32 	%f1223, %f1223, %f1015;
	mul.f32 	%f1224, %f1224, %f1016;
	mul.f32 	%f1225, %f1225, %f1017;
	bra.uni 	BB0_183;

BB0_177:
	setp.neu.f32	%p126, %f905, 0f40800000;
	@%p126 bra 	BB0_183;

	mul.f32 	%f1006, %f885, %f273;
	mul.f32 	%f1007, %f886, %f274;
	neg.f32 	%f1008, %f1007;
	sub.f32 	%f1009, %f1008, %f1006;
	mul.f32 	%f1010, %f887, %f275;
	sub.f32 	%f1011, %f1009, %f1010;
	fma.rn.f32 	%f1012, %f900, %f1011, %f896;
	cvt.sat.f32.f32	%f1013, %f1012;
	mul.f32 	%f1014, %f1013, %f1013;
	mul.f32 	%f1226, %f1226, %f1014;

BB0_183:
	mov.f32 	%f1228, 0f00000000;
	max.f32 	%f1057, %f1223, %f1224;
	max.f32 	%f1058, %f1057, %f1225;
	mul.f32 	%f320, %f308, %f1226;
	mul.f32 	%f1059, %f320, %f1058;
	setp.lt.f32	%p130, %f1059, 0f3727C5AC;
	mov.f32 	%f1229, %f1228;
	mov.f32 	%f1230, %f1228;
	@%p130 bra 	BB0_187;

	add.u64 	%rd179, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd179;
	mov.u32 	%r623, 1065353216;
	st.local.u32 	[%rd40], %r623;
	setp.leu.f32	%p131, %f888, 0f00000000;
	@%p131 bra 	BB0_186;

	mov.u32 	%r676, 4;
	mov.f32 	%f1153, 0f38D1B717;
	mov.u32 	%r675, 1;
	fma.rn.f32 	%f1069, %f1, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f1070, %f2, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f1071, %f3, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f1072, %f1069, %f901, %f906;
	fma.rn.f32 	%f1073, %f1070, %f901, %f907;
	fma.rn.f32 	%f1074, %f1071, %f901, %f908;
	sub.f32 	%f1075, %f1072, %f72;
	sub.f32 	%f1076, %f1073, %f73;
	sub.f32 	%f1077, %f1074, %f74;
	mul.f32 	%f1078, %f1076, %f1076;
	fma.rn.f32 	%f1079, %f1075, %f1075, %f1078;
	fma.rn.f32 	%f1080, %f1077, %f1077, %f1079;
	sqrt.rn.f32 	%f1068, %f1080;
	rcp.rn.f32 	%f1081, %f1068;
	mul.f32 	%f1064, %f1075, %f1081;
	mul.f32 	%f1065, %f1076, %f1081;
	mul.f32 	%f1066, %f1077, %f1081;
	mul.f32 	%f1082, %f72, 0f3456BF95;
	abs.f32 	%f1083, %f1082;
	mul.f32 	%f1084, %f73, 0f3456BF95;
	abs.f32 	%f1085, %f1084;
	mul.f32 	%f1086, %f74, 0f3456BF95;
	abs.f32 	%f1087, %f1086;
	max.f32 	%f1088, %f1083, %f1085;
	max.f32 	%f1089, %f1088, %f1087;
	max.f32 	%f1067, %f1089, %f1153;
	ld.global.u32 	%r624, [root];
	// inline asm
	call _rt_trace_64, (%r624, %f72, %f73, %f74, %f1064, %f1065, %f1066, %r675, %f1067, %f1068, %rd179, %r676);
	// inline asm
	ld.local.f32 	%f1227, [%rd40];

BB0_186:
	ld.global.u32 	%r627, [bounceFlag];
	setp.gt.s32	%p132, %r627, 0;
	mul.f32 	%f1091, %f320, %f1227;
	mul.f32 	%f1092, %f892, %f1091;
	selp.f32	%f1093, %f1092, %f1091, %p132;
	mul.f32 	%f1228, %f1223, %f1093;
	mul.f32 	%f1229, %f1224, %f1093;
	mul.f32 	%f1230, %f1225, %f1093;

BB0_187:
	mov.u16 	%rs13, 0;
	fma.rn.f32 	%f1217, %f244, %f1228, %f1217;
	fma.rn.f32 	%f1218, %f244, %f1229, %f1218;
	fma.rn.f32 	%f1219, %f244, %f1230, %f1219;

BB0_189:
	mov.u64 	%rd234, GBufferAtten;
	cvta.global.u64 	%rd233, %rd234;
	mov.u32 	%r678, 12;
	mov.u32 	%r677, 2;
	abs.f32 	%f1103, %f1217;
	setp.gtu.f32	%p134, %f1103, 0f7F800000;
	selp.f32	%f1104, 0f00000000, %f1217, %p134;
	abs.f32 	%f1105, %f1218;
	setp.gtu.f32	%p135, %f1105, 0f7F800000;
	selp.f32	%f1106, 0f00000000, %f1218, %p135;
	abs.f32 	%f1107, %f1219;
	setp.gtu.f32	%p136, %f1107, 0f7F800000;
	selp.f32	%f1108, 0f00000000, %f1219, %p136;
	fma.rn.f32 	%f1243, %f1234, %f1104, %f1231;
	fma.rn.f32 	%f1244, %f1235, %f1106, %f1232;
	fma.rn.f32 	%f1245, %f1236, %f1108, %f1233;
	ld.global.v2.u32 	{%r633, %r634}, [pixelID];
	cvt.u64.u32	%rd183, %r633;
	cvt.u64.u32	%rd184, %r634;
	mov.u64 	%rd192, 0;
	// inline asm
	call (%rd181), _rt_buffer_get_64, (%rd233, %r677, %r678, %rd183, %rd184, %rd192, %rd192);
	// inline asm
	st.f32 	[%rd181+8], %f1236;
	st.f32 	[%rd181+4], %f1235;
	st.f32 	[%rd181], %f1234;
	ld.global.v2.u32 	{%r637, %r638}, [pixelID];
	cvt.u64.u32	%rd189, %r637;
	cvt.u64.u32	%rd190, %r638;
	mov.u64 	%rd194, accumBufferAdd;
	cvta.global.u64 	%rd188, %rd194;
	// inline asm
	call (%rd187), _rt_buffer_get_64, (%rd188, %r677, %r678, %rd189, %rd190, %rd192, %rd192);
	// inline asm
	ld.global.u32 	%r641, [bounceFlag];
	setp.eq.s32	%p137, %r641, 0;
	@%p137 bra 	BB0_191;

	ld.f32 	%f1109, [%rd187+8];
	ld.f32 	%f1110, [%rd187+4];
	ld.f32 	%f1111, [%rd187];
	add.f32 	%f1243, %f1243, %f1111;
	add.f32 	%f1244, %f1244, %f1110;
	add.f32 	%f1245, %f1245, %f1109;
	bra.uni 	BB0_196;

BB0_191:
	ld.global.u32 	%r215, [firstSkylight];
	setp.lt.s32	%p138, %r215, 0;
	setp.eq.s16	%p139, %rs13, 0;
	or.pred  	%p140, %p138, %p139;
	@%p140 bra 	BB0_196;

	cvt.s64.s32	%rd197, %r215;
	mov.u64 	%rd201, globalLights;
	cvta.global.u64 	%rd196, %rd201;
	mov.u32 	%r642, 1;
	mov.u32 	%r643, 48;
	// inline asm
	call (%rd195), _rt_buffer_get_64, (%rd196, %r642, %r643, %rd197, %rd192, %rd192, %rd192);
	// inline asm
	ld.v4.f32 	{%f1116, %f1117, %f1118, %f1119}, [%rd195+16];
	ld.v4.f32 	{%f1120, %f1121, %f1122, %f1123}, [%rd195];
	setp.neu.f32	%p141, %f1116, 0f00000000;
	setp.leu.f32	%p142, %f63, 0f00000000;
	and.pred  	%p143, %p141, %p142;
	@%p143 bra 	BB0_196;

	mov.f32 	%f1240, 0f3F800000;
	setp.leu.f32	%p144, %f1121, 0f00000000;
	mov.f32 	%f1241, %f1240;
	mov.f32 	%f1242, %f1240;
	@%p144 bra 	BB0_195;

	cvt.rzi.s32.f32	%r644, %f1122;
	neg.f32 	%f1133, %f62;
	neg.f32 	%f1132, %f63;
	neg.f32 	%f1131, %f64;
	mov.u32 	%r645, 6;
	mov.u32 	%r646, 0;
	// inline asm
	call (%f1242, %f1241, %f1240, %f1130), _rt_texture_get_base_id, (%r644, %r645, %f1131, %f1132, %f1133, %r646);
	// inline asm

BB0_195:
	mul.f32 	%f1243, %f1117, %f1242;
	mul.f32 	%f1244, %f1118, %f1241;
	mul.f32 	%f1245, %f1119, %f1240;

BB0_196:
	mov.u32 	%r680, 12;
	mov.u32 	%r679, 2;
	ld.global.v2.u32 	{%r651, %r652}, [pixelID];
	cvt.u64.u32	%rd204, %r651;
	cvt.u64.u32	%rd205, %r652;
	// inline asm
	call (%rd202), _rt_buffer_get_64, (%rd188, %r679, %r680, %rd204, %rd205, %rd192, %rd192);
	// inline asm
	st.f32 	[%rd202+8], %f1245;
	st.f32 	[%rd202+4], %f1244;
	st.f32 	[%rd202], %f1243;
	ld.global.v2.u32 	{%r655, %r656}, [pixelID];
	cvt.u64.u32	%rd210, %r655;
	cvt.u64.u32	%rd211, %r656;
	mov.u64 	%rd215, accumBufferLerp;
	cvta.global.u64 	%rd209, %rd215;
	// inline asm
	call (%rd208), _rt_buffer_get_64, (%rd209, %r679, %r680, %rd210, %rd211, %rd192, %rd192);
	// inline asm
	ld.f32 	%f1134, [%rd208+8];
	ld.f32 	%f1135, [%rd208+4];
	ld.f32 	%f1136, [%rd208];
	sub.f32 	%f1137, %f1243, %f1136;
	sub.f32 	%f1138, %f1244, %f1135;
	sub.f32 	%f1139, %f1245, %f1134;
	ld.global.f32 	%f1140, [integration];
	fma.rn.f32 	%f371, %f1140, %f1137, %f1136;
	fma.rn.f32 	%f372, %f1140, %f1138, %f1135;
	fma.rn.f32 	%f373, %f1140, %f1139, %f1134;
	ld.global.u32 	%r659, [finalBounceFlag];
	setp.eq.s32	%p145, %r659, 0;
	@%p145 bra 	BB0_198;

	mov.u32 	%r682, 12;
	mov.u32 	%r681, 2;
	ld.global.v2.u32 	{%r662, %r663}, [pixelID];
	cvt.u64.u32	%rd218, %r662;
	cvt.u64.u32	%rd219, %r663;
	// inline asm
	call (%rd216), _rt_buffer_get_64, (%rd209, %r681, %r682, %rd218, %rd219, %rd192, %rd192);
	// inline asm
	st.f32 	[%rd216+8], %f373;
	st.f32 	[%rd216+4], %f372;
	st.f32 	[%rd216], %f371;

BB0_198:
	mov.u32 	%r683, 2;
	ld.global.u32 	%r668, [resolution+4];
	add.s32 	%r669, %r668, -1;
	ld.global.v2.u32 	{%r670, %r671}, [pixelID];
	sub.s32 	%r674, %r669, %r671;
	ld.global.f32 	%f1141, [cameraExp];
	cvt.u64.u32	%rd225, %r670;
	cvt.u64.u32	%rd226, %r674;
	mov.u64 	%rd229, colorOutput;
	cvta.global.u64 	%rd224, %rd229;
	mov.u32 	%r667, 16;
	// inline asm
	call (%rd223), _rt_buffer_get_64, (%rd224, %r683, %r667, %rd225, %rd226, %rd192, %rd192);
	// inline asm
	mul.f32 	%f1142, %f373, %f1141;
	mul.f32 	%f1143, %f372, %f1141;
	mul.f32 	%f1144, %f371, %f1141;
	mov.f32 	%f1145, 0f3F800000;
	st.v4.f32 	[%rd223], {%f1144, %f1143, %f1142, %f1145};
	ret;
}


