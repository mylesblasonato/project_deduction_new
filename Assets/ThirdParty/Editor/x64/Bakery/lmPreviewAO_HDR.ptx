//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 accumBufferAdd[1];
.global .align 1 .b8 accumBufferLerp[1];
.global .align 1 .b8 accumBufferLerpAO[1];
.global .align 1 .b8 GBufferPos[1];
.global .align 1 .b8 GBufferNormal[1];
.global .align 1 .b8 GBufferAtten[1];
.global .align 1 .b8 colorOutput[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 1 .b8 globalLights[1];
.global .align 1 .b8 localLights[1];
.global .align 1 .b8 localLightIndices[1];
.global .align 4 .u32 tileCubemap;
.global .align 4 .b8 cameraRht[12];
.global .align 4 .b8 cameraUp[12];
.global .align 4 .b8 cameraFwd[12];
.global .align 4 .b8 cameraPos[12];
.global .align 4 .f32 cameraFov;
.global .align 4 .f32 cameraExp;
.global .align 4 .f32 integration;
.global .align 4 .u32 finalBounceFlag;
.global .align 4 .u32 bounceFlag;
.global .align 16 .b8 rndOffset[16];
.global .align 4 .u32 firstSkylight;
.global .align 4 .f32 backFaceWeight;
.global .align 4 .f32 aoRadius;
.global .align 4 .f32 aoIntensity;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11tileCubemapE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraRhtE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8cameraUpE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraFwdE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraFovE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9cameraExpE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11integrationE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15finalBounceFlagE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10bounceFlagE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9rndOffsetE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13firstSkylightE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14backFaceWeightE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8aoRadiusE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11aoIntensityE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename11tileCubemapE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraRhtE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8cameraUpE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraFwdE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraFovE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9cameraExpE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11integrationE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename15finalBounceFlagE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename10bounceFlagE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9rndOffsetE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename13firstSkylightE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14backFaceWeightE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8aoRadiusE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11aoIntensityE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11tileCubemapE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraRhtE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8cameraUpE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraFwdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraFovE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9cameraExpE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11integrationE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15finalBounceFlagE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10bounceFlagE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9rndOffsetE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13firstSkylightE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14backFaceWeightE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8aoRadiusE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11aoIntensityE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11tileCubemapE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraRhtE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8cameraUpE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraFwdE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraFovE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9cameraExpE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11integrationE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15finalBounceFlagE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10bounceFlagE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9rndOffsetE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13firstSkylightE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14backFaceWeightE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8aoRadiusE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11aoIntensityE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11tileCubemapE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraRhtE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8cameraUpE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraFwdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraFovE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9cameraExpE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11integrationE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15finalBounceFlagE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10bounceFlagE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9rndOffsetE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13firstSkylightE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14backFaceWeightE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8aoRadiusE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11aoIntensityE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[60];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<174>;
	.reg .b16 	%rs<11>;
	.reg .f32 	%f<1426>;
	.reg .b32 	%r<950>;
	.reg .b64 	%rd<303>;


	mov.u64 	%rd302, __local_depot0;
	cvta.local.u64 	%SP, %rd302;
	ld.global.v2.u32 	{%r297, %r298}, [pixelID];
	ld.global.v4.u32 	{%r300, %r301, %r302, %r303}, [rndOffset];
	add.s32 	%r305, %r300, %r297;
	and.b32  	%r306, %r305, 255;
	add.s32 	%r309, %r301, %r298;
	and.b32  	%r310, %r309, 255;
	add.s32 	%r312, %r302, %r297;
	and.b32  	%r313, %r312, 255;
	add.s32 	%r315, %r303, %r298;
	and.b32  	%r316, %r315, 255;
	cvt.u64.u32	%rd71, %r306;
	cvt.u64.u32	%rd72, %r310;
	mov.u64 	%rd87, rnd_seeds;
	cvta.global.u64 	%rd58, %rd87;
	mov.u32 	%r295, 2;
	mov.u32 	%r296, 3;
	mov.u64 	%rd293, 0;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd58, %r295, %r296, %rd71, %rd72, %rd293, %rd293);
	// inline asm
	ld.u8 	%rs4, [%rd57];
	cvt.rn.f32.u16	%f425, %rs4;
	div.rn.f32 	%f1, %f425, 0f437F0000;
	// inline asm
	call (%rd63), _rt_buffer_get_64, (%rd58, %r295, %r296, %rd71, %rd72, %rd293, %rd293);
	// inline asm
	ld.u8 	%rs5, [%rd63+1];
	cvt.rn.f32.u16	%f426, %rs5;
	div.rn.f32 	%f2, %f426, 0f437F0000;
	// inline asm
	call (%rd69), _rt_buffer_get_64, (%rd58, %r295, %r296, %rd71, %rd72, %rd293, %rd293);
	// inline asm
	ld.u8 	%rs6, [%rd69+2];
	cvt.rn.f32.u16	%f427, %rs6;
	div.rn.f32 	%f3, %f427, 0f437F0000;
	cvt.u64.u32	%rd83, %r313;
	cvt.u64.u32	%rd84, %r316;
	// inline asm
	call (%rd75), _rt_buffer_get_64, (%rd58, %r295, %r296, %rd83, %rd84, %rd293, %rd293);
	// inline asm
	ld.u8 	%rs1, [%rd75];
	// inline asm
	call (%rd81), _rt_buffer_get_64, (%rd58, %r295, %r296, %rd83, %rd84, %rd293, %rd293);
	// inline asm
	ld.global.u32 	%r317, [bounceFlag];
	setp.eq.s32	%p3, %r317, 0;
	@%p3 bra 	BB0_48;

	ld.u8 	%rs7, [%rd81+1];
	cvt.rn.f32.u16	%f428, %rs7;
	div.rn.f32 	%f429, %f428, 0f437F0000;
	cvt.rn.f32.u16	%f430, %rs1;
	div.rn.f32 	%f431, %f430, 0f437F0000;
	ld.global.v2.u32 	{%r322, %r323}, [pixelID];
	cvt.u64.u32	%rd90, %r322;
	cvt.u64.u32	%rd91, %r323;
	mov.u64 	%rd100, GBufferPos;
	cvta.global.u64 	%rd89, %rd100;
	mov.u32 	%r321, 12;
	// inline asm
	call (%rd88), _rt_buffer_get_64, (%rd89, %r295, %r321, %rd90, %rd91, %rd293, %rd293);
	// inline asm
	ld.f32 	%f1335, [%rd88+8];
	ld.f32 	%f1334, [%rd88+4];
	ld.f32 	%f1333, [%rd88];
	ld.global.v2.u32 	{%r326, %r327}, [pixelID];
	cvt.u64.u32	%rd96, %r326;
	cvt.u64.u32	%rd97, %r327;
	mov.u64 	%rd101, GBufferNormal;
	cvta.global.u64 	%rd95, %rd101;
	// inline asm
	call (%rd94), _rt_buffer_get_64, (%rd95, %r295, %r321, %rd96, %rd97, %rd293, %rd293);
	// inline asm
	ld.f32 	%f9, [%rd94+4];
	ld.f32 	%f8, [%rd94+8];
	ld.f32 	%f7, [%rd94];
	abs.f32 	%f432, %f7;
	abs.f32 	%f433, %f8;
	setp.gt.f32	%p4, %f432, %f433;
	neg.f32 	%f434, %f9;
	neg.f32 	%f435, %f8;
	selp.f32	%f436, %f434, 0f00000000, %p4;
	selp.f32	%f437, %f7, %f435, %p4;
	selp.f32	%f438, 0f00000000, %f9, %p4;
	mul.f32 	%f439, %f437, %f437;
	fma.rn.f32 	%f440, %f436, %f436, %f439;
	fma.rn.f32 	%f441, %f438, %f438, %f440;
	sqrt.rn.f32 	%f442, %f441;
	rcp.rn.f32 	%f443, %f442;
	mul.f32 	%f10, %f436, %f443;
	mul.f32 	%f11, %f437, %f443;
	mul.f32 	%f12, %f438, %f443;
	sqrt.rn.f32 	%f13, %f431;
	mul.f32 	%f1324, %f429, 0f40C90FDB;
	add.u64 	%rd102, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd102;
	abs.f32 	%f15, %f1324;
	setp.neu.f32	%p5, %f15, 0f7F800000;
	mov.f32 	%f1318, %f1324;
	@%p5 bra 	BB0_3;

	mov.f32 	%f444, 0f00000000;
	mul.rn.f32 	%f1318, %f1324, %f444;

BB0_3:
	mul.f32 	%f445, %f1318, 0f3F22F983;
	cvt.rni.s32.f32	%r879, %f445;
	cvt.rn.f32.s32	%f446, %r879;
	neg.f32 	%f447, %f446;
	mov.f32 	%f448, 0f3FC90FDA;
	fma.rn.f32 	%f449, %f447, %f448, %f1318;
	mov.f32 	%f450, 0f33A22168;
	fma.rn.f32 	%f451, %f447, %f450, %f449;
	mov.f32 	%f452, 0f27C234C5;
	fma.rn.f32 	%f1319, %f447, %f452, %f451;
	abs.f32 	%f453, %f1318;
	add.s64 	%rd3, %rd2, 24;
	setp.leu.f32	%p6, %f453, 0f47CE4780;
	@%p6 bra 	BB0_14;

	mov.b32 	 %r2, %f1318;
	shr.u32 	%r3, %r2, 23;
	shl.b32 	%r332, %r2, 8;
	or.b32  	%r4, %r332, -2147483648;
	mov.u32 	%r871, 0;
	mov.u64 	%rd286, __cudart_i2opi_f;
	mov.u32 	%r870, -6;
	mov.u64 	%rd287, %rd2;

BB0_5:
	.pragma "nounroll";
	ld.const.u32 	%r335, [%rd286];
	// inline asm
	{
	mad.lo.cc.u32   %r333, %r335, %r4, %r871;
	madc.hi.u32     %r871, %r335, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd287], %r333;
	add.s64 	%rd287, %rd287, 4;
	add.s64 	%rd286, %rd286, 4;
	add.s32 	%r870, %r870, 1;
	setp.ne.s32	%p7, %r870, 0;
	@%p7 bra 	BB0_5;

	and.b32  	%r338, %r3, 255;
	add.s32 	%r339, %r338, -128;
	shr.u32 	%r340, %r339, 5;
	and.b32  	%r9, %r2, -2147483648;
	st.local.u32 	[%rd3], %r871;
	mov.u32 	%r341, 6;
	sub.s32 	%r342, %r341, %r340;
	mul.wide.s32 	%rd104, %r342, 4;
	add.s64 	%rd8, %rd2, %rd104;
	ld.local.u32 	%r872, [%rd8];
	ld.local.u32 	%r873, [%rd8+-4];
	and.b32  	%r12, %r3, 31;
	setp.eq.s32	%p8, %r12, 0;
	@%p8 bra 	BB0_8;

	mov.u32 	%r343, 32;
	sub.s32 	%r344, %r343, %r12;
	shr.u32 	%r345, %r873, %r344;
	shl.b32 	%r346, %r872, %r12;
	add.s32 	%r872, %r345, %r346;
	ld.local.u32 	%r347, [%rd8+-8];
	shr.u32 	%r348, %r347, %r344;
	shl.b32 	%r349, %r873, %r12;
	add.s32 	%r873, %r348, %r349;

BB0_8:
	shr.u32 	%r350, %r873, 30;
	shl.b32 	%r351, %r872, 2;
	add.s32 	%r874, %r350, %r351;
	shl.b32 	%r18, %r873, 2;
	shr.u32 	%r352, %r874, 31;
	shr.u32 	%r353, %r872, 30;
	add.s32 	%r19, %r352, %r353;
	setp.eq.s32	%p9, %r352, 0;
	@%p9 bra 	BB0_9;

	not.b32 	%r354, %r874;
	neg.s32 	%r876, %r18;
	setp.eq.s32	%p10, %r18, 0;
	selp.u32	%r355, 1, 0, %p10;
	add.s32 	%r874, %r355, %r354;
	xor.b32  	%r875, %r9, -2147483648;
	bra.uni 	BB0_11;

BB0_48:
	ld.global.f32 	%f1333, [cameraPos];
	ld.global.f32 	%f1334, [cameraPos+4];
	ld.global.f32 	%f1335, [cameraPos+8];
	ld.global.v2.u32 	{%r422, %r423}, [resolution];
	cvt.rn.f32.u32	%f515, %r422;
	cvt.rn.f32.u32	%f516, %r423;
	div.rn.f32 	%f517, %f515, %f516;
	ld.global.v2.u32 	{%r426, %r427}, [pixelID];
	cvt.rn.f32.u32	%f518, %r426;
	add.f32 	%f519, %f1, %f518;
	div.rn.f32 	%f520, %f519, %f515;
	cvt.rn.f32.u32	%f521, %r427;
	add.f32 	%f522, %f2, %f521;
	div.rn.f32 	%f523, %f522, %f516;
	fma.rn.f32 	%f524, %f520, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f525, %f523, 0f40000000, 0fBF800000;
	ld.global.f32 	%f526, [cameraFov];
	mul.f32 	%f527, %f517, %f526;
	ld.global.f32 	%f528, [cameraRht];
	mul.f32 	%f529, %f524, %f528;
	ld.global.f32 	%f530, [cameraRht+4];
	mul.f32 	%f531, %f524, %f530;
	ld.global.f32 	%f532, [cameraRht+8];
	mul.f32 	%f533, %f524, %f532;
	ld.global.f32 	%f534, [cameraFwd];
	fma.rn.f32 	%f535, %f527, %f529, %f534;
	ld.global.f32 	%f536, [cameraFwd+4];
	fma.rn.f32 	%f537, %f527, %f531, %f536;
	ld.global.f32 	%f538, [cameraFwd+8];
	fma.rn.f32 	%f539, %f527, %f533, %f538;
	ld.global.f32 	%f540, [cameraUp];
	mul.f32 	%f541, %f525, %f540;
	ld.global.f32 	%f542, [cameraUp+4];
	mul.f32 	%f543, %f525, %f542;
	ld.global.f32 	%f544, [cameraUp+8];
	mul.f32 	%f545, %f525, %f544;
	fma.rn.f32 	%f546, %f526, %f541, %f535;
	fma.rn.f32 	%f547, %f526, %f543, %f537;
	fma.rn.f32 	%f548, %f526, %f545, %f539;
	mul.f32 	%f549, %f547, %f547;
	fma.rn.f32 	%f550, %f546, %f546, %f549;
	fma.rn.f32 	%f551, %f548, %f548, %f550;
	sqrt.rn.f32 	%f552, %f551;
	rcp.rn.f32 	%f553, %f552;
	mul.f32 	%f62, %f546, %f553;
	mul.f32 	%f63, %f547, %f553;
	mul.f32 	%f64, %f553, %f548;
	bra.uni 	BB0_49;

BB0_9:
	mov.u32 	%r875, %r9;
	mov.u32 	%r876, %r18;

BB0_11:
	clz.b32 	%r878, %r874;
	setp.eq.s32	%p11, %r878, 0;
	shl.b32 	%r356, %r874, %r878;
	mov.u32 	%r357, 32;
	sub.s32 	%r358, %r357, %r878;
	shr.u32 	%r359, %r876, %r358;
	add.s32 	%r360, %r359, %r356;
	selp.b32	%r27, %r874, %r360, %p11;
	mov.u32 	%r361, -921707870;
	mul.hi.u32 	%r877, %r27, %r361;
	setp.eq.s32	%p12, %r9, 0;
	neg.s32 	%r362, %r19;
	selp.b32	%r879, %r19, %r362, %p12;
	setp.lt.s32	%p13, %r877, 1;
	@%p13 bra 	BB0_13;

	mul.lo.s32 	%r363, %r27, -921707870;
	shr.u32 	%r364, %r363, 31;
	shl.b32 	%r365, %r877, 1;
	add.s32 	%r877, %r364, %r365;
	add.s32 	%r878, %r878, 1;

BB0_13:
	mov.u32 	%r366, 126;
	sub.s32 	%r367, %r366, %r878;
	shl.b32 	%r368, %r367, 23;
	add.s32 	%r369, %r877, 1;
	shr.u32 	%r370, %r369, 7;
	add.s32 	%r371, %r370, 1;
	shr.u32 	%r372, %r371, 1;
	add.s32 	%r373, %r372, %r368;
	or.b32  	%r374, %r373, %r875;
	mov.b32 	 %f1319, %r374;

BB0_14:
	mul.rn.f32 	%f21, %f1319, %f1319;
	add.s32 	%r35, %r879, 1;
	and.b32  	%r36, %r35, 1;
	setp.eq.s32	%p14, %r36, 0;
	@%p14 bra 	BB0_16;

	mov.f32 	%f454, 0fBAB6061A;
	mov.f32 	%f455, 0f37CCF5CE;
	fma.rn.f32 	%f1320, %f455, %f21, %f454;
	bra.uni 	BB0_17;

BB0_16:
	mov.f32 	%f456, 0f3C08839E;
	mov.f32 	%f457, 0fB94CA1F9;
	fma.rn.f32 	%f1320, %f457, %f21, %f456;

BB0_17:
	@%p14 bra 	BB0_19;

	mov.f32 	%f458, 0f3D2AAAA5;
	fma.rn.f32 	%f459, %f1320, %f21, %f458;
	mov.f32 	%f460, 0fBF000000;
	fma.rn.f32 	%f1321, %f459, %f21, %f460;
	bra.uni 	BB0_20;

BB0_19:
	mov.f32 	%f461, 0fBE2AAAA3;
	fma.rn.f32 	%f462, %f1320, %f21, %f461;
	mov.f32 	%f463, 0f00000000;
	fma.rn.f32 	%f1321, %f462, %f21, %f463;

BB0_20:
	fma.rn.f32 	%f1322, %f1321, %f1319, %f1319;
	@%p14 bra 	BB0_22;

	mov.f32 	%f464, 0f3F800000;
	fma.rn.f32 	%f1322, %f1321, %f21, %f464;

BB0_22:
	and.b32  	%r375, %r35, 2;
	setp.eq.s32	%p17, %r375, 0;
	@%p17 bra 	BB0_24;

	mov.f32 	%f465, 0f00000000;
	mov.f32 	%f466, 0fBF800000;
	fma.rn.f32 	%f1322, %f1322, %f466, %f465;

BB0_24:
	@%p5 bra 	BB0_26;

	mov.f32 	%f467, 0f00000000;
	mul.rn.f32 	%f1324, %f1324, %f467;

BB0_26:
	mul.f32 	%f468, %f1324, 0f3F22F983;
	cvt.rni.s32.f32	%r889, %f468;
	cvt.rn.f32.s32	%f469, %r889;
	neg.f32 	%f470, %f469;
	fma.rn.f32 	%f472, %f470, %f448, %f1324;
	fma.rn.f32 	%f474, %f470, %f450, %f472;
	fma.rn.f32 	%f1325, %f470, %f452, %f474;
	abs.f32 	%f476, %f1324;
	setp.leu.f32	%p19, %f476, 0f47CE4780;
	@%p19 bra 	BB0_37;

	mov.b32 	 %r38, %f1324;
	shr.u32 	%r39, %r38, 23;
	shl.b32 	%r378, %r38, 8;
	or.b32  	%r40, %r378, -2147483648;
	mov.u32 	%r881, 0;
	mov.u64 	%rd288, __cudart_i2opi_f;
	mov.u32 	%r880, -6;
	mov.u64 	%rd289, %rd2;

BB0_28:
	.pragma "nounroll";
	ld.const.u32 	%r381, [%rd288];
	// inline asm
	{
	mad.lo.cc.u32   %r379, %r381, %r40, %r881;
	madc.hi.u32     %r881, %r381, %r40,  0;
	}
	// inline asm
	st.local.u32 	[%rd289], %r379;
	add.s64 	%rd289, %rd289, 4;
	add.s64 	%rd288, %rd288, 4;
	add.s32 	%r880, %r880, 1;
	setp.ne.s32	%p20, %r880, 0;
	@%p20 bra 	BB0_28;

	and.b32  	%r384, %r39, 255;
	add.s32 	%r385, %r384, -128;
	shr.u32 	%r386, %r385, 5;
	and.b32  	%r45, %r38, -2147483648;
	st.local.u32 	[%rd3], %r881;
	mov.u32 	%r387, 6;
	sub.s32 	%r388, %r387, %r386;
	mul.wide.s32 	%rd106, %r388, 4;
	add.s64 	%rd13, %rd2, %rd106;
	ld.local.u32 	%r882, [%rd13];
	ld.local.u32 	%r883, [%rd13+-4];
	and.b32  	%r48, %r39, 31;
	setp.eq.s32	%p21, %r48, 0;
	@%p21 bra 	BB0_31;

	mov.u32 	%r389, 32;
	sub.s32 	%r390, %r389, %r48;
	shr.u32 	%r391, %r883, %r390;
	shl.b32 	%r392, %r882, %r48;
	add.s32 	%r882, %r391, %r392;
	ld.local.u32 	%r393, [%rd13+-8];
	shr.u32 	%r394, %r393, %r390;
	shl.b32 	%r395, %r883, %r48;
	add.s32 	%r883, %r394, %r395;

BB0_31:
	shr.u32 	%r396, %r883, 30;
	shl.b32 	%r397, %r882, 2;
	add.s32 	%r884, %r396, %r397;
	shl.b32 	%r54, %r883, 2;
	shr.u32 	%r398, %r884, 31;
	shr.u32 	%r399, %r882, 30;
	add.s32 	%r55, %r398, %r399;
	setp.eq.s32	%p22, %r398, 0;
	@%p22 bra 	BB0_32;

	not.b32 	%r400, %r884;
	neg.s32 	%r886, %r54;
	setp.eq.s32	%p23, %r54, 0;
	selp.u32	%r401, 1, 0, %p23;
	add.s32 	%r884, %r401, %r400;
	xor.b32  	%r885, %r45, -2147483648;
	bra.uni 	BB0_34;

BB0_32:
	mov.u32 	%r885, %r45;
	mov.u32 	%r886, %r54;

BB0_34:
	clz.b32 	%r888, %r884;
	setp.eq.s32	%p24, %r888, 0;
	shl.b32 	%r402, %r884, %r888;
	mov.u32 	%r403, 32;
	sub.s32 	%r404, %r403, %r888;
	shr.u32 	%r405, %r886, %r404;
	add.s32 	%r406, %r405, %r402;
	selp.b32	%r63, %r884, %r406, %p24;
	mov.u32 	%r407, -921707870;
	mul.hi.u32 	%r887, %r63, %r407;
	setp.eq.s32	%p25, %r45, 0;
	neg.s32 	%r408, %r55;
	selp.b32	%r889, %r55, %r408, %p25;
	setp.lt.s32	%p26, %r887, 1;
	@%p26 bra 	BB0_36;

	mul.lo.s32 	%r409, %r63, -921707870;
	shr.u32 	%r410, %r409, 31;
	shl.b32 	%r411, %r887, 1;
	add.s32 	%r887, %r410, %r411;
	add.s32 	%r888, %r888, 1;

BB0_36:
	mov.u32 	%r412, 126;
	sub.s32 	%r413, %r412, %r888;
	shl.b32 	%r414, %r413, 23;
	add.s32 	%r415, %r887, 1;
	shr.u32 	%r416, %r415, 7;
	add.s32 	%r417, %r416, 1;
	shr.u32 	%r418, %r417, 1;
	add.s32 	%r419, %r418, %r414;
	or.b32  	%r420, %r419, %r885;
	mov.b32 	 %f1325, %r420;

BB0_37:
	mul.rn.f32 	%f38, %f1325, %f1325;
	and.b32  	%r71, %r889, 1;
	setp.eq.s32	%p27, %r71, 0;
	@%p27 bra 	BB0_39;

	mov.f32 	%f477, 0fBAB6061A;
	mov.f32 	%f478, 0f37CCF5CE;
	fma.rn.f32 	%f1326, %f478, %f38, %f477;
	bra.uni 	BB0_40;

BB0_39:
	mov.f32 	%f479, 0f3C08839E;
	mov.f32 	%f480, 0fB94CA1F9;
	fma.rn.f32 	%f1326, %f480, %f38, %f479;

BB0_40:
	@%p27 bra 	BB0_42;

	mov.f32 	%f481, 0f3D2AAAA5;
	fma.rn.f32 	%f482, %f1326, %f38, %f481;
	mov.f32 	%f483, 0fBF000000;
	fma.rn.f32 	%f1327, %f482, %f38, %f483;
	bra.uni 	BB0_43;

BB0_42:
	mov.f32 	%f484, 0fBE2AAAA3;
	fma.rn.f32 	%f485, %f1326, %f38, %f484;
	mov.f32 	%f486, 0f00000000;
	fma.rn.f32 	%f1327, %f485, %f38, %f486;

BB0_43:
	fma.rn.f32 	%f1328, %f1327, %f1325, %f1325;
	@%p27 bra 	BB0_45;

	mov.f32 	%f487, 0f3F800000;
	fma.rn.f32 	%f1328, %f1327, %f38, %f487;

BB0_45:
	and.b32  	%r421, %r889, 2;
	setp.eq.s32	%p30, %r421, 0;
	@%p30 bra 	BB0_47;

	mov.f32 	%f488, 0f00000000;
	mov.f32 	%f489, 0fBF800000;
	fma.rn.f32 	%f1328, %f1328, %f489, %f488;

BB0_47:
	mul.f32 	%f490, %f13, %f1322;
	mul.f32 	%f491, %f490, %f490;
	mov.f32 	%f492, 0f3F800000;
	sub.f32 	%f493, %f492, %f491;
	mul.f32 	%f494, %f13, %f1328;
	mul.f32 	%f495, %f494, %f494;
	sub.f32 	%f496, %f493, %f495;
	mov.f32 	%f497, 0f00000000;
	max.f32 	%f498, %f497, %f496;
	sqrt.rn.f32 	%f499, %f498;
	mul.f32 	%f500, %f10, %f494;
	mul.f32 	%f501, %f11, %f494;
	mul.f32 	%f502, %f12, %f494;
	mul.f32 	%f503, %f8, %f11;
	mul.f32 	%f504, %f9, %f12;
	sub.f32 	%f505, %f503, %f504;
	fma.rn.f32 	%f506, %f505, %f490, %f500;
	mul.f32 	%f507, %f7, %f12;
	mul.f32 	%f508, %f8, %f10;
	sub.f32 	%f509, %f507, %f508;
	fma.rn.f32 	%f510, %f509, %f490, %f501;
	mul.f32 	%f511, %f9, %f10;
	mul.f32 	%f512, %f7, %f11;
	sub.f32 	%f513, %f511, %f512;
	fma.rn.f32 	%f514, %f513, %f490, %f502;
	fma.rn.f32 	%f62, %f7, %f499, %f506;
	fma.rn.f32 	%f63, %f9, %f499, %f510;
	fma.rn.f32 	%f64, %f8, %f499, %f514;

BB0_49:
	add.u64 	%rd113, %SP, 32;
	cvta.to.local.u64 	%rd114, %rd113;
	add.s64 	%rd14, %rd114, 12;
	mov.u32 	%r432, -1082130432;
	st.local.u32 	[%rd114+12], %r432;
	mov.u32 	%r433, 0;
	st.local.u32 	[%rd114], %r433;
	st.local.u32 	[%rd114+4], %r433;
	st.local.u32 	[%rd114+8], %r433;
	st.local.u32 	[%rd114+16], %r433;
	st.local.u32 	[%rd114+20], %r433;
	st.local.u32 	[%rd114+24], %r433;
	ld.global.v2.u32 	{%r434, %r435}, [pixelID];
	cvt.u64.u32	%rd109, %r434;
	cvt.u64.u32	%rd110, %r435;
	mov.u64 	%rd115, GBufferAtten;
	cvta.global.u64 	%rd108, %rd115;
	mov.u32 	%r431, 12;
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd108, %r295, %r431, %rd109, %rd110, %rd293, %rd293);
	// inline asm
	ld.f32 	%f70, [%rd107+8];
	ld.f32 	%f68, [%rd107+4];
	ld.f32 	%f69, [%rd107];
	add.f32 	%f554, %f69, %f68;
	add.f32 	%f555, %f70, %f554;
	ld.global.u32 	%r438, [bounceFlag];
	setp.ne.s32	%p31, %r438, 0;
	setp.eq.f32	%p32, %f555, 0f00000000;
	and.pred  	%p33, %p31, %p32;
	@%p33 bra 	BB0_51;

	ld.global.u32 	%r439, [root];
	mov.u32 	%r440, 0;
	mov.f32 	%f562, 0f00000000;
	mov.f32 	%f563, 0f6C4ECB8F;
	mov.u32 	%r441, 28;
	// inline asm
	call _rt_trace_64, (%r439, %f1333, %f1334, %f1335, %f62, %f63, %f64, %r440, %f562, %f563, %rd113, %r441);
	// inline asm

BB0_51:
	ld.local.f32 	%f71, [%rd14];
	setp.ltu.f32	%p34, %f71, 0f00000000;
	@%p34 bra 	BB0_235;
	bra.uni 	BB0_52;

BB0_235:
	ld.global.u32 	%r795, [bounceFlag];
	setp.eq.s32	%p160, %r795, 0;
	selp.u16	%rs10, 1, 0, %p160;
	mov.f32 	%f1418, 0f3F800000;
	mov.f32 	%f1409, 0f00000000;
	mov.f32 	%f1410, %f1409;
	mov.f32 	%f1411, %f1409;
	mov.f32 	%f1412, %f1409;
	mov.f32 	%f1413, %f1409;
	mov.f32 	%f1414, %f1409;
	mov.f32 	%f1394, %f1409;
	mov.f32 	%f1395, %f1409;
	mov.f32 	%f1396, %f1409;
	bra.uni 	BB0_236;

BB0_52:
	fma.rn.f32 	%f564, %f62, %f71, %f1333;
	fma.rn.f32 	%f565, %f63, %f71, %f1334;
	fma.rn.f32 	%f566, %f64, %f71, %f1335;
	mul.f32 	%f567, %f564, 0f3456BF95;
	mul.f32 	%f568, %f565, 0f3456BF95;
	mul.f32 	%f569, %f566, 0f3456BF95;
	abs.f32 	%f570, %f567;
	abs.f32 	%f571, %f568;
	abs.f32 	%f572, %f569;
	max.f32 	%f573, %f570, %f571;
	max.f32 	%f574, %f573, %f572;
	mov.f32 	%f575, 0f38D1B717;
	max.f32 	%f576, %f574, %f575;
	ld.local.f32 	%f577, [%rd14+-12];
	ld.local.f32 	%f578, [%rd14+-8];
	ld.local.f32 	%f579, [%rd14+-4];
	fma.rn.f32 	%f72, %f576, %f577, %f564;
	fma.rn.f32 	%f73, %f576, %f578, %f565;
	fma.rn.f32 	%f74, %f576, %f579, %f566;
	ld.global.v2.u32 	{%r446, %r447}, [pixelID];
	cvt.u64.u32	%rd119, %r446;
	cvt.u64.u32	%rd120, %r447;
	mov.u64 	%rd129, GBufferPos;
	cvta.global.u64 	%rd118, %rd129;
	// inline asm
	call (%rd117), _rt_buffer_get_64, (%rd118, %r295, %r431, %rd119, %rd120, %rd293, %rd293);
	// inline asm
	st.f32 	[%rd117+8], %f74;
	st.f32 	[%rd117+4], %f73;
	st.f32 	[%rd117], %f72;
	ld.global.v2.u32 	{%r450, %r451}, [pixelID];
	cvt.u64.u32	%rd125, %r450;
	cvt.u64.u32	%rd126, %r451;
	mov.u64 	%rd130, GBufferNormal;
	cvta.global.u64 	%rd124, %rd130;
	// inline asm
	call (%rd123), _rt_buffer_get_64, (%rd124, %r295, %r431, %rd125, %rd126, %rd293, %rd293);
	// inline asm
	ld.local.f32 	%f580, [%rd14+-12];
	ld.local.f32 	%f581, [%rd14+-8];
	ld.local.f32 	%f582, [%rd14+-4];
	st.f32 	[%rd123+8], %f582;
	st.f32 	[%rd123+4], %f581;
	st.f32 	[%rd123], %f580;
	ld.local.f32 	%f583, [%rd14+12];
	ld.local.f32 	%f584, [%rd14+8];
	ld.local.f32 	%f585, [%rd14+4];
	setp.lt.f32	%p35, %f585, 0f00000000;
	neg.f32 	%f586, %f585;
	selp.f32	%f587, %f586, %f585, %p35;
	ld.global.f32 	%f588, [backFaceWeight];
	selp.f32	%f589, %f588, 0f3F800000, %p35;
	cvt.rmi.f32.f32	%f590, %f587;
	cvt.rmi.f32.f32	%f591, %f584;
	cvt.rmi.f32.f32	%f592, %f583;
	sub.f32 	%f593, %f587, %f590;
	sub.f32 	%f594, %f584, %f591;
	sub.f32 	%f595, %f583, %f592;
	mul.f32 	%f1412, %f589, %f593;
	mul.f32 	%f1413, %f589, %f594;
	mul.f32 	%f1414, %f589, %f595;
	mul.f32 	%f1409, %f590, 0f3B808081;
	mul.f32 	%f1410, %f591, 0f3B808081;
	mul.f32 	%f1411, %f592, 0f3B808081;
	ld.global.u32 	%r454, [bounceFlag];
	setp.lt.s32	%p36, %r454, 1;
	@%p36 bra 	BB0_54;

	mul.f32 	%f1412, %f69, %f1412;
	mul.f32 	%f1413, %f68, %f1413;
	mul.f32 	%f1414, %f70, %f1414;
	mul.f32 	%f1409, %f69, %f1409;
	mul.f32 	%f1410, %f68, %f1410;
	mul.f32 	%f1411, %f70, %f1411;

BB0_54:
	mov.u64 	%rd136, globalLights;
	cvta.global.u64 	%rd135, %rd136;
	mov.u32 	%r455, 1;
	mov.u32 	%r456, 48;
	// inline asm
	call (%rd131, %rd132, %rd133, %rd134), _rt_buffer_get_size_64, (%rd135, %r455, %r456);
	// inline asm
	cvt.u32.u64	%r72, %rd131;
	setp.eq.s32	%p37, %r72, 0;
	mov.f32 	%f1394, 0f00000000;
	mov.f32 	%f1395, %f1394;
	mov.f32 	%f1396, %f1394;
	@%p37 bra 	BB0_162;

	// inline asm
	call (%rd137, %rd138, %rd139, %rd140), _rt_buffer_get_size_64, (%rd135, %r455, %r456);
	// inline asm
	cvt.u32.u64	%r461, %rd137;
	cvt.rn.f32.u32	%f599, %r461;
	mul.f32 	%f600, %f3, %f599;
	cvt.rzi.u32.f32	%r462, %f600;
	add.s32 	%r463, %r461, -1;
	min.u32 	%r464, %r462, %r463;
	cvt.u64.u32	%rd144, %r464;
	// inline asm
	call (%rd142), _rt_buffer_get_64, (%rd135, %r455, %r456, %rd144, %rd293, %rd293, %rd293);
	// inline asm
	ld.v4.f32 	{%f601, %f602, %f603, %f604}, [%rd142+32];
	ld.v4.f32 	{%f605, %f606, %f607, %f608}, [%rd142+16];
	ld.v4.f32 	{%f609, %f610, %f611, %f612}, [%rd142];
	setp.lt.f32	%p38, %f609, 0f3F800000;
	@%p38 bra 	BB0_109;
	bra.uni 	BB0_56;

BB0_109:
	fma.rn.f32 	%f732, %f610, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f733, %f611, 0f40000000, 0fBF800000;
	abs.f32 	%f734, %f732;
	mov.f32 	%f1376, 0f3F800000;
	sub.f32 	%f736, %f1376, %f734;
	abs.f32 	%f737, %f733;
	sub.f32 	%f738, %f736, %f737;
	neg.f32 	%f739, %f738;
	cvt.sat.f32.f32	%f740, %f739;
	setp.ltu.f32	%p71, %f732, 0f00000000;
	neg.f32 	%f741, %f740;
	selp.f32	%f742, %f740, %f741, %p71;
	add.f32 	%f743, %f732, %f742;
	setp.ltu.f32	%p72, %f733, 0f00000000;
	selp.f32	%f744, %f740, %f741, %p72;
	add.f32 	%f745, %f733, %f744;
	mul.f32 	%f746, %f745, %f745;
	fma.rn.f32 	%f747, %f743, %f743, %f746;
	fma.rn.f32 	%f748, %f738, %f738, %f747;
	sqrt.rn.f32 	%f749, %f748;
	rcp.rn.f32 	%f750, %f749;
	mul.f32 	%f180, %f750, %f743;
	mul.f32 	%f181, %f750, %f745;
	mul.f32 	%f182, %f738, %f750;
	ld.local.f32 	%f751, [%rd14+-12];
	mul.f32 	%f752, %f751, %f180;
	ld.local.f32 	%f753, [%rd14+-8];
	mul.f32 	%f754, %f181, %f753;
	neg.f32 	%f755, %f754;
	sub.f32 	%f756, %f755, %f752;
	ld.local.f32 	%f757, [%rd14+-4];
	mul.f32 	%f758, %f182, %f757;
	sub.f32 	%f1363, %f756, %f758;
	setp.gt.f32	%p73, %f1363, 0f00000000;
	setp.neu.f32	%p74, %f612, 0f00000000;
	and.pred  	%p75, %p73, %p74;
	@!%p75 bra 	BB0_111;
	bra.uni 	BB0_110;

BB0_110:
	abs.f32 	%f767, %f180;
	abs.f32 	%f768, %f182;
	setp.gt.f32	%p76, %f767, %f768;
	neg.f32 	%f769, %f181;
	selp.f32	%f770, %f769, 0f00000000, %p76;
	neg.f32 	%f771, %f182;
	selp.f32	%f772, %f180, %f771, %p76;
	selp.f32	%f773, 0f00000000, %f181, %p76;
	mul.f32 	%f774, %f772, %f772;
	fma.rn.f32 	%f775, %f770, %f770, %f774;
	fma.rn.f32 	%f776, %f773, %f773, %f775;
	sqrt.rn.f32 	%f777, %f776;
	rcp.rn.f32 	%f778, %f777;
	mul.f32 	%f779, %f770, %f778;
	mul.f32 	%f780, %f772, %f778;
	mul.f32 	%f781, %f773, %f778;
	mul.f32 	%f782, %f182, %f780;
	mul.f32 	%f783, %f181, %f781;
	sub.f32 	%f784, %f782, %f783;
	mul.f32 	%f785, %f180, %f781;
	mul.f32 	%f786, %f182, %f779;
	sub.f32 	%f787, %f785, %f786;
	mul.f32 	%f788, %f181, %f779;
	mul.f32 	%f789, %f180, %f780;
	sub.f32 	%f790, %f788, %f789;
	mul.f32 	%f791, %f73, %f787;
	fma.rn.f32 	%f792, %f72, %f784, %f791;
	fma.rn.f32 	%f793, %f74, %f790, %f792;
	fma.rn.f32 	%f763, %f601, %f793, %f603;
	mul.f32 	%f794, %f73, %f780;
	fma.rn.f32 	%f795, %f72, %f779, %f794;
	fma.rn.f32 	%f796, %f74, %f781, %f795;
	fma.rn.f32 	%f764, %f602, %f796, %f604;
	cvt.rzi.s32.f32	%r566, %f612;
	mov.f32 	%f766, 0f00000000;
	// inline asm
	call (%f759, %f760, %f761, %f762), _rt_texture_get_f_id, (%r566, %r295, %f763, %f764, %f766, %f766);
	// inline asm
	mul.f32 	%f1363, %f1363, %f759;

BB0_111:
	mov.f32 	%f1377, 0f00000000;
	setp.le.f32	%p77, %f1363, 0f00000000;
	mov.f32 	%f1378, %f1377;
	mov.f32 	%f1379, %f1377;
	@%p77 bra 	BB0_161;

	abs.f32 	%f801, %f180;
	abs.f32 	%f802, %f182;
	setp.gt.f32	%p78, %f801, %f802;
	neg.f32 	%f803, %f181;
	selp.f32	%f804, %f803, 0f00000000, %p78;
	neg.f32 	%f805, %f182;
	selp.f32	%f806, %f180, %f805, %p78;
	selp.f32	%f807, 0f00000000, %f181, %p78;
	mul.f32 	%f808, %f806, %f806;
	fma.rn.f32 	%f809, %f804, %f804, %f808;
	fma.rn.f32 	%f810, %f807, %f807, %f809;
	sqrt.rn.f32 	%f811, %f810;
	rcp.rn.f32 	%f812, %f811;
	mul.f32 	%f186, %f804, %f812;
	mul.f32 	%f187, %f806, %f812;
	mul.f32 	%f188, %f807, %f812;
	setp.ltu.f32	%p79, %f605, 0f00000000;
	@%p79 bra 	BB0_160;

	sqrt.rn.f32 	%f189, %f1;
	add.u64 	%rd171, %SP, 0;
	cvta.to.local.u64 	%rd29, %rd171;
	mul.f32 	%f1370, %f2, 0f40C90FDB;
	abs.f32 	%f191, %f1370;
	setp.neu.f32	%p80, %f191, 0f7F800000;
	mov.f32 	%f1364, %f1370;
	@%p80 bra 	BB0_115;

	mov.f32 	%f813, 0f00000000;
	mul.rn.f32 	%f1364, %f1370, %f813;

BB0_115:
	mul.f32 	%f814, %f1364, 0f3F22F983;
	cvt.rni.s32.f32	%r919, %f814;
	cvt.rn.f32.s32	%f815, %r919;
	neg.f32 	%f816, %f815;
	mov.f32 	%f817, 0f3FC90FDA;
	fma.rn.f32 	%f818, %f816, %f817, %f1364;
	mov.f32 	%f819, 0f33A22168;
	fma.rn.f32 	%f820, %f816, %f819, %f818;
	mov.f32 	%f821, 0f27C234C5;
	fma.rn.f32 	%f1365, %f816, %f821, %f820;
	abs.f32 	%f822, %f1364;
	add.s64 	%rd30, %rd29, 24;
	setp.leu.f32	%p81, %f822, 0f47CE4780;
	@%p81 bra 	BB0_126;

	mov.b32 	 %r144, %f1364;
	shr.u32 	%r145, %r144, 23;
	shl.b32 	%r570, %r144, 8;
	or.b32  	%r146, %r570, -2147483648;
	mov.u32 	%r910, 0;
	mov.u64 	%rd295, 0;
	mov.u64 	%rd294, %rd29;
	mov.u32 	%r911, %r910;

BB0_117:
	.pragma "nounroll";
	shl.b64 	%rd173, %rd295, 2;
	mov.u64 	%rd174, __cudart_i2opi_f;
	add.s64 	%rd175, %rd174, %rd173;
	ld.const.u32 	%r573, [%rd175];
	// inline asm
	{
	mad.lo.cc.u32   %r571, %r573, %r146, %r911;
	madc.hi.u32     %r911, %r573, %r146,  0;
	}
	// inline asm
	st.local.u32 	[%rd294], %r571;
	add.s32 	%r910, %r910, 1;
	cvt.s64.s32	%rd295, %r910;
	mul.wide.s32 	%rd176, %r910, 4;
	add.s64 	%rd294, %rd29, %rd176;
	setp.ne.s32	%p82, %r910, 6;
	@%p82 bra 	BB0_117;

	and.b32  	%r576, %r145, 255;
	add.s32 	%r577, %r576, -128;
	shr.u32 	%r578, %r577, 5;
	and.b32  	%r151, %r144, -2147483648;
	st.local.u32 	[%rd30], %r911;
	mov.u32 	%r579, 6;
	sub.s32 	%r580, %r579, %r578;
	mul.wide.s32 	%rd177, %r580, 4;
	add.s64 	%rd36, %rd29, %rd177;
	ld.local.u32 	%r912, [%rd36];
	ld.local.u32 	%r913, [%rd36+-4];
	and.b32  	%r154, %r145, 31;
	setp.eq.s32	%p83, %r154, 0;
	@%p83 bra 	BB0_120;

	mov.u32 	%r581, 32;
	sub.s32 	%r582, %r581, %r154;
	shr.u32 	%r583, %r913, %r582;
	shl.b32 	%r584, %r912, %r154;
	add.s32 	%r912, %r583, %r584;
	ld.local.u32 	%r585, [%rd36+-8];
	shr.u32 	%r586, %r585, %r582;
	shl.b32 	%r587, %r913, %r154;
	add.s32 	%r913, %r586, %r587;

BB0_120:
	shr.u32 	%r588, %r913, 30;
	shl.b32 	%r589, %r912, 2;
	add.s32 	%r914, %r588, %r589;
	shl.b32 	%r160, %r913, 2;
	shr.u32 	%r590, %r914, 31;
	shr.u32 	%r591, %r912, 30;
	add.s32 	%r161, %r590, %r591;
	setp.eq.s32	%p84, %r590, 0;
	@%p84 bra 	BB0_121;

	not.b32 	%r592, %r914;
	neg.s32 	%r916, %r160;
	setp.eq.s32	%p85, %r160, 0;
	selp.u32	%r593, 1, 0, %p85;
	add.s32 	%r914, %r593, %r592;
	xor.b32  	%r915, %r151, -2147483648;
	bra.uni 	BB0_123;

BB0_56:
	ld.local.f32 	%f114, [%rd14+-8];
	ld.local.f32 	%f113, [%rd14+-4];
	ld.local.f32 	%f112, [%rd14+-12];
	abs.f32 	%f613, %f112;
	abs.f32 	%f614, %f113;
	setp.gt.f32	%p39, %f613, %f614;
	neg.f32 	%f615, %f114;
	neg.f32 	%f616, %f113;
	selp.f32	%f617, %f615, 0f00000000, %p39;
	selp.f32	%f618, %f112, %f616, %p39;
	selp.f32	%f619, 0f00000000, %f114, %p39;
	mul.f32 	%f620, %f618, %f618;
	fma.rn.f32 	%f621, %f617, %f617, %f620;
	fma.rn.f32 	%f622, %f619, %f619, %f621;
	sqrt.rn.f32 	%f623, %f622;
	rcp.rn.f32 	%f624, %f623;
	mul.f32 	%f115, %f617, %f624;
	mul.f32 	%f116, %f618, %f624;
	mul.f32 	%f117, %f619, %f624;
	sqrt.rn.f32 	%f118, %f1;
	mul.f32 	%f1348, %f2, 0f40C90FDB;
	abs.f32 	%f120, %f1348;
	setp.neu.f32	%p40, %f120, 0f7F800000;
	mov.f32 	%f1342, %f1348;
	@%p40 bra 	BB0_58;

	mov.f32 	%f625, 0f00000000;
	mul.rn.f32 	%f1342, %f1348, %f625;

BB0_58:
	mul.f32 	%f626, %f1342, 0f3F22F983;
	cvt.rni.s32.f32	%r899, %f626;
	cvt.rn.f32.s32	%f627, %r899;
	neg.f32 	%f628, %f627;
	mov.f32 	%f629, 0f3FC90FDA;
	fma.rn.f32 	%f630, %f628, %f629, %f1342;
	mov.f32 	%f631, 0f33A22168;
	fma.rn.f32 	%f632, %f628, %f631, %f630;
	mov.f32 	%f633, 0f27C234C5;
	fma.rn.f32 	%f1343, %f628, %f633, %f632;
	abs.f32 	%f634, %f1342;
	setp.leu.f32	%p41, %f634, 0f47CE4780;
	@%p41 bra 	BB0_69;

	mov.b32 	 %r74, %f1342;
	shl.b32 	%r467, %r74, 8;
	or.b32  	%r75, %r467, -2147483648;
	add.u64 	%rd150, %SP, 0;
	cvta.to.local.u64 	%rd15, %rd150;
	mov.u32 	%r890, 0;
	mov.u64 	%rd291, 0;
	mov.u64 	%rd290, %rd15;
	mov.u32 	%r891, %r890;

BB0_60:
	.pragma "nounroll";
	shl.b64 	%rd151, %rd291, 2;
	mov.u64 	%rd152, __cudart_i2opi_f;
	add.s64 	%rd153, %rd152, %rd151;
	ld.const.u32 	%r470, [%rd153];
	// inline asm
	{
	mad.lo.cc.u32   %r468, %r470, %r75, %r891;
	madc.hi.u32     %r891, %r470, %r75,  0;
	}
	// inline asm
	st.local.u32 	[%rd290], %r468;
	add.s32 	%r890, %r890, 1;
	cvt.s64.s32	%rd291, %r890;
	mul.wide.s32 	%rd156, %r890, 4;
	add.s64 	%rd290, %rd15, %rd156;
	setp.ne.s32	%p42, %r890, 6;
	@%p42 bra 	BB0_60;

	bfe.u32 	%r473, %r74, 23, 8;
	add.s32 	%r474, %r473, -128;
	shr.u32 	%r475, %r474, 5;
	and.b32  	%r80, %r74, -2147483648;
	cvta.to.local.u64 	%rd158, %rd150;
	st.local.u32 	[%rd158+24], %r891;
	bfe.u32 	%r81, %r74, 23, 5;
	mov.u32 	%r476, 6;
	sub.s32 	%r477, %r476, %r475;
	mul.wide.s32 	%rd159, %r477, 4;
	add.s64 	%rd20, %rd158, %rd159;
	ld.local.u32 	%r892, [%rd20];
	ld.local.u32 	%r893, [%rd20+-4];
	setp.eq.s32	%p43, %r81, 0;
	@%p43 bra 	BB0_63;

	mov.u32 	%r478, 32;
	sub.s32 	%r479, %r478, %r81;
	shr.u32 	%r480, %r893, %r479;
	shl.b32 	%r481, %r892, %r81;
	add.s32 	%r892, %r480, %r481;
	ld.local.u32 	%r482, [%rd20+-8];
	shr.u32 	%r483, %r482, %r479;
	shl.b32 	%r484, %r893, %r81;
	add.s32 	%r893, %r483, %r484;

BB0_63:
	shr.u32 	%r485, %r893, 30;
	shl.b32 	%r486, %r892, 2;
	add.s32 	%r894, %r485, %r486;
	shl.b32 	%r89, %r893, 2;
	shr.u32 	%r487, %r894, 31;
	shr.u32 	%r488, %r892, 30;
	add.s32 	%r90, %r487, %r488;
	setp.eq.s32	%p44, %r487, 0;
	@%p44 bra 	BB0_64;

	not.b32 	%r489, %r894;
	neg.s32 	%r896, %r89;
	setp.eq.s32	%p45, %r89, 0;
	selp.u32	%r490, 1, 0, %p45;
	add.s32 	%r894, %r490, %r489;
	xor.b32  	%r895, %r80, -2147483648;
	bra.uni 	BB0_66;

BB0_64:
	mov.u32 	%r895, %r80;
	mov.u32 	%r896, %r89;

BB0_66:
	clz.b32 	%r898, %r894;
	setp.eq.s32	%p46, %r898, 0;
	shl.b32 	%r491, %r894, %r898;
	mov.u32 	%r492, 32;
	sub.s32 	%r493, %r492, %r898;
	shr.u32 	%r494, %r896, %r493;
	add.s32 	%r495, %r494, %r491;
	selp.b32	%r98, %r894, %r495, %p46;
	mov.u32 	%r496, -921707870;
	mul.hi.u32 	%r897, %r98, %r496;
	setp.eq.s32	%p47, %r80, 0;
	neg.s32 	%r497, %r90;
	selp.b32	%r899, %r90, %r497, %p47;
	setp.lt.s32	%p48, %r897, 1;
	@%p48 bra 	BB0_68;

	mul.lo.s32 	%r498, %r98, -921707870;
	shr.u32 	%r499, %r498, 31;
	shl.b32 	%r500, %r897, 1;
	add.s32 	%r897, %r499, %r500;
	add.s32 	%r898, %r898, 1;

BB0_68:
	mov.u32 	%r501, 126;
	sub.s32 	%r502, %r501, %r898;
	shl.b32 	%r503, %r502, 23;
	add.s32 	%r504, %r897, 1;
	shr.u32 	%r505, %r504, 7;
	add.s32 	%r506, %r505, 1;
	shr.u32 	%r507, %r506, 1;
	add.s32 	%r508, %r507, %r503;
	or.b32  	%r509, %r508, %r895;
	mov.b32 	 %f1343, %r509;

BB0_69:
	mul.rn.f32 	%f126, %f1343, %f1343;
	add.s32 	%r106, %r899, 1;
	and.b32  	%r107, %r106, 1;
	setp.eq.s32	%p49, %r107, 0;
	@%p49 bra 	BB0_71;

	mov.f32 	%f635, 0fBAB6061A;
	mov.f32 	%f636, 0f37CCF5CE;
	fma.rn.f32 	%f1344, %f636, %f126, %f635;
	bra.uni 	BB0_72;

BB0_71:
	mov.f32 	%f637, 0f3C08839E;
	mov.f32 	%f638, 0fB94CA1F9;
	fma.rn.f32 	%f1344, %f638, %f126, %f637;

BB0_72:
	@%p49 bra 	BB0_74;

	mov.f32 	%f639, 0f3D2AAAA5;
	fma.rn.f32 	%f640, %f1344, %f126, %f639;
	mov.f32 	%f641, 0fBF000000;
	fma.rn.f32 	%f1345, %f640, %f126, %f641;
	bra.uni 	BB0_75;

BB0_74:
	mov.f32 	%f642, 0fBE2AAAA3;
	fma.rn.f32 	%f643, %f1344, %f126, %f642;
	mov.f32 	%f644, 0f00000000;
	fma.rn.f32 	%f1345, %f643, %f126, %f644;

BB0_75:
	fma.rn.f32 	%f1346, %f1345, %f1343, %f1343;
	@%p49 bra 	BB0_77;

	mov.f32 	%f645, 0f3F800000;
	fma.rn.f32 	%f1346, %f1345, %f126, %f645;

BB0_77:
	and.b32  	%r510, %r106, 2;
	setp.eq.s32	%p52, %r510, 0;
	@%p52 bra 	BB0_79;

	mov.f32 	%f646, 0f00000000;
	mov.f32 	%f647, 0fBF800000;
	fma.rn.f32 	%f1346, %f1346, %f647, %f646;

BB0_79:
	@%p40 bra 	BB0_81;

	mov.f32 	%f648, 0f00000000;
	mul.rn.f32 	%f1348, %f1348, %f648;

BB0_81:
	mul.f32 	%f649, %f1348, 0f3F22F983;
	cvt.rni.s32.f32	%r909, %f649;
	cvt.rn.f32.s32	%f650, %r909;
	neg.f32 	%f651, %f650;
	fma.rn.f32 	%f653, %f651, %f629, %f1348;
	fma.rn.f32 	%f655, %f651, %f631, %f653;
	fma.rn.f32 	%f1349, %f651, %f633, %f655;
	abs.f32 	%f657, %f1348;
	setp.leu.f32	%p54, %f657, 0f47CE4780;
	@%p54 bra 	BB0_92;

	mov.b32 	 %r109, %f1348;
	shr.u32 	%r110, %r109, 23;
	shl.b32 	%r513, %r109, 8;
	or.b32  	%r111, %r513, -2147483648;
	add.u64 	%rd161, %SP, 0;
	cvta.to.local.u64 	%rd21, %rd161;
	mov.u64 	%rd292, %rd21;
	mov.u32 	%r900, %r433;
	mov.u32 	%r901, %r433;

BB0_83:
	.pragma "nounroll";
	shl.b64 	%rd162, %rd293, 2;
	mov.u64 	%rd163, __cudart_i2opi_f;
	add.s64 	%rd164, %rd163, %rd162;
	ld.const.u32 	%r516, [%rd164];
	// inline asm
	{
	mad.lo.cc.u32   %r514, %r516, %r111, %r901;
	madc.hi.u32     %r901, %r516, %r111,  0;
	}
	// inline asm
	st.local.u32 	[%rd292], %r514;
	add.s32 	%r900, %r900, 1;
	cvt.s64.s32	%rd293, %r900;
	mul.wide.s32 	%rd165, %r900, 4;
	add.s64 	%rd292, %rd21, %rd165;
	setp.ne.s32	%p55, %r900, 6;
	@%p55 bra 	BB0_83;

	and.b32  	%r519, %r110, 255;
	add.s32 	%r520, %r519, -128;
	shr.u32 	%r521, %r520, 5;
	and.b32  	%r116, %r109, -2147483648;
	cvta.to.local.u64 	%rd167, %rd161;
	st.local.u32 	[%rd167+24], %r901;
	mov.u32 	%r522, 6;
	sub.s32 	%r523, %r522, %r521;
	mul.wide.s32 	%rd168, %r523, 4;
	add.s64 	%rd27, %rd167, %rd168;
	ld.local.u32 	%r902, [%rd27];
	ld.local.u32 	%r903, [%rd27+-4];
	and.b32  	%r119, %r110, 31;
	setp.eq.s32	%p56, %r119, 0;
	@%p56 bra 	BB0_86;

	mov.u32 	%r524, 32;
	sub.s32 	%r525, %r524, %r119;
	shr.u32 	%r526, %r903, %r525;
	shl.b32 	%r527, %r902, %r119;
	add.s32 	%r902, %r526, %r527;
	ld.local.u32 	%r528, [%rd27+-8];
	shr.u32 	%r529, %r528, %r525;
	shl.b32 	%r530, %r903, %r119;
	add.s32 	%r903, %r529, %r530;

BB0_86:
	shr.u32 	%r531, %r903, 30;
	shl.b32 	%r532, %r902, 2;
	add.s32 	%r904, %r531, %r532;
	shl.b32 	%r125, %r903, 2;
	shr.u32 	%r533, %r904, 31;
	shr.u32 	%r534, %r902, 30;
	add.s32 	%r126, %r533, %r534;
	setp.eq.s32	%p57, %r533, 0;
	@%p57 bra 	BB0_87;

	not.b32 	%r535, %r904;
	neg.s32 	%r906, %r125;
	setp.eq.s32	%p58, %r125, 0;
	selp.u32	%r536, 1, 0, %p58;
	add.s32 	%r904, %r536, %r535;
	xor.b32  	%r905, %r116, -2147483648;
	bra.uni 	BB0_89;

BB0_87:
	mov.u32 	%r905, %r116;
	mov.u32 	%r906, %r125;

BB0_89:
	clz.b32 	%r908, %r904;
	setp.eq.s32	%p59, %r908, 0;
	shl.b32 	%r537, %r904, %r908;
	mov.u32 	%r538, 32;
	sub.s32 	%r539, %r538, %r908;
	shr.u32 	%r540, %r906, %r539;
	add.s32 	%r541, %r540, %r537;
	selp.b32	%r134, %r904, %r541, %p59;
	mov.u32 	%r542, -921707870;
	mul.hi.u32 	%r907, %r134, %r542;
	setp.eq.s32	%p60, %r116, 0;
	neg.s32 	%r543, %r126;
	selp.b32	%r909, %r126, %r543, %p60;
	setp.lt.s32	%p61, %r907, 1;
	@%p61 bra 	BB0_91;

	mul.lo.s32 	%r544, %r134, -921707870;
	shr.u32 	%r545, %r544, 31;
	shl.b32 	%r546, %r907, 1;
	add.s32 	%r907, %r545, %r546;
	add.s32 	%r908, %r908, 1;

BB0_91:
	mov.u32 	%r547, 126;
	sub.s32 	%r548, %r547, %r908;
	shl.b32 	%r549, %r548, 23;
	add.s32 	%r550, %r907, 1;
	shr.u32 	%r551, %r550, 7;
	add.s32 	%r552, %r551, 1;
	shr.u32 	%r553, %r552, 1;
	add.s32 	%r554, %r553, %r549;
	or.b32  	%r555, %r554, %r905;
	mov.b32 	 %f1349, %r555;

BB0_92:
	mul.rn.f32 	%f143, %f1349, %f1349;
	and.b32  	%r142, %r909, 1;
	setp.eq.s32	%p62, %r142, 0;
	@%p62 bra 	BB0_94;

	mov.f32 	%f658, 0fBAB6061A;
	mov.f32 	%f659, 0f37CCF5CE;
	fma.rn.f32 	%f1350, %f659, %f143, %f658;
	bra.uni 	BB0_95;

BB0_94:
	mov.f32 	%f660, 0f3C08839E;
	mov.f32 	%f661, 0fB94CA1F9;
	fma.rn.f32 	%f1350, %f661, %f143, %f660;

BB0_95:
	@%p62 bra 	BB0_97;

	mov.f32 	%f662, 0f3D2AAAA5;
	fma.rn.f32 	%f663, %f1350, %f143, %f662;
	mov.f32 	%f664, 0fBF000000;
	fma.rn.f32 	%f1351, %f663, %f143, %f664;
	bra.uni 	BB0_98;

BB0_97:
	mov.f32 	%f665, 0fBE2AAAA3;
	fma.rn.f32 	%f666, %f1350, %f143, %f665;
	mov.f32 	%f667, 0f00000000;
	fma.rn.f32 	%f1351, %f666, %f143, %f667;

BB0_98:
	fma.rn.f32 	%f1352, %f1351, %f1349, %f1349;
	@%p62 bra 	BB0_100;

	mov.f32 	%f668, 0f3F800000;
	fma.rn.f32 	%f1352, %f1351, %f143, %f668;

BB0_100:
	and.b32  	%r556, %r909, 2;
	setp.eq.s32	%p65, %r556, 0;
	@%p65 bra 	BB0_102;

	mov.f32 	%f669, 0f00000000;
	mov.f32 	%f670, 0fBF800000;
	fma.rn.f32 	%f1352, %f1352, %f670, %f669;

BB0_102:
	mul.f32 	%f674, %f118, %f1346;
	mul.f32 	%f675, %f674, %f674;
	mov.f32 	%f1354, 0f3F800000;
	sub.f32 	%f677, %f1354, %f675;
	mul.f32 	%f678, %f118, %f1352;
	mul.f32 	%f679, %f678, %f678;
	sub.f32 	%f680, %f677, %f679;
	mov.f32 	%f1357, 0f00000000;
	max.f32 	%f681, %f1357, %f680;
	sqrt.rn.f32 	%f682, %f681;
	mul.f32 	%f683, %f115, %f678;
	mul.f32 	%f684, %f116, %f678;
	mul.f32 	%f685, %f117, %f678;
	mul.f32 	%f686, %f113, %f116;
	mul.f32 	%f687, %f114, %f117;
	sub.f32 	%f688, %f686, %f687;
	fma.rn.f32 	%f689, %f688, %f674, %f683;
	mul.f32 	%f690, %f112, %f117;
	mul.f32 	%f691, %f113, %f115;
	sub.f32 	%f692, %f690, %f691;
	fma.rn.f32 	%f693, %f692, %f674, %f684;
	mul.f32 	%f694, %f114, %f115;
	mul.f32 	%f695, %f112, %f116;
	sub.f32 	%f696, %f694, %f695;
	fma.rn.f32 	%f697, %f696, %f674, %f685;
	fma.rn.f32 	%f155, %f112, %f682, %f689;
	fma.rn.f32 	%f156, %f114, %f682, %f693;
	fma.rn.f32 	%f157, %f113, %f682, %f697;
	add.u64 	%rd169, %SP, 28;
	cvta.to.local.u64 	%rd28, %rd169;
	st.local.u32 	[%rd28], %r433;
	setp.gt.f32	%p66, %f156, 0f00000000;
	setp.eq.f32	%p67, %f605, 0f00000000;
	or.pred  	%p68, %p67, %p66;
	mov.f32 	%f1358, %f1357;
	mov.f32 	%f1359, %f1357;
	@!%p68 bra 	BB0_106;
	bra.uni 	BB0_103;

BB0_103:
	mov.u32 	%r561, 1065353216;
	st.local.u32 	[%rd28], %r561;
	mul.f32 	%f709, %f72, 0f3456BF95;
	abs.f32 	%f710, %f709;
	mul.f32 	%f711, %f73, 0f3456BF95;
	abs.f32 	%f712, %f711;
	mul.f32 	%f713, %f74, 0f3456BF95;
	abs.f32 	%f714, %f713;
	max.f32 	%f715, %f710, %f712;
	max.f32 	%f716, %f715, %f714;
	max.f32 	%f704, %f716, %f575;
	ld.global.u32 	%r558, [root];
	mov.f32 	%f705, 0f6C4ECB8F;
	mov.u32 	%r560, 4;
	// inline asm
	call _rt_trace_64, (%r558, %f72, %f73, %f74, %f155, %f156, %f157, %r455, %f704, %f705, %rd169, %r560);
	// inline asm
	setp.leu.f32	%p69, %f610, 0f00000000;
	mov.f32 	%f1355, %f1354;
	mov.f32 	%f1356, %f1354;
	@%p69 bra 	BB0_105;

	cvt.rzi.s32.f32	%r562, %f611;
	neg.f32 	%f724, %f155;
	neg.f32 	%f723, %f156;
	neg.f32 	%f722, %f157;
	mov.u32 	%r563, 6;
	// inline asm
	call (%f1354, %f1355, %f1356, %f721), _rt_texture_get_base_id, (%r562, %r563, %f722, %f723, %f724, %r433);
	// inline asm

BB0_105:
	ld.local.f32 	%f725, [%rd28];
	fma.rn.f32 	%f1357, %f1354, %f725, 0f00000000;
	fma.rn.f32 	%f1358, %f1355, %f725, 0f00000000;
	fma.rn.f32 	%f1359, %f1356, %f725, 0f00000000;

BB0_106:
	ld.global.u32 	%r565, [bounceFlag];
	setp.lt.s32	%p70, %r565, 1;
	@%p70 bra 	BB0_108;

	add.f32 	%f726, %f609, 0fBF800000;
	mul.f32 	%f727, %f726, 0f42C80000;
	mul.f32 	%f1357, %f727, %f1357;
	mul.f32 	%f1358, %f727, %f1358;
	mul.f32 	%f1359, %f727, %f1359;

BB0_108:
	cvt.rn.f32.u32	%f728, %r72;
	mul.f32 	%f729, %f606, %f1357;
	mul.f32 	%f1394, %f728, %f729;
	mul.f32 	%f730, %f607, %f1358;
	mul.f32 	%f1395, %f728, %f730;
	mul.f32 	%f731, %f608, %f1359;
	mul.f32 	%f1396, %f728, %f731;
	bra.uni 	BB0_162;

BB0_121:
	mov.u32 	%r915, %r151;
	mov.u32 	%r916, %r160;

BB0_123:
	clz.b32 	%r918, %r914;
	setp.eq.s32	%p86, %r918, 0;
	shl.b32 	%r594, %r914, %r918;
	mov.u32 	%r595, 32;
	sub.s32 	%r596, %r595, %r918;
	shr.u32 	%r597, %r916, %r596;
	add.s32 	%r598, %r597, %r594;
	selp.b32	%r169, %r914, %r598, %p86;
	mov.u32 	%r599, -921707870;
	mul.hi.u32 	%r917, %r169, %r599;
	setp.eq.s32	%p87, %r151, 0;
	neg.s32 	%r600, %r161;
	selp.b32	%r919, %r161, %r600, %p87;
	setp.lt.s32	%p88, %r917, 1;
	@%p88 bra 	BB0_125;

	mul.lo.s32 	%r601, %r169, -921707870;
	shr.u32 	%r602, %r601, 31;
	shl.b32 	%r603, %r917, 1;
	add.s32 	%r917, %r602, %r603;
	add.s32 	%r918, %r918, 1;

BB0_125:
	mov.u32 	%r604, 126;
	sub.s32 	%r605, %r604, %r918;
	shl.b32 	%r606, %r605, 23;
	add.s32 	%r607, %r917, 1;
	shr.u32 	%r608, %r607, 7;
	add.s32 	%r609, %r608, 1;
	shr.u32 	%r610, %r609, 1;
	add.s32 	%r611, %r610, %r606;
	or.b32  	%r612, %r611, %r915;
	mov.b32 	 %f1365, %r612;

BB0_126:
	mul.rn.f32 	%f197, %f1365, %f1365;
	add.s32 	%r177, %r919, 1;
	and.b32  	%r178, %r177, 1;
	setp.eq.s32	%p89, %r178, 0;
	@%p89 bra 	BB0_128;

	mov.f32 	%f823, 0fBAB6061A;
	mov.f32 	%f824, 0f37CCF5CE;
	fma.rn.f32 	%f1366, %f824, %f197, %f823;
	bra.uni 	BB0_129;

BB0_128:
	mov.f32 	%f825, 0f3C08839E;
	mov.f32 	%f826, 0fB94CA1F9;
	fma.rn.f32 	%f1366, %f826, %f197, %f825;

BB0_129:
	@%p89 bra 	BB0_131;

	mov.f32 	%f827, 0f3D2AAAA5;
	fma.rn.f32 	%f828, %f1366, %f197, %f827;
	mov.f32 	%f829, 0fBF000000;
	fma.rn.f32 	%f1367, %f828, %f197, %f829;
	bra.uni 	BB0_132;

BB0_131:
	mov.f32 	%f830, 0fBE2AAAA3;
	fma.rn.f32 	%f831, %f1366, %f197, %f830;
	mov.f32 	%f832, 0f00000000;
	fma.rn.f32 	%f1367, %f831, %f197, %f832;

BB0_132:
	fma.rn.f32 	%f1368, %f1367, %f1365, %f1365;
	@%p89 bra 	BB0_134;

	mov.f32 	%f833, 0f3F800000;
	fma.rn.f32 	%f1368, %f1367, %f197, %f833;

BB0_134:
	and.b32  	%r613, %r177, 2;
	setp.eq.s32	%p92, %r613, 0;
	@%p92 bra 	BB0_136;

	mov.f32 	%f834, 0f00000000;
	mov.f32 	%f835, 0fBF800000;
	fma.rn.f32 	%f1368, %f1368, %f835, %f834;

BB0_136:
	@%p80 bra 	BB0_138;

	mov.f32 	%f836, 0f00000000;
	mul.rn.f32 	%f1370, %f1370, %f836;

BB0_138:
	mul.f32 	%f837, %f1370, 0f3F22F983;
	cvt.rni.s32.f32	%r929, %f837;
	cvt.rn.f32.s32	%f838, %r929;
	neg.f32 	%f839, %f838;
	fma.rn.f32 	%f841, %f839, %f817, %f1370;
	fma.rn.f32 	%f843, %f839, %f819, %f841;
	fma.rn.f32 	%f1371, %f839, %f821, %f843;
	abs.f32 	%f845, %f1370;
	setp.leu.f32	%p94, %f845, 0f47CE4780;
	@%p94 bra 	BB0_149;

	mov.b32 	 %r180, %f1370;
	shr.u32 	%r181, %r180, 23;
	shl.b32 	%r616, %r180, 8;
	or.b32  	%r182, %r616, -2147483648;
	mov.u32 	%r920, 0;
	mov.u64 	%rd297, 0;
	mov.u64 	%rd296, %rd29;
	mov.u32 	%r921, %r920;

BB0_140:
	.pragma "nounroll";
	shl.b64 	%rd179, %rd297, 2;
	mov.u64 	%rd180, __cudart_i2opi_f;
	add.s64 	%rd181, %rd180, %rd179;
	ld.const.u32 	%r619, [%rd181];
	// inline asm
	{
	mad.lo.cc.u32   %r617, %r619, %r182, %r921;
	madc.hi.u32     %r921, %r619, %r182,  0;
	}
	// inline asm
	st.local.u32 	[%rd296], %r617;
	add.s32 	%r920, %r920, 1;
	cvt.s64.s32	%rd297, %r920;
	mul.wide.s32 	%rd182, %r920, 4;
	add.s64 	%rd296, %rd29, %rd182;
	setp.ne.s32	%p95, %r920, 6;
	@%p95 bra 	BB0_140;

	and.b32  	%r622, %r181, 255;
	add.s32 	%r623, %r622, -128;
	shr.u32 	%r624, %r623, 5;
	and.b32  	%r187, %r180, -2147483648;
	st.local.u32 	[%rd30], %r921;
	mov.u32 	%r625, 6;
	sub.s32 	%r626, %r625, %r624;
	mul.wide.s32 	%rd183, %r626, 4;
	add.s64 	%rd42, %rd29, %rd183;
	ld.local.u32 	%r922, [%rd42];
	ld.local.u32 	%r923, [%rd42+-4];
	and.b32  	%r190, %r181, 31;
	setp.eq.s32	%p96, %r190, 0;
	@%p96 bra 	BB0_143;

	mov.u32 	%r627, 32;
	sub.s32 	%r628, %r627, %r190;
	shr.u32 	%r629, %r923, %r628;
	shl.b32 	%r630, %r922, %r190;
	add.s32 	%r922, %r629, %r630;
	ld.local.u32 	%r631, [%rd42+-8];
	shr.u32 	%r632, %r631, %r628;
	shl.b32 	%r633, %r923, %r190;
	add.s32 	%r923, %r632, %r633;

BB0_143:
	shr.u32 	%r634, %r923, 30;
	shl.b32 	%r635, %r922, 2;
	add.s32 	%r924, %r634, %r635;
	shl.b32 	%r196, %r923, 2;
	shr.u32 	%r636, %r924, 31;
	shr.u32 	%r637, %r922, 30;
	add.s32 	%r197, %r636, %r637;
	setp.eq.s32	%p97, %r636, 0;
	@%p97 bra 	BB0_144;

	not.b32 	%r638, %r924;
	neg.s32 	%r926, %r196;
	setp.eq.s32	%p98, %r196, 0;
	selp.u32	%r639, 1, 0, %p98;
	add.s32 	%r924, %r639, %r638;
	xor.b32  	%r925, %r187, -2147483648;
	bra.uni 	BB0_146;

BB0_144:
	mov.u32 	%r925, %r187;
	mov.u32 	%r926, %r196;

BB0_146:
	clz.b32 	%r928, %r924;
	setp.eq.s32	%p99, %r928, 0;
	shl.b32 	%r640, %r924, %r928;
	mov.u32 	%r641, 32;
	sub.s32 	%r642, %r641, %r928;
	shr.u32 	%r643, %r926, %r642;
	add.s32 	%r644, %r643, %r640;
	selp.b32	%r205, %r924, %r644, %p99;
	mov.u32 	%r645, -921707870;
	mul.hi.u32 	%r927, %r205, %r645;
	setp.eq.s32	%p100, %r187, 0;
	neg.s32 	%r646, %r197;
	selp.b32	%r929, %r197, %r646, %p100;
	setp.lt.s32	%p101, %r927, 1;
	@%p101 bra 	BB0_148;

	mul.lo.s32 	%r647, %r205, -921707870;
	shr.u32 	%r648, %r647, 31;
	shl.b32 	%r649, %r927, 1;
	add.s32 	%r927, %r648, %r649;
	add.s32 	%r928, %r928, 1;

BB0_148:
	mov.u32 	%r650, 126;
	sub.s32 	%r651, %r650, %r928;
	shl.b32 	%r652, %r651, 23;
	add.s32 	%r653, %r927, 1;
	shr.u32 	%r654, %r653, 7;
	add.s32 	%r655, %r654, 1;
	shr.u32 	%r656, %r655, 1;
	add.s32 	%r657, %r656, %r652;
	or.b32  	%r658, %r657, %r925;
	mov.b32 	 %f1371, %r658;

BB0_149:
	mul.rn.f32 	%f214, %f1371, %f1371;
	and.b32  	%r213, %r929, 1;
	setp.eq.s32	%p102, %r213, 0;
	@%p102 bra 	BB0_151;

	mov.f32 	%f846, 0fBAB6061A;
	mov.f32 	%f847, 0f37CCF5CE;
	fma.rn.f32 	%f1372, %f847, %f214, %f846;
	bra.uni 	BB0_152;

BB0_151:
	mov.f32 	%f848, 0f3C08839E;
	mov.f32 	%f849, 0fB94CA1F9;
	fma.rn.f32 	%f1372, %f849, %f214, %f848;

BB0_152:
	@%p102 bra 	BB0_154;

	mov.f32 	%f850, 0f3D2AAAA5;
	fma.rn.f32 	%f851, %f1372, %f214, %f850;
	mov.f32 	%f852, 0fBF000000;
	fma.rn.f32 	%f1373, %f851, %f214, %f852;
	bra.uni 	BB0_155;

BB0_154:
	mov.f32 	%f853, 0fBE2AAAA3;
	fma.rn.f32 	%f854, %f1372, %f214, %f853;
	mov.f32 	%f855, 0f00000000;
	fma.rn.f32 	%f1373, %f854, %f214, %f855;

BB0_155:
	fma.rn.f32 	%f1374, %f1373, %f1371, %f1371;
	@%p102 bra 	BB0_157;

	mov.f32 	%f856, 0f3F800000;
	fma.rn.f32 	%f1374, %f1373, %f214, %f856;

BB0_157:
	and.b32  	%r659, %r929, 2;
	setp.eq.s32	%p105, %r659, 0;
	@%p105 bra 	BB0_159;

	mov.f32 	%f857, 0f00000000;
	mov.f32 	%f858, 0fBF800000;
	fma.rn.f32 	%f1374, %f1374, %f858, %f857;

BB0_159:
	mul.f32 	%f867, %f189, %f1368;
	mul.f32 	%f868, %f867, %f867;
	mov.f32 	%f869, 0f3F800000;
	sub.f32 	%f870, %f869, %f868;
	mul.f32 	%f871, %f189, %f1374;
	mul.f32 	%f872, %f871, %f871;
	sub.f32 	%f873, %f870, %f872;
	mov.f32 	%f874, 0f00000000;
	max.f32 	%f875, %f874, %f873;
	sqrt.rn.f32 	%f876, %f875;
	mul.f32 	%f877, %f186, %f871;
	mul.f32 	%f878, %f187, %f871;
	mul.f32 	%f879, %f188, %f871;
	mul.f32 	%f880, %f181, %f188;
	mul.f32 	%f881, %f182, %f187;
	sub.f32 	%f882, %f881, %f880;
	fma.rn.f32 	%f883, %f882, %f867, %f877;
	mul.f32 	%f884, %f182, %f186;
	mul.f32 	%f885, %f180, %f188;
	sub.f32 	%f886, %f885, %f884;
	fma.rn.f32 	%f887, %f886, %f867, %f878;
	mul.f32 	%f888, %f180, %f187;
	mul.f32 	%f889, %f181, %f186;
	sub.f32 	%f890, %f889, %f888;
	fma.rn.f32 	%f891, %f890, %f867, %f879;
	fma.rn.f32 	%f892, %f180, %f876, %f883;
	fma.rn.f32 	%f893, %f181, %f876, %f887;
	fma.rn.f32 	%f894, %f182, %f876, %f891;
	add.f32 	%f895, %f180, %f892;
	add.f32 	%f896, %f181, %f893;
	add.f32 	%f897, %f182, %f894;
	mul.f32 	%f898, %f605, %f895;
	mul.f32 	%f899, %f605, %f896;
	mul.f32 	%f900, %f605, %f897;
	sub.f32 	%f901, %f898, %f180;
	sub.f32 	%f902, %f899, %f181;
	sub.f32 	%f903, %f900, %f182;
	mul.f32 	%f904, %f902, %f902;
	fma.rn.f32 	%f905, %f901, %f901, %f904;
	fma.rn.f32 	%f906, %f903, %f903, %f905;
	sqrt.rn.f32 	%f907, %f906;
	rcp.rn.f32 	%f908, %f907;
	mul.f32 	%f862, %f908, %f901;
	mul.f32 	%f863, %f908, %f902;
	mul.f32 	%f864, %f908, %f903;
	mul.f32 	%f909, %f72, 0f3456BF95;
	abs.f32 	%f910, %f909;
	mul.f32 	%f911, %f73, 0f3456BF95;
	abs.f32 	%f912, %f911;
	mul.f32 	%f913, %f74, 0f3456BF95;
	abs.f32 	%f914, %f913;
	max.f32 	%f915, %f910, %f912;
	max.f32 	%f916, %f915, %f914;
	max.f32 	%f865, %f916, %f575;
	add.u64 	%rd184, %SP, 28;
	cvta.to.local.u64 	%rd185, %rd184;
	mov.u32 	%r663, 1065353216;
	st.local.u32 	[%rd185], %r663;
	ld.global.u32 	%r660, [root];
	mov.f32 	%f866, 0f6C4ECB8F;
	mov.u32 	%r662, 4;
	// inline asm
	call _rt_trace_64, (%r660, %f72, %f73, %f74, %f862, %f863, %f864, %r455, %f865, %f866, %rd184, %r662);
	// inline asm
	ld.local.f32 	%f1376, [%rd185];

BB0_160:
	ld.global.u32 	%r664, [bounceFlag];
	setp.gt.s32	%p106, %r664, 0;
	mul.f32 	%f918, %f609, 0f42C80000;
	mul.f32 	%f919, %f1363, %f1376;
	mul.f32 	%f920, %f918, %f919;
	selp.f32	%f921, %f920, %f919, %p106;
	mul.f32 	%f1377, %f606, %f921;
	mul.f32 	%f1378, %f607, %f921;
	mul.f32 	%f1379, %f608, %f921;

BB0_161:
	cvt.rn.f32.u32	%f922, %r72;
	mul.f32 	%f1394, %f922, %f1377;
	mul.f32 	%f1395, %f922, %f1378;
	mul.f32 	%f1396, %f922, %f1379;

BB0_162:
	mov.u64 	%rd191, localLights;
	cvta.global.u64 	%rd190, %rd191;
	mov.u32 	%r666, 96;
	// inline asm
	call (%rd186, %rd187, %rd188, %rd189), _rt_buffer_get_size_64, (%rd190, %r455, %r666);
	// inline asm
	cvt.u32.u64	%r667, %rd186;
	setp.eq.s32	%p107, %r667, 0;
	@%p107 bra 	BB0_188;

	ld.global.f32 	%f930, [cameraPos];
	sub.f32 	%f927, %f72, %f930;
	ld.global.f32 	%f931, [cameraPos+4];
	sub.f32 	%f928, %f73, %f931;
	ld.global.f32 	%f932, [cameraPos+8];
	sub.f32 	%f929, %f74, %f932;
	ld.global.u32 	%r668, [tileCubemap];
	mov.u32 	%r669, 6;
	mov.u32 	%r670, 0;
	// inline asm
	call (%f923, %f924, %f925, %f926), _rt_texture_get_base_id, (%r668, %r669, %f927, %f928, %f929, %r670);
	// inline asm
	mov.b32 	 %r214, %f924;
	setp.eq.s32	%p108, %r214, 0;
	@%p108 bra 	BB0_188;

	mov.b32 	 %r675, %f923;
	cvt.rn.f32.u32	%f244, %r214;
	mul.f32 	%f935, %f3, %f244;
	cvt.rzi.u32.f32	%r676, %f935;
	add.s32 	%r677, %r214, -1;
	min.u32 	%r678, %r676, %r677;
	add.s32 	%r679, %r678, %r675;
	cvt.u64.u32	%rd194, %r679;
	mov.u64 	%rd204, localLightIndices;
	cvta.global.u64 	%rd193, %rd204;
	mov.u32 	%r672, 4;
	mov.u64 	%rd203, 0;
	// inline asm
	call (%rd192), _rt_buffer_get_64, (%rd193, %r455, %r672, %rd194, %rd203, %rd203, %rd203);
	// inline asm
	ld.u32 	%rd200, [%rd192];
	// inline asm
	call (%rd198), _rt_buffer_get_64, (%rd190, %r455, %r666, %rd200, %rd203, %rd203, %rd203);
	// inline asm
	ld.v4.f32 	{%f936, %f937, %f938, %f939}, [%rd198+80];
	ld.v4.f32 	{%f940, %f941, %f942, %f943}, [%rd198+64];
	ld.v4.f32 	{%f944, %f945, %f946, %f947}, [%rd198+48];
	ld.v4.f32 	{%f1386, %f1387, %f1388, %f951}, [%rd198+32];
	ld.v4.f32 	{%f952, %f953, %f954, %f955}, [%rd198+16];
	ld.v4.f32 	{%f956, %f957, %f958, %f959}, [%rd198];
	sub.f32 	%f960, %f957, %f72;
	sub.f32 	%f961, %f958, %f73;
	sub.f32 	%f962, %f959, %f74;
	mul.f32 	%f963, %f961, %f961;
	fma.rn.f32 	%f964, %f960, %f960, %f963;
	fma.rn.f32 	%f965, %f962, %f962, %f964;
	sqrt.rn.f32 	%f272, %f965;
	rcp.rn.f32 	%f966, %f272;
	mul.f32 	%f273, %f960, %f966;
	mul.f32 	%f274, %f961, %f966;
	mul.f32 	%f275, %f962, %f966;
	mul.f32 	%f276, %f955, %f272;
	mov.f32 	%f970, 0f40800000;
	abs.f32 	%f278, %f276;
	setp.lt.f32	%p109, %f278, 0f00800000;
	mul.f32 	%f972, %f278, 0f4B800000;
	selp.f32	%f973, 0fC3170000, 0fC2FE0000, %p109;
	selp.f32	%f974, %f972, %f278, %p109;
	mov.b32 	 %r680, %f974;
	and.b32  	%r681, %r680, 8388607;
	or.b32  	%r682, %r681, 1065353216;
	mov.b32 	 %f975, %r682;
	shr.u32 	%r683, %r680, 23;
	cvt.rn.f32.u32	%f976, %r683;
	add.f32 	%f977, %f973, %f976;
	setp.gt.f32	%p110, %f975, 0f3FB504F3;
	mul.f32 	%f978, %f975, 0f3F000000;
	add.f32 	%f979, %f977, 0f3F800000;
	selp.f32	%f980, %f978, %f975, %p110;
	selp.f32	%f981, %f979, %f977, %p110;
	add.f32 	%f982, %f980, 0fBF800000;
	add.f32 	%f934, %f980, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f933,%f934;
	// inline asm
	add.f32 	%f983, %f982, %f982;
	mul.f32 	%f984, %f933, %f983;
	mul.f32 	%f985, %f984, %f984;
	mov.f32 	%f986, 0f3C4CAF63;
	mov.f32 	%f987, 0f3B18F0FE;
	fma.rn.f32 	%f988, %f987, %f985, %f986;
	mov.f32 	%f989, 0f3DAAAABD;
	fma.rn.f32 	%f990, %f988, %f985, %f989;
	mul.rn.f32 	%f991, %f990, %f985;
	mul.rn.f32 	%f992, %f991, %f984;
	sub.f32 	%f993, %f982, %f984;
	neg.f32 	%f994, %f984;
	add.f32 	%f995, %f993, %f993;
	fma.rn.f32 	%f996, %f994, %f982, %f995;
	mul.rn.f32 	%f997, %f933, %f996;
	add.f32 	%f998, %f992, %f984;
	sub.f32 	%f999, %f984, %f998;
	add.f32 	%f1000, %f992, %f999;
	add.f32 	%f1001, %f997, %f1000;
	add.f32 	%f1002, %f998, %f1001;
	sub.f32 	%f1003, %f998, %f1002;
	add.f32 	%f1004, %f1001, %f1003;
	mov.f32 	%f1005, 0f3F317200;
	mul.rn.f32 	%f1006, %f981, %f1005;
	mov.f32 	%f1007, 0f35BFBE8E;
	mul.rn.f32 	%f1008, %f981, %f1007;
	add.f32 	%f1009, %f1006, %f1002;
	sub.f32 	%f1010, %f1006, %f1009;
	add.f32 	%f1011, %f1002, %f1010;
	add.f32 	%f1012, %f1004, %f1011;
	add.f32 	%f1013, %f1008, %f1012;
	add.f32 	%f1014, %f1009, %f1013;
	sub.f32 	%f1015, %f1009, %f1014;
	add.f32 	%f1016, %f1013, %f1015;
	mul.rn.f32 	%f279, %f970, %f1014;
	neg.f32 	%f1017, %f279;
	fma.rn.f32 	%f1018, %f970, %f1014, %f1017;
	fma.rn.f32 	%f1019, %f970, %f1016, %f1018;
	mov.f32 	%f1020, 0f00000000;
	fma.rn.f32 	%f280, %f1020, %f1014, %f1019;
	add.rn.f32 	%f281, %f279, %f280;
	mov.b32 	 %r684, %f281;
	setp.eq.s32	%p1, %r684, 1118925336;
	add.s32 	%r685, %r684, -1;
	mov.b32 	 %f1021, %r685;
	selp.f32	%f1022, %f1021, %f281, %p1;
	mul.f32 	%f1023, %f1022, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1024, %f1023;
	mov.f32 	%f1025, 0fBF317200;
	fma.rn.f32 	%f1026, %f1024, %f1025, %f1022;
	mov.f32 	%f1027, 0fB5BFBE8E;
	fma.rn.f32 	%f1028, %f1024, %f1027, %f1026;
	mul.f32 	%f1029, %f1028, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1030, %f1029;
	add.f32 	%f1031, %f1024, 0f00000000;
	ex2.approx.f32 	%f1032, %f1031;
	mul.f32 	%f1033, %f1030, %f1032;
	setp.lt.f32	%p111, %f1022, 0fC2D20000;
	selp.f32	%f1034, 0f00000000, %f1033, %p111;
	setp.gt.f32	%p112, %f1022, 0f42D20000;
	selp.f32	%f1383, 0f7F800000, %f1034, %p112;
	setp.eq.f32	%p113, %f1383, 0f7F800000;
	@%p113 bra 	BB0_166;

	neg.f32 	%f1035, %f281;
	add.rn.f32 	%f1036, %f279, %f1035;
	add.rn.f32 	%f1037, %f1036, %f280;
	add.f32 	%f1038, %f1037, 0f37000000;
	selp.f32	%f1039, %f1038, %f1037, %p1;
	fma.rn.f32 	%f1383, %f1383, %f1039, %f1383;

BB0_166:
	mov.f32 	%f1313, 0f40000000;
	cvt.rzi.f32.f32	%f1312, %f1313;
	add.f32 	%f1311, %f1312, %f1312;
	mov.f32 	%f1310, 0f40800000;
	sub.f32 	%f1309, %f1310, %f1311;
	abs.f32 	%f1308, %f1309;
	setp.lt.f32	%p114, %f276, 0f00000000;
	setp.eq.f32	%p115, %f1308, 0f3F800000;
	and.pred  	%p2, %p114, %p115;
	mov.b32 	 %r686, %f1383;
	xor.b32  	%r687, %r686, -2147483648;
	mov.b32 	 %f1040, %r687;
	selp.f32	%f1385, %f1040, %f1383, %p2;
	setp.eq.f32	%p116, %f276, 0f00000000;
	@%p116 bra 	BB0_169;
	bra.uni 	BB0_167;

BB0_169:
	add.f32 	%f1043, %f276, %f276;
	selp.f32	%f1385, %f1043, 0f00000000, %p115;
	bra.uni 	BB0_170;

BB0_167:
	setp.geu.f32	%p117, %f276, 0f00000000;
	@%p117 bra 	BB0_170;

	mov.f32 	%f1317, 0f40800000;
	cvt.rzi.f32.f32	%f1042, %f1317;
	setp.neu.f32	%p118, %f1042, 0f40800000;
	selp.f32	%f1385, 0f7FFFFFFF, %f1385, %p118;

BB0_170:
	add.f32 	%f1044, %f278, 0f40800000;
	mov.b32 	 %r688, %f1044;
	setp.lt.s32	%p120, %r688, 2139095040;
	@%p120 bra 	BB0_175;

	setp.gtu.f32	%p121, %f278, 0f7F800000;
	@%p121 bra 	BB0_174;
	bra.uni 	BB0_172;

BB0_174:
	add.f32 	%f1385, %f276, 0f40800000;
	bra.uni 	BB0_175;

BB0_172:
	setp.neu.f32	%p122, %f278, 0f7F800000;
	@%p122 bra 	BB0_175;

	selp.f32	%f1385, 0fFF800000, 0f7F800000, %p2;

BB0_175:
	add.u64 	%rd280, %SP, 32;
	cvta.to.local.u64 	%rd279, %rd280;
	add.s64 	%rd278, %rd279, 12;
	mul.f32 	%f1045, %f953, %f272;
	mov.f32 	%f1390, 0f3F800000;
	sub.f32 	%f1047, %f1390, %f1385;
	setp.eq.f32	%p123, %f276, 0f3F800000;
	selp.f32	%f1048, 0f00000000, %f1047, %p123;
	cvt.sat.f32.f32	%f1049, %f1048;
	fma.rn.f32 	%f1050, %f1045, %f1045, %f954;
	div.rn.f32 	%f1389, %f1049, %f1050;
	ld.local.f32 	%f1051, [%rd278+-12];
	ld.local.f32 	%f1052, [%rd278+-8];
	mul.f32 	%f1053, %f274, %f1052;
	fma.rn.f32 	%f1054, %f273, %f1051, %f1053;
	ld.local.f32 	%f1055, [%rd278+-4];
	fma.rn.f32 	%f1056, %f275, %f1055, %f1054;
	cvt.sat.f32.f32	%f308, %f1056;
	setp.eq.f32	%p124, %f956, 0f3F800000;
	@%p124 bra 	BB0_181;
	bra.uni 	BB0_176;

BB0_181:
	setp.leu.f32	%p128, %f951, 0f00000000;
	@%p128 bra 	BB0_183;

	mov.u32 	%r869, 2;
	mul.f32 	%f1087, %f936, %f273;
	mul.f32 	%f1088, %f937, %f274;
	neg.f32 	%f1089, %f1088;
	sub.f32 	%f1090, %f1089, %f1087;
	mul.f32 	%f1091, %f938, %f275;
	sub.f32 	%f1092, %f1090, %f1091;
	setp.gt.f32	%p129, %f1092, 0f00000000;
	selp.f32	%f1093, 0f3F800000, 0f00000000, %p129;
	mul.f32 	%f1094, %f945, %f274;
	fma.rn.f32 	%f1095, %f944, %f273, %f1094;
	mul.f32 	%f1096, %f941, %f274;
	fma.rn.f32 	%f1097, %f940, %f273, %f1096;
	fma.rn.f32 	%f1098, %f946, %f275, %f1095;
	fma.rn.f32 	%f1099, %f942, %f275, %f1097;
	fma.rn.f32 	%f1100, %f947, %f1098, 0f3F000000;
	mov.f32 	%f1101, 0f3F800000;
	sub.f32 	%f1083, %f1101, %f1100;
	fma.rn.f32 	%f1084, %f947, %f1099, 0f3F000000;
	cvt.rzi.s32.f32	%r692, %f951;
	mov.f32 	%f1086, 0f00000000;
	// inline asm
	call (%f1079, %f1080, %f1081, %f1082), _rt_texture_get_f_id, (%r692, %r869, %f1083, %f1084, %f1086, %f1086);
	// inline asm
	mul.f32 	%f1102, %f1093, %f1079;
	mul.f32 	%f1103, %f1093, %f1080;
	mul.f32 	%f1104, %f1093, %f1081;
	mul.f32 	%f1386, %f1386, %f1102;
	mul.f32 	%f1387, %f1387, %f1103;
	mul.f32 	%f1388, %f1388, %f1104;
	bra.uni 	BB0_183;

BB0_176:
	setp.eq.f32	%p125, %f956, 0f40000000;
	@%p125 bra 	BB0_179;
	bra.uni 	BB0_177;

BB0_179:
	setp.leu.f32	%p127, %f951, 0f00000000;
	@%p127 bra 	BB0_183;

	mov.u32 	%r868, 0;
	mov.u32 	%r867, 6;
	mul.f32 	%f1073, %f945, %f274;
	fma.rn.f32 	%f1074, %f944, %f273, %f1073;
	mul.f32 	%f1075, %f941, %f274;
	fma.rn.f32 	%f1076, %f940, %f273, %f1075;
	mul.f32 	%f1077, %f937, %f274;
	fma.rn.f32 	%f1078, %f936, %f273, %f1077;
	fma.rn.f32 	%f1070, %f946, %f275, %f1074;
	fma.rn.f32 	%f1071, %f942, %f275, %f1076;
	fma.rn.f32 	%f1072, %f938, %f275, %f1078;
	cvt.rzi.s32.f32	%r689, %f951;
	// inline asm
	call (%f1066, %f1067, %f1068, %f1069), _rt_texture_get_base_id, (%r689, %r867, %f1070, %f1071, %f1072, %r868);
	// inline asm
	mul.f32 	%f1386, %f1386, %f1066;
	mul.f32 	%f1387, %f1387, %f1067;
	mul.f32 	%f1388, %f1388, %f1068;
	bra.uni 	BB0_183;

BB0_177:
	setp.neu.f32	%p126, %f956, 0f40800000;
	@%p126 bra 	BB0_183;

	mul.f32 	%f1057, %f936, %f273;
	mul.f32 	%f1058, %f937, %f274;
	neg.f32 	%f1059, %f1058;
	sub.f32 	%f1060, %f1059, %f1057;
	mul.f32 	%f1061, %f938, %f275;
	sub.f32 	%f1062, %f1060, %f1061;
	fma.rn.f32 	%f1063, %f951, %f1062, %f947;
	cvt.sat.f32.f32	%f1064, %f1063;
	mul.f32 	%f1065, %f1064, %f1064;
	mul.f32 	%f1389, %f1389, %f1065;

BB0_183:
	mov.f32 	%f1391, 0f00000000;
	max.f32 	%f1108, %f1386, %f1387;
	max.f32 	%f1109, %f1108, %f1388;
	mul.f32 	%f320, %f308, %f1389;
	mul.f32 	%f1110, %f320, %f1109;
	setp.lt.f32	%p130, %f1110, 0f3727C5AC;
	mov.f32 	%f1392, %f1391;
	mov.f32 	%f1393, %f1391;
	@%p130 bra 	BB0_187;

	add.u64 	%rd206, %SP, 0;
	cvta.to.local.u64 	%rd43, %rd206;
	mov.u32 	%r694, 1065353216;
	st.local.u32 	[%rd43], %r694;
	setp.leu.f32	%p131, %f939, 0f00000000;
	@%p131 bra 	BB0_186;

	mov.u32 	%r856, 4;
	mov.f32 	%f1315, 0f38D1B717;
	mov.u32 	%r855, 1;
	fma.rn.f32 	%f1120, %f1, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f1121, %f2, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f1122, %f3, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f1123, %f1120, %f952, %f957;
	fma.rn.f32 	%f1124, %f1121, %f952, %f958;
	fma.rn.f32 	%f1125, %f1122, %f952, %f959;
	sub.f32 	%f1126, %f1123, %f72;
	sub.f32 	%f1127, %f1124, %f73;
	sub.f32 	%f1128, %f1125, %f74;
	mul.f32 	%f1129, %f1127, %f1127;
	fma.rn.f32 	%f1130, %f1126, %f1126, %f1129;
	fma.rn.f32 	%f1131, %f1128, %f1128, %f1130;
	sqrt.rn.f32 	%f1119, %f1131;
	rcp.rn.f32 	%f1132, %f1119;
	mul.f32 	%f1115, %f1126, %f1132;
	mul.f32 	%f1116, %f1127, %f1132;
	mul.f32 	%f1117, %f1128, %f1132;
	mul.f32 	%f1133, %f72, 0f3456BF95;
	abs.f32 	%f1134, %f1133;
	mul.f32 	%f1135, %f73, 0f3456BF95;
	abs.f32 	%f1136, %f1135;
	mul.f32 	%f1137, %f74, 0f3456BF95;
	abs.f32 	%f1138, %f1137;
	max.f32 	%f1139, %f1134, %f1136;
	max.f32 	%f1140, %f1139, %f1138;
	max.f32 	%f1118, %f1140, %f1315;
	ld.global.u32 	%r695, [root];
	// inline asm
	call _rt_trace_64, (%r695, %f72, %f73, %f74, %f1115, %f1116, %f1117, %r855, %f1118, %f1119, %rd206, %r856);
	// inline asm
	ld.local.f32 	%f1390, [%rd43];

BB0_186:
	ld.global.u32 	%r698, [bounceFlag];
	setp.gt.s32	%p132, %r698, 0;
	mul.f32 	%f1142, %f320, %f1390;
	mul.f32 	%f1143, %f943, %f1142;
	selp.f32	%f1144, %f1143, %f1142, %p132;
	mul.f32 	%f1391, %f1386, %f1144;
	mul.f32 	%f1392, %f1387, %f1144;
	mul.f32 	%f1393, %f1388, %f1144;

BB0_187:
	fma.rn.f32 	%f1394, %f244, %f1391, %f1394;
	fma.rn.f32 	%f1395, %f244, %f1392, %f1395;
	fma.rn.f32 	%f1396, %f244, %f1393, %f1396;

BB0_188:
	add.u64 	%rd283, %SP, 32;
	cvta.to.local.u64 	%rd282, %rd283;
	add.s64 	%rd281, %rd282, 12;
	ld.local.f32 	%f337, [%rd281+-8];
	ld.local.f32 	%f336, [%rd281+-4];
	ld.local.f32 	%f335, [%rd281+-12];
	abs.f32 	%f1145, %f335;
	abs.f32 	%f1146, %f336;
	setp.gt.f32	%p133, %f1145, %f1146;
	neg.f32 	%f1147, %f337;
	neg.f32 	%f1148, %f336;
	selp.f32	%f1149, %f1147, 0f00000000, %p133;
	selp.f32	%f1150, %f335, %f1148, %p133;
	selp.f32	%f1151, 0f00000000, %f337, %p133;
	mul.f32 	%f1152, %f1150, %f1150;
	fma.rn.f32 	%f1153, %f1149, %f1149, %f1152;
	fma.rn.f32 	%f1154, %f1151, %f1151, %f1153;
	sqrt.rn.f32 	%f1155, %f1154;
	rcp.rn.f32 	%f1156, %f1155;
	mul.f32 	%f338, %f1149, %f1156;
	mul.f32 	%f339, %f1150, %f1156;
	mul.f32 	%f340, %f1151, %f1156;
	sqrt.rn.f32 	%f341, %f1;
	add.u64 	%rd208, %SP, 0;
	cvta.to.local.u64 	%rd44, %rd208;
	mul.f32 	%f1403, %f2, 0f40C90FDB;
	abs.f32 	%f343, %f1403;
	setp.neu.f32	%p134, %f343, 0f7F800000;
	mov.f32 	%f1397, %f1403;
	@%p134 bra 	BB0_190;

	mov.f32 	%f1157, 0f00000000;
	mul.rn.f32 	%f1397, %f1403, %f1157;

BB0_190:
	mul.f32 	%f1158, %f1397, 0f3F22F983;
	cvt.rni.s32.f32	%r939, %f1158;
	cvt.rn.f32.s32	%f1159, %r939;
	neg.f32 	%f1160, %f1159;
	mov.f32 	%f1161, 0f3FC90FDA;
	fma.rn.f32 	%f1162, %f1160, %f1161, %f1397;
	mov.f32 	%f1163, 0f33A22168;
	fma.rn.f32 	%f1164, %f1160, %f1163, %f1162;
	mov.f32 	%f1165, 0f27C234C5;
	fma.rn.f32 	%f1398, %f1160, %f1165, %f1164;
	abs.f32 	%f1166, %f1397;
	add.s64 	%rd45, %rd44, 24;
	setp.leu.f32	%p135, %f1166, 0f47CE4780;
	@%p135 bra 	BB0_201;

	mov.b32 	 %r216, %f1397;
	shr.u32 	%r217, %r216, 23;
	shl.b32 	%r701, %r216, 8;
	or.b32  	%r218, %r701, -2147483648;
	mov.u32 	%r931, 0;
	mov.u64 	%rd298, __cudart_i2opi_f;
	mov.u32 	%r930, -6;
	mov.u64 	%rd299, %rd44;

BB0_192:
	.pragma "nounroll";
	ld.const.u32 	%r704, [%rd298];
	// inline asm
	{
	mad.lo.cc.u32   %r702, %r704, %r218, %r931;
	madc.hi.u32     %r931, %r704, %r218,  0;
	}
	// inline asm
	st.local.u32 	[%rd299], %r702;
	add.s64 	%rd299, %rd299, 4;
	add.s64 	%rd298, %rd298, 4;
	add.s32 	%r930, %r930, 1;
	setp.ne.s32	%p136, %r930, 0;
	@%p136 bra 	BB0_192;

	and.b32  	%r707, %r217, 255;
	add.s32 	%r708, %r707, -128;
	shr.u32 	%r709, %r708, 5;
	and.b32  	%r223, %r216, -2147483648;
	st.local.u32 	[%rd45], %r931;
	mov.u32 	%r710, 6;
	sub.s32 	%r711, %r710, %r709;
	mul.wide.s32 	%rd210, %r711, 4;
	add.s64 	%rd50, %rd44, %rd210;
	ld.local.u32 	%r932, [%rd50];
	ld.local.u32 	%r933, [%rd50+-4];
	and.b32  	%r226, %r217, 31;
	setp.eq.s32	%p137, %r226, 0;
	@%p137 bra 	BB0_195;

	mov.u32 	%r712, 32;
	sub.s32 	%r713, %r712, %r226;
	shr.u32 	%r714, %r933, %r713;
	shl.b32 	%r715, %r932, %r226;
	add.s32 	%r932, %r714, %r715;
	ld.local.u32 	%r716, [%rd50+-8];
	shr.u32 	%r717, %r716, %r713;
	shl.b32 	%r718, %r933, %r226;
	add.s32 	%r933, %r717, %r718;

BB0_195:
	shr.u32 	%r719, %r933, 30;
	shl.b32 	%r720, %r932, 2;
	add.s32 	%r934, %r719, %r720;
	shl.b32 	%r232, %r933, 2;
	shr.u32 	%r721, %r934, 31;
	shr.u32 	%r722, %r932, 30;
	add.s32 	%r233, %r721, %r722;
	setp.eq.s32	%p138, %r721, 0;
	@%p138 bra 	BB0_196;

	not.b32 	%r723, %r934;
	neg.s32 	%r936, %r232;
	setp.eq.s32	%p139, %r232, 0;
	selp.u32	%r724, 1, 0, %p139;
	add.s32 	%r934, %r724, %r723;
	xor.b32  	%r935, %r223, -2147483648;
	bra.uni 	BB0_198;

BB0_196:
	mov.u32 	%r935, %r223;
	mov.u32 	%r936, %r232;

BB0_198:
	clz.b32 	%r938, %r934;
	setp.eq.s32	%p140, %r938, 0;
	shl.b32 	%r725, %r934, %r938;
	mov.u32 	%r726, 32;
	sub.s32 	%r727, %r726, %r938;
	shr.u32 	%r728, %r936, %r727;
	add.s32 	%r729, %r728, %r725;
	selp.b32	%r241, %r934, %r729, %p140;
	mov.u32 	%r730, -921707870;
	mul.hi.u32 	%r937, %r241, %r730;
	setp.eq.s32	%p141, %r223, 0;
	neg.s32 	%r731, %r233;
	selp.b32	%r939, %r233, %r731, %p141;
	setp.lt.s32	%p142, %r937, 1;
	@%p142 bra 	BB0_200;

	mul.lo.s32 	%r732, %r241, -921707870;
	shr.u32 	%r733, %r732, 31;
	shl.b32 	%r734, %r937, 1;
	add.s32 	%r937, %r733, %r734;
	add.s32 	%r938, %r938, 1;

BB0_200:
	mov.u32 	%r735, 126;
	sub.s32 	%r736, %r735, %r938;
	shl.b32 	%r737, %r736, 23;
	add.s32 	%r738, %r937, 1;
	shr.u32 	%r739, %r738, 7;
	add.s32 	%r740, %r739, 1;
	shr.u32 	%r741, %r740, 1;
	add.s32 	%r742, %r741, %r737;
	or.b32  	%r743, %r742, %r935;
	mov.b32 	 %f1398, %r743;

BB0_201:
	mul.rn.f32 	%f349, %f1398, %f1398;
	add.s32 	%r249, %r939, 1;
	and.b32  	%r250, %r249, 1;
	setp.eq.s32	%p143, %r250, 0;
	@%p143 bra 	BB0_203;

	mov.f32 	%f1167, 0fBAB6061A;
	mov.f32 	%f1168, 0f37CCF5CE;
	fma.rn.f32 	%f1399, %f1168, %f349, %f1167;
	bra.uni 	BB0_204;

BB0_203:
	mov.f32 	%f1169, 0f3C08839E;
	mov.f32 	%f1170, 0fB94CA1F9;
	fma.rn.f32 	%f1399, %f1170, %f349, %f1169;

BB0_204:
	@%p143 bra 	BB0_206;

	mov.f32 	%f1171, 0f3D2AAAA5;
	fma.rn.f32 	%f1172, %f1399, %f349, %f1171;
	mov.f32 	%f1173, 0fBF000000;
	fma.rn.f32 	%f1400, %f1172, %f349, %f1173;
	bra.uni 	BB0_207;

BB0_206:
	mov.f32 	%f1174, 0fBE2AAAA3;
	fma.rn.f32 	%f1175, %f1399, %f349, %f1174;
	mov.f32 	%f1176, 0f00000000;
	fma.rn.f32 	%f1400, %f1175, %f349, %f1176;

BB0_207:
	fma.rn.f32 	%f1401, %f1400, %f1398, %f1398;
	@%p143 bra 	BB0_209;

	mov.f32 	%f1177, 0f3F800000;
	fma.rn.f32 	%f1401, %f1400, %f349, %f1177;

BB0_209:
	and.b32  	%r744, %r249, 2;
	setp.eq.s32	%p146, %r744, 0;
	@%p146 bra 	BB0_211;

	mov.f32 	%f1178, 0f00000000;
	mov.f32 	%f1179, 0fBF800000;
	fma.rn.f32 	%f1401, %f1401, %f1179, %f1178;

BB0_211:
	@%p134 bra 	BB0_213;

	mov.f32 	%f1180, 0f00000000;
	mul.rn.f32 	%f1403, %f1403, %f1180;

BB0_213:
	mul.f32 	%f1181, %f1403, 0f3F22F983;
	cvt.rni.s32.f32	%r949, %f1181;
	cvt.rn.f32.s32	%f1182, %r949;
	neg.f32 	%f1183, %f1182;
	fma.rn.f32 	%f1185, %f1183, %f1161, %f1403;
	fma.rn.f32 	%f1187, %f1183, %f1163, %f1185;
	fma.rn.f32 	%f1404, %f1183, %f1165, %f1187;
	abs.f32 	%f1189, %f1403;
	setp.leu.f32	%p148, %f1189, 0f47CE4780;
	@%p148 bra 	BB0_224;

	mov.b32 	 %r252, %f1403;
	shr.u32 	%r253, %r252, 23;
	shl.b32 	%r747, %r252, 8;
	or.b32  	%r254, %r747, -2147483648;
	mov.u32 	%r941, 0;
	mov.u64 	%rd300, __cudart_i2opi_f;
	mov.u32 	%r940, -6;
	mov.u64 	%rd301, %rd44;

BB0_215:
	.pragma "nounroll";
	ld.const.u32 	%r750, [%rd300];
	// inline asm
	{
	mad.lo.cc.u32   %r748, %r750, %r254, %r941;
	madc.hi.u32     %r941, %r750, %r254,  0;
	}
	// inline asm
	st.local.u32 	[%rd301], %r748;
	add.s64 	%rd301, %rd301, 4;
	add.s64 	%rd300, %rd300, 4;
	add.s32 	%r940, %r940, 1;
	setp.ne.s32	%p149, %r940, 0;
	@%p149 bra 	BB0_215;

	and.b32  	%r753, %r253, 255;
	add.s32 	%r754, %r753, -128;
	shr.u32 	%r755, %r754, 5;
	and.b32  	%r259, %r252, -2147483648;
	st.local.u32 	[%rd45], %r941;
	mov.u32 	%r756, 6;
	sub.s32 	%r757, %r756, %r755;
	mul.wide.s32 	%rd212, %r757, 4;
	add.s64 	%rd55, %rd44, %rd212;
	ld.local.u32 	%r942, [%rd55];
	ld.local.u32 	%r943, [%rd55+-4];
	and.b32  	%r262, %r253, 31;
	setp.eq.s32	%p150, %r262, 0;
	@%p150 bra 	BB0_218;

	mov.u32 	%r758, 32;
	sub.s32 	%r759, %r758, %r262;
	shr.u32 	%r760, %r943, %r759;
	shl.b32 	%r761, %r942, %r262;
	add.s32 	%r942, %r760, %r761;
	ld.local.u32 	%r762, [%rd55+-8];
	shr.u32 	%r763, %r762, %r759;
	shl.b32 	%r764, %r943, %r262;
	add.s32 	%r943, %r763, %r764;

BB0_218:
	shr.u32 	%r765, %r943, 30;
	shl.b32 	%r766, %r942, 2;
	add.s32 	%r944, %r765, %r766;
	shl.b32 	%r268, %r943, 2;
	shr.u32 	%r767, %r944, 31;
	shr.u32 	%r768, %r942, 30;
	add.s32 	%r269, %r767, %r768;
	setp.eq.s32	%p151, %r767, 0;
	@%p151 bra 	BB0_219;

	not.b32 	%r769, %r944;
	neg.s32 	%r946, %r268;
	setp.eq.s32	%p152, %r268, 0;
	selp.u32	%r770, 1, 0, %p152;
	add.s32 	%r944, %r770, %r769;
	xor.b32  	%r945, %r259, -2147483648;
	bra.uni 	BB0_221;

BB0_219:
	mov.u32 	%r945, %r259;
	mov.u32 	%r946, %r268;

BB0_221:
	clz.b32 	%r948, %r944;
	setp.eq.s32	%p153, %r948, 0;
	shl.b32 	%r771, %r944, %r948;
	mov.u32 	%r772, 32;
	sub.s32 	%r773, %r772, %r948;
	shr.u32 	%r774, %r946, %r773;
	add.s32 	%r775, %r774, %r771;
	selp.b32	%r277, %r944, %r775, %p153;
	mov.u32 	%r776, -921707870;
	mul.hi.u32 	%r947, %r277, %r776;
	setp.eq.s32	%p154, %r259, 0;
	neg.s32 	%r777, %r269;
	selp.b32	%r949, %r269, %r777, %p154;
	setp.lt.s32	%p155, %r947, 1;
	@%p155 bra 	BB0_223;

	mul.lo.s32 	%r778, %r277, -921707870;
	shr.u32 	%r779, %r778, 31;
	shl.b32 	%r780, %r947, 1;
	add.s32 	%r947, %r779, %r780;
	add.s32 	%r948, %r948, 1;

BB0_223:
	mov.u32 	%r781, 126;
	sub.s32 	%r782, %r781, %r948;
	shl.b32 	%r783, %r782, 23;
	add.s32 	%r784, %r947, 1;
	shr.u32 	%r785, %r784, 7;
	add.s32 	%r786, %r785, 1;
	shr.u32 	%r787, %r786, 1;
	add.s32 	%r788, %r787, %r783;
	or.b32  	%r789, %r788, %r945;
	mov.b32 	 %f1404, %r789;

BB0_224:
	mul.rn.f32 	%f366, %f1404, %f1404;
	and.b32  	%r285, %r949, 1;
	setp.eq.s32	%p156, %r285, 0;
	@%p156 bra 	BB0_226;

	mov.f32 	%f1190, 0fBAB6061A;
	mov.f32 	%f1191, 0f37CCF5CE;
	fma.rn.f32 	%f1405, %f1191, %f366, %f1190;
	bra.uni 	BB0_227;

BB0_226:
	mov.f32 	%f1192, 0f3C08839E;
	mov.f32 	%f1193, 0fB94CA1F9;
	fma.rn.f32 	%f1405, %f1193, %f366, %f1192;

BB0_227:
	@%p156 bra 	BB0_229;

	mov.f32 	%f1194, 0f3D2AAAA5;
	fma.rn.f32 	%f1195, %f1405, %f366, %f1194;
	mov.f32 	%f1196, 0fBF000000;
	fma.rn.f32 	%f1406, %f1195, %f366, %f1196;
	bra.uni 	BB0_230;

BB0_229:
	mov.f32 	%f1197, 0fBE2AAAA3;
	fma.rn.f32 	%f1198, %f1405, %f366, %f1197;
	mov.f32 	%f1199, 0f00000000;
	fma.rn.f32 	%f1406, %f1198, %f366, %f1199;

BB0_230:
	fma.rn.f32 	%f1407, %f1406, %f1404, %f1404;
	@%p156 bra 	BB0_232;

	mov.f32 	%f1200, 0f3F800000;
	fma.rn.f32 	%f1407, %f1406, %f366, %f1200;

BB0_232:
	and.b32  	%r790, %r949, 2;
	setp.eq.s32	%p159, %r790, 0;
	@%p159 bra 	BB0_234;

	mov.f32 	%f1201, 0f00000000;
	mov.f32 	%f1202, 0fBF800000;
	fma.rn.f32 	%f1407, %f1407, %f1202, %f1201;

BB0_234:
	mov.f32 	%f1316, 0f38D1B717;
	mov.u32 	%r857, 1;
	mul.f32 	%f1211, %f341, %f1401;
	mul.f32 	%f1212, %f1211, %f1211;
	mov.f32 	%f1213, 0f3F800000;
	sub.f32 	%f1214, %f1213, %f1212;
	mul.f32 	%f1215, %f341, %f1407;
	mul.f32 	%f1216, %f1215, %f1215;
	sub.f32 	%f1217, %f1214, %f1216;
	mov.f32 	%f1218, 0f00000000;
	max.f32 	%f1219, %f1218, %f1217;
	sqrt.rn.f32 	%f1220, %f1219;
	mul.f32 	%f1221, %f338, %f1215;
	mul.f32 	%f1222, %f339, %f1215;
	mul.f32 	%f1223, %f340, %f1215;
	mul.f32 	%f1224, %f336, %f339;
	mul.f32 	%f1225, %f337, %f340;
	sub.f32 	%f1226, %f1224, %f1225;
	fma.rn.f32 	%f1227, %f1226, %f1211, %f1221;
	mul.f32 	%f1228, %f335, %f340;
	mul.f32 	%f1229, %f336, %f338;
	sub.f32 	%f1230, %f1228, %f1229;
	fma.rn.f32 	%f1231, %f1230, %f1211, %f1222;
	mul.f32 	%f1232, %f337, %f338;
	mul.f32 	%f1233, %f335, %f339;
	sub.f32 	%f1234, %f1232, %f1233;
	fma.rn.f32 	%f1235, %f1234, %f1211, %f1223;
	fma.rn.f32 	%f1206, %f335, %f1220, %f1227;
	fma.rn.f32 	%f1207, %f337, %f1220, %f1231;
	fma.rn.f32 	%f1208, %f336, %f1220, %f1235;
	add.u64 	%rd213, %SP, 28;
	cvta.to.local.u64 	%rd214, %rd213;
	mov.u32 	%r794, 1065353216;
	st.local.u32 	[%rd214], %r794;
	mul.f32 	%f1236, %f72, 0f3456BF95;
	abs.f32 	%f1237, %f1236;
	mul.f32 	%f1238, %f73, 0f3456BF95;
	abs.f32 	%f1239, %f1238;
	mul.f32 	%f1240, %f74, 0f3456BF95;
	abs.f32 	%f1241, %f1240;
	max.f32 	%f1242, %f1237, %f1239;
	max.f32 	%f1243, %f1242, %f1241;
	max.f32 	%f1209, %f1243, %f1316;
	ld.global.f32 	%f1210, [aoRadius];
	ld.global.u32 	%r791, [root];
	mov.u32 	%r793, 4;
	// inline asm
	call _rt_trace_64, (%r791, %f72, %f73, %f74, %f1206, %f1207, %f1208, %r857, %f1209, %f1210, %rd213, %r793);
	// inline asm
	ld.local.f32 	%f1418, [%rd214];
	mov.u16 	%rs10, 0;

BB0_236:
	mov.u64 	%rd285, GBufferAtten;
	cvta.global.u64 	%rd284, %rd285;
	mov.u32 	%r859, 12;
	mov.u32 	%r858, 2;
	abs.f32 	%f1255, %f1394;
	setp.gtu.f32	%p161, %f1255, 0f7F800000;
	selp.f32	%f1256, 0f00000000, %f1394, %p161;
	abs.f32 	%f1257, %f1395;
	setp.gtu.f32	%p162, %f1257, 0f7F800000;
	selp.f32	%f1258, 0f00000000, %f1395, %p162;
	abs.f32 	%f1259, %f1396;
	setp.gtu.f32	%p163, %f1259, 0f7F800000;
	selp.f32	%f1260, 0f00000000, %f1396, %p163;
	fma.rn.f32 	%f1422, %f1412, %f1256, %f1409;
	fma.rn.f32 	%f1423, %f1413, %f1258, %f1410;
	fma.rn.f32 	%f1424, %f1414, %f1260, %f1411;
	ld.global.v2.u32 	{%r800, %r801}, [pixelID];
	cvt.u64.u32	%rd217, %r800;
	cvt.u64.u32	%rd218, %r801;
	mov.u64 	%rd226, 0;
	// inline asm
	call (%rd215), _rt_buffer_get_64, (%rd284, %r858, %r859, %rd217, %rd218, %rd226, %rd226);
	// inline asm
	st.f32 	[%rd215+8], %f1414;
	st.f32 	[%rd215+4], %f1413;
	st.f32 	[%rd215], %f1412;
	ld.global.v2.u32 	{%r804, %r805}, [pixelID];
	cvt.u64.u32	%rd223, %r804;
	cvt.u64.u32	%rd224, %r805;
	mov.u64 	%rd228, accumBufferAdd;
	cvta.global.u64 	%rd222, %rd228;
	// inline asm
	call (%rd221), _rt_buffer_get_64, (%rd222, %r858, %r859, %rd223, %rd224, %rd226, %rd226);
	// inline asm
	ld.global.u32 	%r808, [bounceFlag];
	setp.eq.s32	%p164, %r808, 0;
	@%p164 bra 	BB0_238;

	ld.f32 	%f1261, [%rd221+8];
	ld.f32 	%f1262, [%rd221+4];
	ld.f32 	%f1263, [%rd221];
	add.f32 	%f1422, %f1422, %f1263;
	add.f32 	%f1423, %f1423, %f1262;
	add.f32 	%f1424, %f1424, %f1261;
	bra.uni 	BB0_243;

BB0_238:
	ld.global.u32 	%r286, [firstSkylight];
	setp.lt.s32	%p165, %r286, 0;
	setp.eq.s16	%p166, %rs10, 0;
	or.pred  	%p167, %p165, %p166;
	@%p167 bra 	BB0_243;

	cvt.s64.s32	%rd231, %r286;
	mov.u64 	%rd235, globalLights;
	cvta.global.u64 	%rd230, %rd235;
	mov.u32 	%r809, 1;
	mov.u32 	%r810, 48;
	// inline asm
	call (%rd229), _rt_buffer_get_64, (%rd230, %r809, %r810, %rd231, %rd226, %rd226, %rd226);
	// inline asm
	ld.v4.f32 	{%f1268, %f1269, %f1270, %f1271}, [%rd229+16];
	ld.v4.f32 	{%f1272, %f1273, %f1274, %f1275}, [%rd229];
	setp.neu.f32	%p168, %f1268, 0f00000000;
	setp.leu.f32	%p169, %f63, 0f00000000;
	and.pred  	%p170, %p168, %p169;
	@%p170 bra 	BB0_243;

	mov.f32 	%f1419, 0f3F800000;
	setp.leu.f32	%p171, %f1273, 0f00000000;
	mov.f32 	%f1420, %f1419;
	mov.f32 	%f1421, %f1419;
	@%p171 bra 	BB0_242;

	cvt.rzi.s32.f32	%r811, %f1274;
	neg.f32 	%f1285, %f62;
	neg.f32 	%f1284, %f63;
	neg.f32 	%f1283, %f64;
	mov.u32 	%r812, 6;
	mov.u32 	%r813, 0;
	// inline asm
	call (%f1421, %f1420, %f1419, %f1282), _rt_texture_get_base_id, (%r811, %r812, %f1283, %f1284, %f1285, %r813);
	// inline asm

BB0_242:
	mul.f32 	%f1422, %f1269, %f1421;
	mul.f32 	%f1423, %f1270, %f1420;
	mul.f32 	%f1424, %f1271, %f1419;

BB0_243:
	mov.u32 	%r861, 12;
	mov.u32 	%r860, 2;
	ld.global.v2.u32 	{%r818, %r819}, [pixelID];
	cvt.u64.u32	%rd238, %r818;
	cvt.u64.u32	%rd239, %r819;
	// inline asm
	call (%rd236), _rt_buffer_get_64, (%rd222, %r860, %r861, %rd238, %rd239, %rd226, %rd226);
	// inline asm
	st.f32 	[%rd236+8], %f1424;
	st.f32 	[%rd236+4], %f1423;
	st.f32 	[%rd236], %f1422;
	ld.global.v2.u32 	{%r822, %r823}, [pixelID];
	cvt.u64.u32	%rd244, %r822;
	cvt.u64.u32	%rd245, %r823;
	mov.u64 	%rd249, accumBufferLerp;
	cvta.global.u64 	%rd243, %rd249;
	// inline asm
	call (%rd242), _rt_buffer_get_64, (%rd243, %r860, %r861, %rd244, %rd245, %rd226, %rd226);
	// inline asm
	ld.f32 	%f1286, [%rd242+8];
	ld.f32 	%f1287, [%rd242+4];
	ld.f32 	%f1288, [%rd242];
	sub.f32 	%f1289, %f1422, %f1288;
	sub.f32 	%f1290, %f1423, %f1287;
	sub.f32 	%f1291, %f1424, %f1286;
	ld.global.f32 	%f1292, [integration];
	fma.rn.f32 	%f419, %f1292, %f1289, %f1288;
	fma.rn.f32 	%f420, %f1292, %f1290, %f1287;
	fma.rn.f32 	%f421, %f1292, %f1291, %f1286;
	ld.global.u32 	%r826, [finalBounceFlag];
	setp.eq.s32	%p172, %r826, 0;
	@%p172 bra 	BB0_245;

	mov.u32 	%r863, 12;
	mov.u32 	%r862, 2;
	ld.global.v2.u32 	{%r829, %r830}, [pixelID];
	cvt.u64.u32	%rd252, %r829;
	cvt.u64.u32	%rd253, %r830;
	// inline asm
	call (%rd250), _rt_buffer_get_64, (%rd243, %r862, %r863, %rd252, %rd253, %rd226, %rd226);
	// inline asm
	st.f32 	[%rd250+8], %f421;
	st.f32 	[%rd250+4], %f420;
	st.f32 	[%rd250], %f419;

BB0_245:
	mov.u32 	%r864, 2;
	ld.global.v2.u32 	{%r835, %r836}, [pixelID];
	cvt.u64.u32	%rd259, %r835;
	cvt.u64.u32	%rd260, %r836;
	mov.u64 	%rd263, accumBufferLerpAO;
	cvta.global.u64 	%rd258, %rd263;
	mov.u32 	%r834, 4;
	// inline asm
	call (%rd257), _rt_buffer_get_64, (%rd258, %r864, %r834, %rd259, %rd260, %rd226, %rd226);
	// inline asm
	ld.f32 	%f1425, [%rd257];
	ld.global.u32 	%r839, [bounceFlag];
	setp.ne.s32	%p173, %r839, 0;
	@%p173 bra 	BB0_247;

	mov.u32 	%r866, 2;
	ld.global.f32 	%f1293, [integration];
	sub.f32 	%f1294, %f1418, %f1425;
	fma.rn.f32 	%f1425, %f1294, %f1293, %f1425;
	ld.global.v2.u32 	{%r842, %r843}, [pixelID];
	cvt.u64.u32	%rd266, %r842;
	cvt.u64.u32	%rd267, %r843;
	// inline asm
	call (%rd264), _rt_buffer_get_64, (%rd258, %r866, %r834, %rd266, %rd267, %rd226, %rd226);
	// inline asm
	st.f32 	[%rd264], %f1425;

BB0_247:
	mov.u32 	%r865, 2;
	ld.global.f32 	%f1295, [aoIntensity];
	mul.f32 	%f1296, %f1295, 0f3F000000;
	add.f32 	%f1297, %f1425, 0fBF800000;
	fma.rn.f32 	%f1298, %f1297, %f1296, 0f3F800000;
	cvt.sat.f32.f32	%f1299, %f1298;
	mul.f32 	%f1300, %f419, %f1299;
	mul.f32 	%f1301, %f420, %f1299;
	mul.f32 	%f1302, %f421, %f1299;
	ld.global.u32 	%r848, [resolution+4];
	add.s32 	%r849, %r848, -1;
	ld.global.v2.u32 	{%r850, %r851}, [pixelID];
	sub.s32 	%r854, %r849, %r851;
	ld.global.f32 	%f1303, [cameraExp];
	cvt.u64.u32	%rd273, %r850;
	cvt.u64.u32	%rd274, %r854;
	mov.u64 	%rd277, colorOutput;
	cvta.global.u64 	%rd272, %rd277;
	mov.u32 	%r847, 16;
	// inline asm
	call (%rd271), _rt_buffer_get_64, (%rd272, %r865, %r847, %rd273, %rd274, %rd226, %rd226);
	// inline asm
	mul.f32 	%f1304, %f1302, %f1303;
	mul.f32 	%f1305, %f1301, %f1303;
	mul.f32 	%f1306, %f1300, %f1303;
	mov.f32 	%f1307, 0f3F800000;
	st.v4.f32 	[%rd271], {%f1306, %f1305, %f1304, %f1307};
	ret;
}


